// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

namespace nameless begin
  t @TimeScale { };

  compartment @Compartment 'compartment' { units: length, boundary: true, } .= 1;

  S1 @Species 'S1' { units: substance/length, boundary: false, compartment: compartment, isAmount: false, } .= 0.01 / compartment;
  S2 @Species 'S2' { units: substance/length, boundary: false, compartment: compartment, isAmount: false, } .= 0.015 / compartment;
  S3 @Species 'S3' { units: substance/length, boundary: false, compartment: compartment, isAmount: false, };
  S3 := k1 * S2;

  reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
  reaction1 := compartment * k2 * S1;

  k1 @Record 'k1' { } .= 0.75;
  k2 @Record 'k2' { } .= 50;
end

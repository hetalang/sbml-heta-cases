// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

namespace nameless begin
  t @TimeScale { };

  C @Compartment 'C' { units: volume, boundary: true, } .= 1;

  S1 @Species 'S1' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 1 / C;
  S2 @Species 'S2' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 0 / C;
  S3 @Species 'S3' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 1.5 / C;
  S4 @Species 'S4' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 0.5 / C;

  reaction1 @Reaction 'reaction1' { actors: S1 = S2, };
  reaction1 := C * (kf__reaction1_local * S1 + (-1) * kr__reaction1_local * S2);
  reaction2 @Reaction 'reaction2' { actors: S3 = S4, };
  reaction2 := C * (kf * S3 + (-1) * kr * S4);

  kf @Record 'kf' { } .= 0.9;
  kr @Record 'kr' { } .= 0.075;

  kf__reaction1_local @Const { } = 0.8;
  kr__reaction1_local @Const { } = 0.06;
end

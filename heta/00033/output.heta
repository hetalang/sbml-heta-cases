/*
category:      Test
synopsis:      Rate rule used to determine parameter value which is used 
               in a reaction.
componentTags: Compartment, Species, Reaction, Parameter, RateRule 
testTags:      Amount, NonConstantParameter
testType:      TimeCourse
levels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2
generatedBy:   Numeric

The model contains one compartment called "compartment".  There are two
species called S1 and S2 and one parameter called k1, whose value is varying.
The model contains one reaction defined as:

[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |
| S1 -> S2 | $k1 * S1 * compartment$  |]

The model contains one rule:

[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |
| Rate | k1       | $0.5$   |]

The initial conditions are as follows:

[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |
|Initial amount of S1                |$1.5 \x 10^-1$ |mole                      |
|Initial amount of S2                |$            0$ |mole                      |
|Value of parameter k1               |$            1$ |second^-1^                |
|Volume of compartment "compartment" |$            1$ |litre                     |]

The species values are given as amounts of substance to make it easier to
use the model in a discrete stochastic simulator, but (as per usual SBML
principles) their symbols represent their values in concentration units
where they appear in expressions.

*/



t @TimeScale { units: second, };

compartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;
S2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := compartment * k1 * S1;
k1_proc @Process { actors:  = k1, aux: {{"metaid":"rule1"}}, };
k1_proc := 0.5;

k1 @Record 'k1' { } .= 1;


// This code was generated by Heta compiler, see https://hetalang.github.io
multiply #defineFunction { arguments: [x, y], math: x * y, };

t @TimeScale { };

C @Compartment 'C' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;
S2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;
S3 @Species 'S3' { units: mole/litre, compartment: C, };
S3 := multiply(k1, S2);

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := C * k2 * S1;

k1 @Const 'k1' { } = 1.5;
k2 @Const 'k2' { } = 5;


// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: litre, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: mole, };
time #defineUnit { units: second, };

t @TimeScale { };

C @Compartment 'C' { units: volume, boundary: true, } .= 1;

S1 @Species 'S1' { units: substance/volume, compartment: C, } .= 1.5 / C;
S2 @Species 'S2' { units: substance/volume, compartment: C, } .= 0 / C;
S3 @Species 'S3' { units: substance/volume, compartment: C, } .= 0 / C;
S4 @Species 'S4' { units: substance/volume, boundary: true, compartment: C, } .= 1 / C;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := C * k1 * S1;
S3_proc @Process { actors:  = S3, aux: {{"metaid":"rule1"}}, };
S3_proc := 0.15;

k1 @Record 'k1' { } .= 1.5;


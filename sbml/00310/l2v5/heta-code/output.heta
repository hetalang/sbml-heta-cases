// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: litre, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: mole, };
time #defineUnit { units: second, };

t @TimeScale { };

C @Compartment 'C' { units: volume, } .= 0.15;
C := p1 * p2;

S1 @Species 'S1' { units: substance/volume, compartment: C, } .= 1.5 / C;
S2 @Species 'S2' { units: substance/volume, compartment: C, } .= 0 / C;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := C * k1 * S1;
p2_proc @Process { actors:  = p2, aux: {{"metaid":"rule2"}}, };
p2_proc := 0.1;

k1 @Record 'k1' { } .= 0.9;
p1 @Record 'p1' { } .= 0.1;
p2 @Record 'p2' { } .= 1.5;


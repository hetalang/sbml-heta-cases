
add #defineFunction { arguments: [x, y], math: x + y, };

t @TimeScale { units: second, };

C @Compartment 'C' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;
S2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;
S3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;
S4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5 / C;
S4 [event1]= add(k3, k4);

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
reaction1 := C * k1 * S1 * S2;
reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };
reaction2 := C * k2 * S3;
S4_proc @Process { actors:  = S4, aux: {{"metaid":"rule1"}}, };
S4_proc := k2 * add(S1, S3);

k1 @Const 'k1' { } = 0.75;
k2 @Const 'k2' { } = 0.25;
k3 @Const 'k3' { } = 0.8;
k4 @Const 'k4' { } = 0.2;

event1 @DSwitcher 'event1' { trigger: S1 < 0.5, };


// This code was generated by Heta compiler, see https://hetalang.github.io

t @TimeScale { units: second, };

compartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;
S2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;
S3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1 / compartment;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
reaction1 := compartment * k1 * S1 * S2;
reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };
reaction2 := compartment * k2 * S3;
k1_proc @Process { actors:  = k1, aux: {{"metaid":"rule1"}}, };
k1_proc := 0.2;

k1 @Record 'k1' { } .= 1.7;

k2 @Const 'k2' { } = 0.3;


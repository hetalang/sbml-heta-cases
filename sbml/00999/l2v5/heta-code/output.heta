// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: litre, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: mole, };
time #defineUnit { units: second, };

t @TimeScale { };

comp1 @Compartment { boundary: true, } .= 10;
comp2 @Compartment { } .= 10;

S1 @Species { compartment: comp1, } .= 1;
S2 @Species { compartment: comp1, isAmount: true, } .= 2 * comp1;
S3 @Species { compartment: comp1, } .= 3 / comp1;
S4 @Species { compartment: comp1, isAmount: true, } .= 4;
S5 @Species { compartment: comp2, } .= 5;
S6 @Species { compartment: comp2, isAmount: true, } .= 6 * comp2;
S7 @Species { compartment: comp2, } .= 7 / comp2;
S8 @Species { compartment: comp2, isAmount: true, } .= 8;

comp2_proc @Process { actors:  = comp2, };
comp2_proc := 1;

p1 @Record { };
p1 := S1;
p2 @Record { };
p2 := S2;
p3 @Record { };
p3 := S3;
p4 @Record { };
p4 := S4;
p5 @Record { };
p5 := S5;
p6 @Record { };
p6 := S6;
p7 @Record { };
p7 := S7;
p8 @Record { };
p8 := S8;



volume #defineUnit { units: litre, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: mole, };
time #defineUnit { units: second, };
add #defineFunction { arguments: [x, y], math: x + y, };

t @TimeScale { };

C @Compartment 'C' { units: volume, boundary: true, } .= 2.5;

S1 @Species 'S1' { units: substance/volume, compartment: C, } .= 0.0015;
S2 @Species 'S2' { units: substance/volume, compartment: C, } .= 0;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := C * k1 * S1;
k1_proc @Process { actors:  = k1, aux: {{"metaid":"rule1"}}, };
k1_proc := add(k2, k3);

k1 @Record 'k1' { } .= 1;
k2 @Record 'k2' { } .= 0.2;
k3 @Record 'k3' { } .= 0.3;


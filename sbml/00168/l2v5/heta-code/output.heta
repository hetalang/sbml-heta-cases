// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: litre, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: mole, };
time #defineUnit { units: second, };

t @TimeScale { };

S1_proc @Process { actors:  = S1, aux: {{"metaid":"rule1"}}, };
S1_proc := (-1) * k1 * S1 * S2 + k2 * S3 + k3 * S3;
S2_proc @Process { actors:  = S2, aux: {{"metaid":"rule2"}}, };
S2_proc := k2 * S3 + (-1) * k1 * S1 * S2;
S3_proc @Process { actors:  = S3, aux: {{"metaid":"rule3"}}, };
S3_proc := k1 * S1 * S2 + (-1) * k2 * S3 + (-1) * k3 * S3;
S4_proc @Process { actors:  = S4, aux: {{"metaid":"rule4"}}, };
S4_proc := k3 * S3;

S1 @Record 'S1' { } .= 0.02;
S2 @Record 'S2' { } .= 0.02;
S3 @Record 'S3' { } .= 0;
S4 @Record 'S4' { } .= 0;
k1 @Record 'k1' { } .= 100;
k2 @Record 'k2' { } .= 0.9;
k3 @Record 'k3' { } .= 0.7;


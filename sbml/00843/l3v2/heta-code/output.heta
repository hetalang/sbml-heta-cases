// This code was generated by Heta compiler, see https://hetalang.github.io

t @TimeScale { units: second, };

C @Compartment 'C' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;
S2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;
S3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;
S4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;

reaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };
reaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);
S4_proc @Process { actors:  = S4, aux: {{"metaid":"rule1"}}, };
S4_proc := 0.15;

kf @Const 'kf' { } = 2.5;
kr @Const 'kr' { } = 0.2;


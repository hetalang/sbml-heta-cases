// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: litre, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: mole, };
time #defineUnit { units: second, };

t @TimeScale { };

C @Compartment 'C' { units: volume, boundary: true, } .= 1;

S1 @Species 'S1' { units: substance/volume, compartment: C, } .= 0.001 / C;
S1 [event1]= 0.002;
S2 @Species 'S2' { units: substance/volume, compartment: C, } .= 0.0012 / C;
S3 @Species 'S3' { units: substance/volume, compartment: C, } .= 0.0019 / C;
S3 [event2]= (1 / 1000);
S4 @Species 'S4' { units: substance/volume, boundary: true, compartment: C, } .= 0.001 / C;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
reaction1 := C * k1 * S1 * S2;
reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };
reaction2 := C * k2 * S3 * S4;

k1 @Record 'k1' { } .= 750;
k2 @Record 'k2' { } .= 250;

event1 @DSwitcher 'event1' { trigger: S2 < S4, };
event2 @DSwitcher 'event2' { trigger: S3 > 0.002, };


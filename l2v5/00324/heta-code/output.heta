// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

namespace nameless begin
  t @TimeScale { };

  compartment @Compartment 'compartment' { boundary: true, } .= 0;

  S1 @Species 'S1' { units: substance, boundary: false, compartment: compartment, isAmount: true, } .= 0.015;
  S2 @Species 'S2' { units: substance, boundary: false, compartment: compartment, isAmount: true, } .= 0.02;
  S3 @Species 'S3' { units: substance, boundary: false, compartment: compartment, isAmount: true, } .= 0.04;
  S4 @Species 'S4' { units: substance, boundary: false, compartment: compartment, isAmount: true, } .= 0.01;

  reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
  reaction1 := k1 * S1 * S2;
  reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };
  reaction2 := k2 * S3;
  S4_proc @Process { actors:  = S4, aux: {{"metaid":"rule1"}}, };
  S4_proc := (1 / 100);

  k1 @Record 'k1' { } .= 69;
  k2 @Record 'k2' { } .= 0.023;
end

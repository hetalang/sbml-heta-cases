// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };
multiply #defineFunction { arguments: [x, y], math: x * y, };

t @TimeScale { };

compartment @Compartment 'compartment' { units: volume, boundary: true, } .= 1;

S1 @Species 'S1' { units: substance, boundary: false, compartment: compartment, isAmount: true, } .= 0.15;
S2 @Species 'S2' { units: substance, boundary: false, compartment: compartment, isAmount: true, } .= 0;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := multiply(k1, S1);

k1 @Record 'k1' { } .= 1.5;


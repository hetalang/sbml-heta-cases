// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

namespace nameless begin
  t @TimeScale { };

  S1_proc @Process { actors:  = S1, aux: {{"metaid":"rule1"}}, };
  S1_proc := k2 * S2 + (-1) * k1 * S1;
  S3_proc @Process { actors:  = S3, aux: {{"metaid":"rule2"}}, };
  S3_proc := k3 * S2 + (-1) * k4 * S3 * S4;
  S4_proc @Process { actors:  = S4, aux: {{"metaid":"rule3"}}, };
  S4_proc := k3 * S2 + (-1) * k4 * S3 * S4;

  S1 @Record 'S1' { boundary: false, } .= 1e-4;
  S2 @Record 'S2' { } .= 2e-4;
  S3 @Record 'S3' { boundary: false, } .= 0;
  S4 @Record 'S4' { boundary: false, } .= 0;
  k1 @Record 'k1' { } .= 0.75;
  k2 @Record 'k2' { } .= 0.25;
  k3 @Record 'k3' { } .= 0.15;
  k4 @Record 'k4' { } .= 0.1;
end

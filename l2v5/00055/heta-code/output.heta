// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

namespace nameless begin
  t @TimeScale { };

  compartment @Compartment 'compartment' { units: volume, boundary: true, } .= 1;
  compartment1 @Compartment 'compartment1' { units: volume, boundary: true, } .= 1;

  S1 @Species 'S1' { units: substance/volume, boundary: false, compartment: compartment, isAmount: false, } .= 1 / compartment;
  S2 @Species 'S2' { units: substance/volume, boundary: false, compartment: compartment, isAmount: false, } .= 1 / compartment;
  S3 @Species 'S3' { units: substance/volume, boundary: false, compartment: compartment1, isAmount: false, } .= 0 / compartment1;
  S4 @Species 'S4' { units: substance/volume, boundary: false, compartment: compartment1, isAmount: false, } .= 0.1 / compartment1;

  reaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };
  reaction1 := compartment * k1 * S1 * S2;
  reaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };
  reaction2 := compartment1 * k2 * (S2 + (-1) * S3);
  reaction3 @Reaction 'reaction3' { actors: S3 + S4 = 2*S4, reversible: false, };
  reaction3 := compartment * k3 * S3 * S4;

  k1 @Record 'k1' { } .= 0.75;
  k2 @Record 'k2' { } .= 7.5;
  k3 @Record 'k3' { } .= 0.75;
end

// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

namespace nameless begin
  t @TimeScale { };

  compartment @Compartment 'compartment' { units: volume, boundary: true, } .= 1;

  S1 @Species 'S1' { units: substance/volume, boundary: false, compartment: compartment, isAmount: false, } .= 1 / compartment;
  S2 @Species 'S2' { units: substance/volume, boundary: false, compartment: compartment, isAmount: false, } .= 0 / compartment;

  reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
  reaction1 := factorial(ceil(p1 * S1)) * pow(p2, (-1));

  p1 @Record 'p1' { } .= 4;
  p2 @Record 'p2' { } .= 25;
end

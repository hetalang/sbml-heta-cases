// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

t @TimeScale { };

compartment @Compartment 'compartment' { units: volume, boundary: true, } .= 1;

S1 @Species 'S1' { units: substance/volume, compartment: compartment, } .= 5 / compartment;
S2 @Species 'S2' { units: substance/volume, compartment: compartment, } .= 0 / compartment;
S3 @Species 'S3' { units: substance/volume, compartment: compartment, } .= 4 / compartment;
S4 @Species 'S4' { units: substance/volume, compartment: compartment, } .= 0 / compartment;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := compartment * k1 * S1;
reaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };
reaction2 := ((S2 > 4 xor S2 < 1 xor S2 < 2) ? p1 : p2);

p1 @Record 'p1' { } .= 1.5;
p2 @Record 'p2' { } .= 0.05;
k1 @Record 'k1' { } .= 1;


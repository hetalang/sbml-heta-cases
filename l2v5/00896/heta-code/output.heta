// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

t @TimeScale { };

C @Compartment 'C' { units: volume, boundary: true, } .= 1;

S1 @Species 'S1' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 2 / C;
S2 @Species 'S2' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 2 / C;
S3 @Species 'S3' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 0 / C;
S4 @Species 'S4' { units: substance/volume, boundary: false, compartment: C, isAmount: false, } .= 0 / C;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
reaction1 := C * k1 * S1 * S2 * t;
reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };
reaction2 := C * k1__reaction2_local * S3 * t;
reaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };
reaction3 := C * k1__reaction3_local * S3 * t;

k1 @Record 'k1' { } .= 1;

k1__reaction2_local @Const { } = 0.9;
k1__reaction3_local @Const { } = 0.7;


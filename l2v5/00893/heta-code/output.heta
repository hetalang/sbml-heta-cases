// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

t @TimeScale { };

P3_proc @Process { actors:  = P3, aux: {{"metaid":"rule1"}}, };
P3_proc := k1 * t;
P1_proc @Process { actors:  = P1, aux: {{"metaid":"rule2"}}, };
P1_proc := (-1) * P1 * P3;
P2_proc @Process { actors:  = P2, aux: {{"metaid":"rule3"}}, };
P2_proc := P1 * P3;

P1 @Record 'P1' { boundary: false, } .= 0.0015;
P2 @Record 'P2' { boundary: false, } .= 0;
P3 @Record 'P3' { boundary: false, } .= 0.001;
k1 @Record 'k1' { } .= 0.5;


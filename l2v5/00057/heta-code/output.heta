// This code was generated by Heta compiler, see https://hetalang.github.io
volume #defineUnit { units: metre^3, };
area #defineUnit { units: metre^2, };
length #defineUnit { units: metre, };
substance #defineUnit { units: (1e-6 mole), };

namespace nameless begin
  t @TimeScale { };

  compartment @Compartment 'compartment' { units: volume, boundary: true, } .= 1;

  S1 @Species 'S1' { units: substance/volume, boundary: false, compartment: compartment, isAmount: false, } .= 3e-4 / compartment;
  S2 @Species 'S2' { units: substance/volume, boundary: false, compartment: compartment, isAmount: false, } .= 0 / compartment;
  S3 @Species 'S3' { units: substance/volume, boundary: false, compartment: compartment, isAmount: false, } .= 0 / compartment;

  reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
  reaction1 := compartment * k__reaction1_local * S1;
  reaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };
  reaction2 := compartment * k__reaction2_local * S2;

  k__reaction1_local @Const { } = 1;
  k__reaction2_local @Const { } = 2;
end

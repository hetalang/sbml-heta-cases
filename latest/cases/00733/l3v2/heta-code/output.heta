
multiply #defineFunction { arguments: [x, y], math: x * y, };

t @TimeScale { units: second, };

C @Compartment 'C' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-6 / C;
S2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-6 / C;
S3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5e-6 / C;
S4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-7 / C;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
reaction1 := C * k__reaction1_local * S1 * S2;
reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };
reaction2 := C * k__reaction2_local * S3;
S4_proc @Process { actors:  = S4, aux: {{"metaid":"rule1"}}, };
S4_proc := multiply(k, (1 / 2.5e+5));

k__reaction1_local @Const { } = 750000;
k__reaction2_local @Const { } = 0.3;
k @Const 'k' { } = 0.25;


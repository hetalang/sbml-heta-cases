/*
category:      Test
synopsis:      Basic two reactions with three species in a 1D compartment using 
initialAssignment to set the initial value of the compartment.
componentTags: Compartment, Species, Reaction, Parameter, InitialAssignment 
testTags:      Amount, InitialValueReassigned
testType:      TimeCourse
levels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2
generatedBy:   Numeric

The model contains one compartment called C.  There are three species called 
S1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is 
1-dimensional.  The model contains two reactions defined as:

[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |
| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |
| S3 -> S1 + S2 | $k2 * S3 * C$  |]

The model contains one initialAssignment:

[{width:30em,margin: 1em auto}| Variable | Formula |
 | C | $p1 * 2$  |]

Note: SBML's InitialAssignment construct override any declared initial
values.  In this model, the initial value for the compartment C has not been
explicitly declared and must be calculated using the InitialAssignment.

The initial conditions are as follows:

[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |
|Initial amount of S1        |$1.0$           |mole                      |
|Initial amount of S2        |$2.0$           |mole                      |
|Initial amount of S3        |$1.0$           |mole                      |
|Value of parameter k1       |$3.5$           |metre mole^-1^ second^-1^ |
|Value of parameter k2       |$1.5$           |second^-1^                |
|Value of parameter p1       |$0.5$           |metre                |
|Length of compartment C     |$undeclared$    |metre                  |]

The species values are given as amounts of substance to make it easier to
use the model in a discrete stochastic simulator, but (as per usual SBML
principles) they must be treated as concentrations where they appear in
expressions.

*/



t @TimeScale { units: second, };

C @Compartment 'C' { units: metre, boundary: true, } .= 2 * p1;

S1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1 / C;
S2 @Species 'S2' { units: mole/metre, compartment: C, } .= 2 / C;
S3 @Species 'S3' { units: mole/metre, compartment: C, } .= 1 / C;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
reaction1 := C * k1 * S1 * S2;
reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };
reaction2 := C * k2 * S3;

k1 @Const 'k1' { } = 3.5;
k2 @Const 'k2' { } = 1.5;
p1 @Const 'p1' { } = 0.5;



multiply #defineFunction { arguments: [x, y], math: x * y, };

t @TimeScale { units: second, };

compartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;
compartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;
S2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;
S3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };
reaction1 := compartment * S2 * multiply(k1, S1);
reaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };
reaction2 := compartment1 * k2 * (S2 + (-1) * S3);

k1 @Const 'k1' { } = 0.75;
k2 @Const 'k2' { } = 0.25;


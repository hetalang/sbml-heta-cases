/*
category:      Test
synopsis:      Two reactions and a rate rule with four species in a 2D compartment. 
componentTags: Compartment, Species, Reaction, Parameter, RateRule
testTags:      Amount
testType:      TimeCourse
levels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2
generatedBy:   Numeric

The model contains one compartment called "compartment".  There are four
species named S1, S2, S3 and S4 and two parameters named k1 and k2.
Compartment "compartment" is 2-dimensional.  The model contains two
reactions defined as:

[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |
| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |
| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]

The model contains one rule:

[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |
 | Rate | S4 | $1 10^-2$  |]


The initial conditions are as follows:

[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |
|Initial amount of S1              |$1.5 \x 10^-2$ |mole                      |
|Initial amount of S2              |$2.0 \x 10^-2$ |mole                      |
|Initial amount of S3              |$4.0 \x 10^-2$ |mole                      |
|Initial amount of S4              |$  1 \x 10^-2$ |mole                      |
|Value of parameter k1             |$0.69 \x 10^2$ |metre^2^ mole^-1^ second^-1^ |
|Value of parameter k2             |$0.23 \x 10^-1$ |second^-1^ |
|Area of compartment "compartment" |$            1$ |metre^2^                     |]

The species values are given as amounts of substance to make it easier to
use the model in a discrete stochastic simulator, but (as per usual SBML
principles) their symbols represent their values in concentration units
where they appear in expressions.

*/



t @TimeScale { units: second, };

compartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.015 / compartment;
S2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.02 / compartment;
S3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.04 / compartment;
S4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };
reaction1 := compartment * k1 * S1 * S2;
reaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };
reaction2 := compartment * k2 * S3;
S4_proc @Process { actors:  = S4, aux: {metaid: "rule1"}, };
S4_proc := (1 / 100);

k1 @Const 'k1' { } = 69;
k2 @Const 'k2' { } = 0.023;


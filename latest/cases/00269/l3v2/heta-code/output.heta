
calculate #defineFunction { arguments: [x, y, z], math: factorial(ceil(x * y)) * pow(z, (-1)), };

t @TimeScale { units: second, };

compartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;
S2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };
reaction1 := calculate(S1, p1, p2);

p1 @Const 'p1' { } = 4;
p2 @Const 'p2' { } = 25;


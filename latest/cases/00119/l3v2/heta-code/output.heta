
multiply #defineFunction { arguments: [x, y], math: x * y, };

t @TimeScale { units: second, };

compartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;
S2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;
S3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 2 / compartment;

reaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };
reaction1 := compartment * k1 * multiply(S1, S3);

k1 @Const 'k1' { } = 1.5;


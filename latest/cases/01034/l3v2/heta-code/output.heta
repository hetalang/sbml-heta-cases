
multiply #defineFunction { arguments: [x, y], math: x * y, };
minus #defineFunction { arguments: [x, y], math: x + (-1) * y, };

t @TimeScale { units: second, };

C @Compartment 'C' { units: litre, boundary: true, } .= 1;

S1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;
S2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;
S3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;

reaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };
reaction1 := (-(C * minus(multiply(kf, S1), kr * S2 * S3)));

kf @Const 'kf' { } = 1.5;
kr @Const 'kr' { } = 0.2;


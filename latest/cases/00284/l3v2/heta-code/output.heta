
multiply #defineFunction { arguments: [x, y], math: x * y, };

t @TimeScale { units: second, };

compartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1.98;

S1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.009 / compartment;
S2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.011 / compartment;
S3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.012 / compartment;
S4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;

reaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };
reaction1 := compartment * multiply(k1, multiply(S1, S2));
reaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };
reaction2 := compartment * k2 * S3 * S4;

k1 @Const 'k1' { } = 127.5;
k2 @Const 'k2' { } = 2.5;


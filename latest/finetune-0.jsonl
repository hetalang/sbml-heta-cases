{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$ |]\r\n\r\nThe model does not contain any rules.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with two species in one compartment,\r\n               with one reaction having a rate of zero.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |\r\n| S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\nThe value of k2 is zero, which means the reverse reaction should occur at\r\nzero rate (i.e., not at all).\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$  |mole           |\r\n|Initial amount of S2                |$0$           |mole           |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Value of parameter k2               |$0$              |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species' values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single reaction involving two species and a non-unity\r\n                  stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $k1 * S1 * compartment$  |]\r\n \r\nNote the stoichiometry of S2 is 2.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*     |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$ |mole        |\r\n|Initial amount of S2                |$0$             |mole        |\r\n|Value of parameter k1               |$1$             |second^-1^  |\r\n|Volume of compartment \"compartment\" |$1$             |litre       |]\r\n\r\nThe species' values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions involving two species in one\r\ncompartment, with non-unity stoichiometries and non-unity rate\r\n               constants.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $k1 * S1 * compartment$    |\r\n| 2 S2 -> S1 | $k2 * S2 * S2 * compartment$ |]\r\n\r\nNote the stoichiometry of S2 is 2.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*                   |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$  |mole                      |\r\n|Initial amount of S2                |$0$              |mole                      |\r\n|Value of parameter k1               |$0.35$           |second^-1^                |\r\n|Value of parameter k2               |$180$            |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier\r\nto use the model in a discrete stochastic simulator, but (as per usual\r\nSBML principles) their symbols represent their values in concentration\r\nunits where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * pow(S2, 2);\n\r\nk1 @Const 'k1' { } = 0.35;\r\nk2 @Const 'k2' { } = 180;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment and nonzero initial amounts.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$  |mole           |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment, nonzero initial amounts, and identical reaction rates.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |\r\n| S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\nThe rate constants are identical in both directions, leading to a system\r\nwhere the species concentrations remain the same.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole           |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$ |mole           |\r\n|Value of parameter k1               |$0.5$           |second^-1^     |\r\n|Value of parameter k2               |$0.5$           |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$             |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nStochastic simulations will show fluctuations in the amounts of the\r\nspecies substances, but the total amount should not vary nor should the\r\naverage concentration vary significantly over time.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with two species in one compartment,\r\n               with the first species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".\r\nThere are two species named S1 and S2 and two parameters named k1 and k2.\r\nSpecies S1 is labeled as an SBML boundary species.  \r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |\r\n| S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$  |mole           |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$  |mole           |\r\n|Value of parameter k1               |$0.5$            |second^-1^     |\r\n|Value of parameter k2               |$0.25$           |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with two species in one compartment,\r\n               with the second species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".\r\nThere are two species named S1 and S2 and two parameters named k1 and k2.\r\nSpecies S2 is labeled as an SBML boundary species.  \r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |\r\n| S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$  |mole           |\r\n|Initial amount of S2                |$1.5 \\x 10^-1$  |mole           |\r\n|Value of parameter k1               |$0.5$            |second^-1^     |\r\n|Value of parameter k2               |$0.25$           |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.15 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with two species in one compartment,\r\n               with both species labeled as boundary conditions.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  Both species\r\nS1 and S2 are labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |\r\n| S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$  |mole           |\r\n|Value of parameter k1               |$0.5$            |second^-1^     |\r\n|Value of parameter k2               |$0.25$           |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*                   |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$  |mole                      |\r\n|Value of parameter k1               |$3.5$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$1.5$           |second^-1^                |\r\n|Volume of compartment \"compartment\" |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.5;\r\nk2 @Const 'k2' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               and one species labeled as a boundary condition\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S1\r\nis labeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*                   |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-3$  |mole                      |\r\n|Value of parameter k1               |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25$           |second^-1^                |\r\n|Volume of compartment \"compartment\" |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier\r\nto use the model in a discrete stochastic simulator, but (as per usual\r\nSBML principles) their symbols represent their values in concentration\r\nunits where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               and two species labeled as a boundary condition\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S1\r\nand S2 are labeled as SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*                   |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-2$  |mole                      |\r\n|Value of parameter k1               |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25$           |second^-1^                |\r\n|Volume of compartment \"compartment\" |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier\r\nto use the model in a discrete stochastic simulator, but (as per usual\r\nSBML principles) their symbols represent their values in concentration\r\nunits where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               and all species labeled as a boundary condition\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  All three\r\nspecies S1, S2 and S3 are labeled as SBML boundary species.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-1$  |mole                      |\r\n|Value of parameter k1               |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25$           |second^-1^                |\r\n|Volume of compartment \"compartment\" |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.1 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               with one species having a stoichiometry of 2\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 + S2 -> S3 | $k1 * S1 * S1 * S2 * compartment$  |\r\n| S3 -> 2S1 + S2 | $k2 * S3 * compartment$        |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$  |mole                         |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$  |mole                         |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$  |mole                         |\r\n|Value of parameter k1               |$1.0 \\x 10^4$   |litre^2^ mole^-2^ second^-1^ |\r\n|Value of parameter k2               |$0.25$           |second^-1^                   |\r\n|Volume of compartment \"compartment\" |$1$              |litre                        |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * pow(S1, 2) * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = 2*S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 10000;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S2                |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S3                |$2.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S4                |$1.0 \\x 10^-3$  |mole                       |\r\n|Value of parameter k1               |$0.75 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2               |$0.25 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment \"compartment\" |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment,\r\n               with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S4 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S2                |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S3                |$2.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S4                |$1.0 \\x 10^-2$  |mole                       |\r\n|Value of parameter k1               |$0.75 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2               |$0.25 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment \"compartment\" |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.02 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment,\r\n               with non-unity stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + 2S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2  | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-1$  |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^1$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^1$  |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.2 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + 2*S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Four reactions in one compartment, with different numbers of\r\nspecies participating in each reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and four parameters named k1, k2, k3 and\r\nk4.  The model contains four reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2    | $k1 * S1 * compartment$    |\r\n| S2 -> S1    | $k2 * S2 * compartment$    |\r\n| S2 -> S3 + S4 | $k3 * S2 * compartment$    |\r\n| S3 + S4 -> S2 | $k4 * S3 * S4 * compartment$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$0.75$           |second^-1^                 |\r\n|Value of parameter k2               |$0.25$           |second^-1^                 |\r\n|Value of parameter k3               |$0.4$           |second^-1^                 |\r\n|Value of parameter k4               |$0.1$            |litre mole^-1^ second^-1^  |\r\n|Volume of compartment \"compartment\" |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S2 = S3 + S4, reversible: false, };\r\nreaction3 := compartment * k3 * S2;\r\nreaction4 @Reaction 'reaction4' { actors: S3 + S4 = S2, reversible: false, };\r\nreaction4 := compartment * k4 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.4;\r\nk4 @Const 'k4' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * compartment$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$2.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S2                |$2.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$1.0 \\x 10^3$   |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2               |$0.9$            |second^-1^                 |\r\n|Value of parameter k3               |$0.7$            |second^-1^                 |\r\n|Volume of compartment \"compartment\" |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := compartment * k3 * S3;\n\r\nk1 @Const 'k1' { } = 1000;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |\r\n| S2 -> S3 | $k2 * S2 * compartment$  |\r\n| S3 -> S4 | $k3 * S3 * compartment$  |] \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-1^     |\r\n|Value of parameter k2               |$0.5$            |second^-1^     |\r\n|Value of parameter k3               |$1$              |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := compartment * k3 * S3;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with two species in one compartment with a\r\n               non-unit volume.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $k1 * S1 * compartment$     |\r\n| 2 S2 -> S1 | $k2 * S2 * S2 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole                      |\r\n|Initial amount of S2                |$0 \\x$           |mole                      |\r\n|Value of parameter k1               |$0.35$           |second^-1^                |\r\n|Value of parameter k2               |$180$            |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$0.3$            |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * pow(S2, 2);\n\r\nk1 @Const 'k1' { } = 0.35;\r\nk2 @Const 'k2' { } = 180;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with two species in one compartment, with a\r\n               reaction involving a non-integer stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 0.3 S2 | $k1 * S1 * compartment$  |\r\n| 0.7 S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$  |mole           |\r\n|Initial amount of S2                |$0 \\x$           |mole           |\r\n|Value of parameter k1               |$0.35$           |second^-1^     |\r\n|Value of parameter k2               |$180$            |second^-1^     |\r\n|Volume of compartment \"compartment\" |$0.3$            |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 0.3*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: 0.7*S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.35;\r\nk2 @Const 'k2' { } = 180;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment, with\r\n               one species labeled constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and four parameters named k1, k2, k3 and\r\nk4.  Species S2 is labeled a SBML boundary condition and is also labeled\r\nconstant.  The model contains four reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2    | $k1 * S1 * compartment$    |\r\n| S2 -> S1    | $k2 * S2 * compartment$    |\r\n| S2 -> S3 + S4 | $k3 * S2 * compartment$    |\r\n| S3 + S4 -> S2 | $k4 * S3 * S4 * compartment$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S2                |$2.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$0.75$           |second^-1^                 |\r\n|Value of parameter k2               |$0.25$           |second^-1^                 |\r\n|Value of parameter k3               |$0.1$           |second^-1^                 |\r\n|Value of parameter k4               |$0.1$            |litre mole^-1^ second^-1^  |\r\n|Volume of compartment \"compartment\" |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S2 = S3 + S4, reversible: false, };\r\nreaction3 := compartment * k3 * S2;\r\nreaction4 @Reaction 'reaction4' { actors: S3 + S4 = S2, reversible: false, };\r\nreaction4 := compartment * k4 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.1;\r\nk4 @Const 'k4' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Variant of three reactions with four species in one\r\ncompartment, with one species labeled constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, \r\ntestTags:      Amount, ConstantSpecies, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and four parameters named k1, k2, k3 and\r\nk4.  Species S3 is labeled a SBML boundary condition and is also labeled\r\nconstant.  The model contains four reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2    | $k1 * S1 * compartment$     |\r\n| S2 -> S1    | $k2 * S2 * compartment$     |\r\n| S2 -> S3 + S4 | $k3 * S2 * compartment$     |\r\n| S3 + S4 -> S2 | $k4 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$0.75$           |second^-1^                 |\r\n|Value of parameter k2               |$0.25$           |second^-1^                 |\r\n|Value of parameter k3               |$0.4$           |second^-1^                 |\r\n|Value of parameter k4               |$0.1$            |litre mole^-1^ second^-1^  |\r\n|Volume of compartment \"compartment\" |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 0 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S2 = S3 + S4, reversible: false, };\r\nreaction3 := compartment * k3 * S2;\r\nreaction4 @Reaction 'reaction4' { actors: S3 + S4 = S2, reversible: false, };\r\nreaction4 := compartment * k4 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.4;\r\nk4 @Const 'k4' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment and nonzero initial amounts using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * multiply(k1,S1)$  |]\r\n\r\nThe reaction applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$  |mole           |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$  |mole           |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Volume of compartment \"compartment\" |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single forward reaction with two species in one compartment \r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * S1 * k1$  |]\r\n\r\nThe model contains one event that assigns value to species S1 defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S1 = 1$    |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$       1.0$ |mole                      |\r\n|Initial amount of S2                |$       0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the compartment size.\r\ncomponentTags: Compartment, Species, Reaction, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k * S1$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k.\r\n\r\nThe model contains one initialAssignment that assigns the initial value for\r\ncompartment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable    | Formula      |\r\n | compartment | $534 * 0.001$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this\r\ncase the value from the initialAssignment is consistent with the value\r\nattributed to the compartment by the model definition.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$  |mole                      |\r\n|Initial amount of S2                |$          0.0$ |mole                      |\r\n|Value of local parameter k          |$          100$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$        0.534$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.534;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k__reaction1_local * S1;\n\r\nk__reaction1_local @Const { } = 100;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $Ceiling(S1 * p1)! / p2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          0.0$ |mole                      |\r\n|Value of parameter p1               |$            4$ |litre mole^-1^            |\r\n|Value of parameter p2               |$           25$ |second mole^-1^           |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := factorial(ceil(p1 * S1)) * pow(p2, (-1));\n\r\np1 @Const 'p1' { } = 4;\r\np2 @Const 'p2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic rule that assigns value to a species.\r\ncomponentTags: Compartment, Species, AssignmentRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There is one\r\nspecies named S1.  The model does not contain any reactions.\r\n  \r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| assignmentRule | S1 | $3 + 4$  |]\r\n\r\nThe rule assigns a value to species S1 which is consistent with the value\r\nattributed to the species by the model definition.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            7$ |mole                      |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 7 / compartment;\r\nS1 := 7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic rule that assigns value to a species.\r\ncomponentTags: Compartment, Species, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There is one\r\nspecies named S1.  The model does not contain any reactions.\r\n  \r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| assignmentRule | S1 | $3 + 4$  |]\r\n\r\nIn the case there is no value attributed to the species by the model\r\ndefinition and thus the value must be calculated by the rule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   undeclared$ | mole                      |\r\n|Volume of compartment \"compartment\" |$            1$ | litre                     |]\r\n\t\t\t\t     \r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, };\r\nS1 := 7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single rate rule used to determine species value.\r\ncomponentTags: Compartment, Species, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There is one\r\nspecies named S1.  The model does not contain any reactions.  The model\r\ncontains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1       | $7$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            0$ |mole                      |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := 7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two rate rules used to determine species value.\r\ncomponentTags: Compartment, Species, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model does not\r\ncontain any reactions.  The model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1       | $-(k1 * S1)$  |\r\n| Rate | S2       | $k1 * S1$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule used to determine parameter value which is used \r\n               in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies called S1 and S2 and one parameter called k1, whose value is varying.\r\nThe model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | k1       | $0.5$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := 0.5;\n\r\nk1 @Record 'k1' { } .= 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment \r\n               and one functionDefinition used within a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z   | $x * y * z$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and one functionDefinition used within a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1       | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   undeclared$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless             |\r\n|Value of parameter k2               |$           50$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless             |\r\n|Value of parameter k2               |$           50$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the AssignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless             |\r\n|Value of parameter k2               |$           50$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-15 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      A simple reaction during which the species values are reset \r\n               by events.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two events defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S1 = 1$ |\r\n | Event2 | $S2 > 0.5$ | $-$   | $S2 = 0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS2 [event2]= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\r\nevent2 @DSwitcher 'event2' { trigger: S2 > 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\ncompartment is two-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*       |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$         0$    |mole                      |\r\n|Value of parameter k1             |$            1$ |second^-1^                |\r\n|Area of compartment \"compartment\" |$1$             |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 2-dimensional compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|     |*Value*         |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$         0.75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$         0.25$ |second^-1^                |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|     |*Value*         |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2              |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1             |$0.75 \\x 10^2$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^2$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.02 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\ncompartment is 1-dimensional.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$         0$    |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^                |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.15 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 1-dimensional compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^3$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^3$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 0.002 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 0-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\ncompartment is 0-dimensional.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*     |\r\n|Initial amount of S1          | $1.5 \\x 10^-2$ | mole       |\r\n|Initial amount of S2          | $            0$ | mole       |\r\n|Value of parameter k1         | $            1$ | second^-1^ |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero, i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.015;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 0-dimensional compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter\r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-1$ | mole                      |\r\n|Initial amount of S2          |$2.0 \\x 10^-1$ | mole                      |\r\n|Initial amount of S3          |$1.0 \\x 10^-1$ | mole                      |\r\n|Value of parameter k1         |$         0.75$ | mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$         0.25$ | second^-1^ |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero, i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.2;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 0-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-4$ | mole                |\r\n|Initial amount of S2          |$1.0 \\x 10^-4$ | mole                |\r\n|Initial amount of S3          |$2.0 \\x 10^-4$ | mole                |\r\n|Initial amount of S4          |$1.0 \\x 10^-4$ | mole                |\r\n|Value of parameter k1         |$0.75 \\x 10^4$ | mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25 \\x 10^4$ | mole^-1^ second^-1^ |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero, i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-4;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment\r\n               whose volume is varying.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and p1.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains one rule which defines the rate at which the volume of\r\nthe compartment is changing:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C | $-p1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.9$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nC_proc @Process { actors:  = C, aux: {metaid: \"rule1\"}, };\r\nC_proc := (-1) * C * p1;\n\r\nk1 @Const 'k1' { } = 0.9;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are three\r\nspecies called S1, S2 and S3 and three parameters called k1, k2 and p1.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule which defines the rate at which the volume of\r\nthe compartment is changing:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C | $-p1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nC_proc @Process { actors:  = C, aux: {metaid: \"rule1\"}, };\r\nC_proc := (-1) * C * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one rule which defines the rate at which the volume of\r\nthe compartment is changing:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C | $-p1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$          2.0$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\r\nC_proc @Process { actors:  = C, aux: {metaid: \"rule1\"}, };\r\nC_proc := (-1) * C * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments called \"compartment\" and\r\n\"compartment1\".  There are three species named S1, S2 and S3 and two\r\nparameters named k1 and k2.  Compartment \"compartment\" contains species S1\r\nand S2.  Compartment \"compartment1\" contains species S3.\r\n\r\nThe model contains:\r\n* 3 species (S1, S2, S3)\r\n* 2 parameters (k1, k2)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |]\r\n\r\nThe first reaction occurs entirely in compartment \"compartment\", whereas\r\nthe second reaction occurs between a species in \"compartment\" and a species\r\nin \"compartment1\".\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named \"compartment\" and \"compartment1\".\r\nThere are four species named S1, S2, S3 and S4 and three parameters named\r\nk1, k2 and k3.  Compartment \"compartment\" contains species S1 and S2.\r\nCompartment \"compartment1\" contains species S3 and S4.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 3 parameters (k1, k2, k3)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |\r\n| reaction3: S3 + S4 -> 2S4 | $compartment * k3 * S3 * S4$ |]\r\n\r\nThe first reaction occurs entirely within \"compartment\", the second\r\nreaction occurs between a species in \"compartment\" and a species in\r\n\"compartment1\" and the third reaction occurs entirely within\r\n\"compartment1\".\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial amount of species S4 | $0.1$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $7.5$ | constant |\r\n| Initial value of parameter k3 | $0.75$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, } .= 0.1 / compartment1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\r\nreaction3 @Reaction 'reaction3' { actors: S3 + S4 = 2*S4, reversible: false, };\r\nreaction3 := compartment * k3 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 7.5;\r\nk3 @Const 'k3' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named \"compartment\" and \"compartment1\".\r\nThere are two species named S1 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" contains species S1.  Compartment \"compartment1\"\r\ncontains species S3.\r\n\r\nThe model contains:\r\n* 2 species (S1, S3)\r\n* 2 parameters (k1, k2)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 -> S3 | $compartment * k1 * S1$ |\r\n| reaction2: S3 -> S1 | $compartment1 * k2 * (S3 + -1 * S1)$ |]\r\n\r\nBoth reactions occur between species within different compartments.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, };\r\nreaction2 := compartment1 * k2 * (S3 + (-1) * S1);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species and parameters local to \r\n               reactions.\r\ncomponentTags: Compartment, Species, Reaction \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * compartment,$  |\r\n| S2 -> S3 | $k * S2 * compartment,$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k.  Reaction S2 -> S3 also\r\ndefines one (different) local parameter k.  Both of these parameters have a\r\nscope local to the defining reaction.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$3.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of local parameter k          |$            1$ |second^-1^ |\r\n|Value of local parameter k          |$            2$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 3e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k__reaction1_local * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment * k__reaction2_local * S2;\n\r\nk__reaction1_local @Const { } = 1;\r\nk__reaction2_local @Const { } = 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species and parameters both global\r\n               and local to reactions.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one global parameter named k.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * compartment$  |\r\n| S2 -> S3 | $k * S2 * compartment$  |]\r\n\r\nReaction S2 -> S3 defines one local parameter k.\r\n\r\nNote that the id of the local parameter k shadows the global parameter k.\r\nWithin the defining reaction, the value of the locally-defined parameter k\r\nmust be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$3.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k                |$            1$ |second^-1^ |\r\n|Value of local parameter k          |$            2$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 3e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment * k__reaction2_local * S2;\n\r\nk__reaction2_local @Const { } = 2;\r\nk @Const 'k' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species and parameters both global\r\n               and local to reactions.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one global parameter named k.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * compartment$  |\r\n| S2 -> S3 | $S1 * S2 * compartment$  |]\r\n\r\nReaction S2 -> S3 defines one local parameter S1.\r\n\r\nNote that the id of the local parameter S1 shadows the species S1.  Within\r\nthe defining reaction, the value of the locally-defined symbol S1 must be\r\nused.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$3.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k                |$            2$ |second^-1^ |\r\n|Value of local parameter S1         |$            1$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\ncompartment @Compartment 'compartment' { units: volume, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: substance/volume, compartment: compartment, } .= 3e-4 / compartment;\r\nS2 @Species 'S2' { units: substance/volume, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: substance/volume, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, modifiers: [S1], reversible: false, };\r\nreaction2 := compartment * S1__reaction2_local * S2;\n\r\nk @Record 'k' { } .= 2;\n\r\nS1__reaction2_local @Const { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 1.7 \\x 10^1$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.002;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 17;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|        |*Value*         |*Units*  |\r\n|Initial amount of S1                 |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                 |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                 |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                 |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1                |$  1.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2                |$  0.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\"  |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 5e-7;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 300000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Species S3 is\r\nlabeled as constant and therefore cannot be changed by rules or reactions.\r\nThe model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            2$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 2 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S4 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Initial amount of S4                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          1.7$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1.7;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with five species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are five\r\nspecies named S1, S2, S3, S4 and S5 and two parameters named k1 and k2.\r\nSpecies S5 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment / S5$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S5                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$  1.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 5e-7 / compartment;\r\nS5 @Species 'S5' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, modifiers: [S5], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4 * pow(S5, (-1));\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule used to determine parameter value which is used \r\n               in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies called S1, S2, S3 and S4; one constant parameter called k2 and one\r\nvarying parameter called k2.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe model contains one rule which defines that rate at which parameter k1\r\nvaries:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $10^6$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$    1 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$  0.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 5e-7 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := 1e+6;\n\r\nk1 @Record 'k1' { } .= 1e+6;\n\r\nk2 @Const 'k2' { } = 300000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule used to determine parameter value which is used \r\n               in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies called S1, S2 and S3; one constant parameter called k2 and one\r\nvarying parameter called k2.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which defines that rate at which parameter k1\r\nvaries:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $0.2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$          1.7$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := 0.2;\n\r\nk1 @Record 'k1' { } .= 1.7;\n\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      A simple reaction during which the species values are reset \r\n               by a single event.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one event defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S1 = 1$ |\r\n |        |            |       | $S2 = 0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS2 [event1]= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$          1.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-61$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$          0.7$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.7;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 0.025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter\r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          1.7$ |mole                      |\r\n|Initial amount of S3                |$          2.0$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$          0.3$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.7 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule with a functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S1)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S3 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          0.5$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule with a functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment                           | S4           | $multiply(p1, S2)$  |]\r\n\r\nThe model contains one FunctionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S4 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-2$ |second^-1^ |\r\n|Value of parameter p1               |$         0.75$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, };\r\nS4 := multiply(p1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 0.0025;\r\np1 @Const 'p1' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with five species in one\r\ncompartment using an assignmentRules with functionDefinitions to vary two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are five\r\nspecies named S1, S2, S3, S4 and S5 and three parameters named k1, k2 and\r\np1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * compartment$  |\r\n| S3 -> S2 | $k2 * S5 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $func1(S3, p1)$  |\r\n | Assignment | S5 | $multiply(S4, p1)$  |]\r\n\r\nThe model contains two functionDefinitions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |\r\n | func1 | x, y | $x / (1 + y)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Initial amount of S5                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.1$ |second^-1^ |\r\n|Value of parameter k2               |$         0.15$ |second^-1^ |\r\n|Value of parameter p1               |$          2.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\nfunc1 #defineFunction { arguments: [x, y], math: x * pow(y + 1, (-1)), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS4 := func1(S3, p1);\r\nS5 @Species 'S5' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS5 := multiply(S4, p1);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S2, modifiers: [S5], reversible: false, };\r\nreaction2 := compartment * k2 * S5;\n\r\nk1 @Const 'k1' { } = 0.1;\r\nk2 @Const 'k2' { } = 0.15;\r\np1 @Const 'p1' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  The model contains\r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.15$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.15;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-2$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1 / 1000);\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 0.0025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule which applies a functionDefinition\r\n               with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  The model contains\r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $multiply(0.05, 3)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := multiply(0.05, 3);\n\r\nk1 @Const 'k1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule that applies a functionDefinition\r\n               with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $multiply(k2, 4 \\x 10^-6$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$   1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$ 0.75 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := multiply(k2, (4e-6));\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules that apply a functionDefinition\r\n               with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $multiply(k1, 0.5)$  |\r\n | Rate | S4 | $multiply(-k2, 0.5)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |any |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := multiply(k1, 0.5);\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := multiply((-1) * k2, 0.5);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3                |$            1$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-15 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$             $ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$            1$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |dimensionless |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 := k1 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $3 * S2$  |]\r\n\r\nNote that in this case the initial value of species S4 has not been declared and must be \r\ncalculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$    1 \\x 10^-5 |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, };\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $3 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule\r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $3 * S2$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the AssignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$         2.25$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * compartment$  |\r\n| S3 -> S1 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$         2.25$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25 / compartment;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * compartment$  |\r\n| S3 -> S1 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, };\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * compartment$  |\r\n| S3 -> S1 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value should be used.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$            5$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2D\r\ncompartment and nonzero initial amounts using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\ncompartment is 2-dimensional.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * multiply(k1,S1)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$1.5 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$            1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1.5e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1D\r\ncompartment and nonzero initial amounts using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\ncompartment is 1-dimensional.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * multiply(k1,S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 1.5e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 0D\r\ncompartment and nonzero initial amounts using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\ncompartment is 0-dimensional.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k1,S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2  |$1.5 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1 |$            1$ |second^-1^ |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-4;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 2D compartment \r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$         0.75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$         0.25$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 1D compartment \r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 0D compartment \r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2)$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1               |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2               |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3               |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1              |$         0.75$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2              |$         0.25$ |second^-1^ |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 2e-4;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 2D compartment\r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$0.75 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-15 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 1D compartment\r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^4$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^4$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 0D compartment\r\n               and one function definition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThis model contains one 0-dimensional compartment called \"compartment\".\r\nThere are four species, S1, S2, S3 and S4, and two parameters, k1 and k2.\r\n\r\nThe model contains a function called \"multiply\" that takes two numerical\r\narguments and multiplies them:\r\n\r\n[{width:25em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n| multiply | x, y | $x  *  y$ |]\r\n\r\nThe model contains two reactions defined as:\r\n\r\n[{width:25em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1  +  S2 -> S3  +  S4 | $multiply(k1, multiply(S1, S2))$ |\r\n| S3  +  S4 -> S1  +  S2 | $k2  *  S3  *  S4$                       |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:25em,margin: 1em auto}|      |*Value*            |*Units*              |\r\n|Initial amount of S1  |$1.0 \\x 10^-4$ |mole                |\r\n|Initial amount of S2  |$1.0 \\x 10^-4$ |mole                |\r\n|Initial amount of S3  |$2.0 \\x 10^-4$ |mole                |\r\n|Initial amount of S4  |$1.0 \\x 10^-4$ |mole                |\r\n|Value of parameter k1 |$0.75 \\x 10^4$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.25 \\x 10^4$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\na value of zero; i.e., the compartment represents a point, and therefore\r\ncannot have a value for the %size% or %units% attributes.  The quantities\r\nof species located in the compartment must be treated as amounts and not\r\nconcentrations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-4;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using a functionDefinition and a rateRule to vary compartment size.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and p1.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * multiply(k1,S1)$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C | $-p1 * C$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.9$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * multiply(k1, S1);\r\nC_proc @Process { actors:  = C, aux: {metaid: \"rule1\"}, };\r\nC_proc := (-1) * C * p1;\n\r\nk1 @Const 'k1' { } = 0.9;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one varying compartment \r\n               and one functionDefinition\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are three\r\nspecies called S1, S2 and S3 and three parameters called k1, k2 and p1.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C | $-p1 * C$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nC_proc @Process { actors:  = C, aux: {metaid: \"rule1\"}, };\r\nC_proc := (-1) * C * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one varying compartment\r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C | $-p1 * C$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$          2.0$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\r\nC_proc @Process { actors:  = C, aux: {metaid: \"rule1\"}, };\r\nC_proc := (-1) * C * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment of non-unity size using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * multiply(k1,S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$          2.3$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment \r\n               of non-unity size using a functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".\r\nThere are three species named S1, S2 and S3 and two parameters named k1 and k2.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1        | $1.0 \\x 10^-4$ | mole                      |\r\n|Initial amount of S2        | $2.0 \\x 10^-4$ | mole                      |\r\n|Initial amount of S3        | $1.0 \\x 10^-4$ | mole                      |\r\n|Value of parameter k1       | $         0.75$ | litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       | $         0.25$ | second^-1^ |\r\n|Volume of compartment \"compartment\":| $          2.3$ | litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one varying compartment\r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$0.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$1.5 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$         12.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 12.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments with functionDefinitions.\r\ncomponentTags:   Compartment, FunctionDefinition, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are three species named S1, S2 and S3 and two parameters named k1 and\r\nk2.  Compartment \"compartment\" contains species S1 and S2.  Compartment\r\n\"compartment\"1 contains species S3.\r\n\r\nThe model contains:\r\n* 3 species (S1, S2, S3)\r\n* 2 parameters (k1, k2)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * S2 * multiply(k1, S1)$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |]\r\n\r\nThe first reaction occurs entirely in compartment \"compartment\", whereas\r\nthe second reaction occurs between a species in \"compartment\" and a species\r\nin \"compartment1\".\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * S2 * multiply(k1, S1);\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments with functionDefinitions.\r\ncomponentTags:   Compartment, FunctionDefinition, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are four species named S1, S2, S3 and S4 and three parameters named\r\nk1, k2 and k3.  Compartment \"compartment\" contains species S1 and S2.\r\nCompartment \"compartment1\" contains species S3 and S4.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 3 parameters (k1, k2, k3)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * multiply(S1, S2)$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |\r\n| reaction3: S3 + S4 -> 2S4 | $compartment * k3 * S3 * S4$ |]\r\n\r\nThe first reaction occurs entirely within compartment \"compartment\", the\r\nsecond reaction occurs between a species in \"compartment\" and a species in\r\n\"compartment1\", and the third reaction occurs entirely within\r\n\"compartment1\".\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial amount of species S4 | $0.1$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $7.5$ | constant |\r\n| Initial value of parameter k3 | $0.75$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, } .= 0.1 / compartment1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * multiply(S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\r\nreaction3 @Reaction 'reaction3' { actors: S3 + S4 = 2*S4, reversible: false, };\r\nreaction3 := compartment * k3 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 7.5;\r\nk3 @Const 'k3' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments with functionDefinitions.\r\ncomponentTags:   Compartment, FunctionDefinition, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are two species named S1 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" contains species S1.  Compartment \"compartment1\"\r\ncontains species S3.\r\n\r\nThe model contains:\r\n* 2 species (S1, S3)\r\n* 2 parameters (k1, k2)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 -> S3 | $compartment * multiply(k1, S1)$ |\r\n| reaction2: S3 -> S1 | $compartment1 * k2 * (S3 + -1 * S1)$ |]\r\n\r\nThe reactions occur between the species within different compartments:\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, };\r\nreaction2 := compartment1 * k2 * (S3 + (-1) * S1);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction using functionDefinitions with two \r\nspecies in a compartment where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k1,S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.15;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions using functionDefinitions with three species in a compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * multiply(S1,S2)$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$ 1.7 $ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they\r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.02;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * multiply(S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 1.7;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functiondefinitions with four species in a compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * multiply(S1,S2)$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$  1.3 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$  0.3 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 5e-7;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * multiply(S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 300000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions in one compartment,\r\n               with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.\r\nSpecies S1 is labeled as an SBML boundary species.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k1,S1) * compartment$  |\r\n| S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$          0.5$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions in one compartment,\r\n               with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.\r\nSpecies S2 is labeled as an SBML boundary species.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k1,S1) * compartment$  |\r\n| S2 -> S1 | $multiply(k2,S2) * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$          0.5$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * multiply(k2, S2);\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions in one compartment,\r\n               with both species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.\r\nBoth species S1 and S2 are labeled as an SBML boundary species.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k1,S1) * compartment$  |\r\n| S2 -> S1 | $k2 * S2 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$          0.5$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction using functionDefinitions\r\n               with three species in a compartment where the one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition\r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.\r\nSpecies S3 is labeled as constant and therefore does not vary.\r\nThe model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * multiply(S1,S3) * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            2$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 2 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := compartment * k1 * multiply(S1, S3);\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions using functionDefinitions with four species in a compartment \r\n               where the one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S4 is labeled as constant and therefore does not vary.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * multiply(S3,S4) * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Initial amount of S4                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          1.7$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := compartment * k2 * multiply(S3, S4);\n\r\nk1 @Const 'k1' { } = 1.7;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with functionDefinitions with five species \r\n               in a compartment where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are five\r\nspecies named S1, S2, S3, S4 and S5 and two parameters named k1 and k2.\r\nSpecies S5 is labeled as constant and therefore does not vary.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * multiply(S1,S2) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment / S5$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S5                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$  1.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 5e-7 / compartment;\r\nS5 @Species 'S5' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * multiply(S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, modifiers: [S5], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4 * pow(S5, (-1));\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies called S1 and S2; two constant parameters called k2 and k3 and one\r\nvarying parameters called k1.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $add(k2, k3)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^ |\r\n|Value of parameter k2               |$          0.2$ |second^-1^ |\r\n|Value of parameter k3               |$          0.3$ |lsecond^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := add(k2, k3);\n\r\nk1 @Record 'k1' { } .= 1;\n\r\nk2 @Const 'k2' { } = 0.2;\r\nk3 @Const 'k3' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies called S1, S2, S3 and S4; three constant parameters called k2, k3 and\r\np1 and one varying parameter called k1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $add(k2, k3) * p1$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$    1 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$  0.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k3               |$  0.7 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$            1$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 5e-7 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := p1 * add(k2, k3);\n\r\nk1 @Record 'k1' { } .= 1e+6;\n\r\nk2 @Const 'k2' { } = 300000;\r\nk3 @Const 'k3' { } = 700000;\r\np1 @Const 'p1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies called S1, S2 and S3; four constant parameters called k2, k3, p1 and\r\np2 and one varying parameter called k1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $p1* add(p2 * k2, k3)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$          1.7$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Value of parameter k3               |$         -0.1$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$            1$ |second^-1^                |\r\n|Value of parameter p2               |$            1$ |litre mole^-1^                 |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := p1 * add(k2 * p2, k3);\n\r\nk1 @Record 'k1' { } .= 1.7;\n\r\nk2 @Const 'k2' { } = 0.3;\r\nk3 @Const 'k3' { } = -0.1;\r\np1 @Const 'p1' { } = 1;\r\np2 @Const 'p2' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single reaction using functionDefinitions involving species\r\n               with a non-unity stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $multiply(k1,S1) * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions involving species in one\r\ncompartment, with non-unity stoichiometries.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $multiply(k1,S1) * compartment$  |\r\n| 2 S2 -> S1 | $k2 * S2 * S2 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$         0.35$ |second^-1^ |\r\n|Value of parameter k2               |$          180$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\r\nreaction2 @Reaction 'reaction2' { actors: 2*S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * pow(S2, 2);\n\r\nk1 @Const 'k1' { } = 0.35;\r\nk2 @Const 'k2' { } = 180;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions with three species \r\n               in one compartment, with one species having a stoichiometry of 2.\r\ncomponentTags: Compartment, Parameter, Reaction, Species, FunctionDefinition\r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 + S2 -> S3 | $multiply(k1,S1) * S1 * S2 * compartment$  |\r\n| S3 -> 2S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 1.0 \\x 10^3$ |litre^2^ mole^-2^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * S1 * S2 * multiply(k1, S1);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = 2*S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 1000;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions with four species in one compartment,\r\n               with non-unity stoichiometry\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + 2S4 | $k1 * multiply(S1,S2) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + 2*S4, reversible: false, };\r\nreaction1 := compartment * k1 * multiply(S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions with three species \r\n               and parameters local to reactions.\r\ncomponentTags: Compartment, Species, Reaction, FunctionDefinition \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k,S1) * compartment,$  |\r\n| S2 -> S3 | $k * S2 * compartment,$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k.  Reaction S2 -> S3 defines\r\nanother (different) local parameter k.\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$3.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of local parameter k          |$            1$ |second^-1^ |\r\n|Value of local parameter k          |$            2$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.003 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k__reaction1_local, S1);\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment * k__reaction2_local * S2;\n\r\nk__reaction1_local @Const { } = 1;\r\nk__reaction2_local @Const { } = 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions with three species \r\n               and parameters local to reactions.\r\ncomponentTags: Compartment, Parameter, Species, Reaction, FunctionDefinition \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * compartmen$  |\r\n| S2 -> S3 | $multiply(k,S2) * compartment,$  |]\r\n\r\nReaction S2 -> S3 defines one local parameter k.  This parameter shadows the\r\nglobal parameter k and thus in reaction S2 -> S3 the value of the local\r\nparameter must be used.\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$3.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k                |$            1$ |second^-1^ |\r\n|Value of local parameter k          |$            2$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.003 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment * multiply(k__reaction2_local, S2);\n\r\nk__reaction2_local @Const { } = 2;\r\nk @Const 'k' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functionDefinitions with three species \r\n               and parameters local to reactions.\r\ncomponentTags: Compartment, Species, Parameter, Reaction, FunctionDefinition \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * compartmen$  |\r\n| S2 -> S3 | $multiply(S1,S2) * compartment,$  |]\r\n\r\nReaction S2 -> S3 defines one local parameter S1.  This parameter shadows\r\nthe species S1 and thus in reaction S2 -> S3 the value of the local\r\nparameter S1 must be used.\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$3.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k                |$            2$ |second^-1^ |\r\n|Value of local parameter S1         |$            1$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { };\n\r\ncompartment @Compartment 'compartment' { units: volume, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: substance/volume, compartment: compartment, } .= 0.003 / compartment;\r\nS2 @Species 'S2' { units: substance/volume, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: substance/volume, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, modifiers: [S1], reversible: false, };\r\nreaction2 := compartment * multiply(S1__reaction2_local, S2);\n\r\nk @Record 'k' { } .= 2;\n\r\nS1__reaction2_local @Const { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*           |*Units*  |\r\n|Initial amount of S1                |$1.125 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$   |mole                      |\r\n|Value of parameter k1               |$         0.75$   |dimensionless |\r\n|Value of parameter k2               |$           50$   |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$   |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 / 100$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this\r\ncase the value calculated by the initialAssignment is consistent with the\r\nvalue declared.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          0.5$ |second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $1 * S2$  |]\r\n\r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-15 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $1 * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is consistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3                |$1.125 \\x 10^-15$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-15 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.125e-15 / compartment;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to compartment \"compartment\":\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | compartment | $k1 / k1$  |]\r\n\r\nIn this case the initial value declared for compartment \"compartment\" is\r\nconsistent with the value calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$        1.125$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |any |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, } .= 1;\r\ncompartment := 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to compartment \"compartment\":\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | compartment | $k1 / k1$  |]\r\n\r\nIn this case the initial value declared for compartment \"compartment\" is\r\niconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$        1.125$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |any |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, } .= 5;\r\ncompartment := 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to assign value to the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to compartment \"compartment\":\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | compartment | $1$  |]\r\n\r\nIn this case the initial value declared for compartment \"compartment\" is\r\nconsistent with the value calculated by the assignmentRule.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$        1.125$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, };\r\ncompartment := 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to assign value to the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to compartment \"compartment\":\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | compartment | $1$  |]\r\n\r\nIn this case the initial value declared for compartment \"compartment\" is\r\nconsistent with the value calculated by the assignmentRule.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, } .= 1;\r\ncompartment := 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to assign value to the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to compartment \"compartment\":\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | compartment | $1$  |]\r\n\r\nIn this case the initial value declared for compartment \"compartment\" is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$    1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, } .= 5;\r\ncompartment := 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to assign value to the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to compartment \"compartment\":\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | compartment | $1$  |]\r\n\r\nIn this case there is no initial value declared for compartment\r\n\"compartment\".  Thus the value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$   undeclared$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, };\r\ncompartment := 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with three species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k2:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k2 | $5$  |]\r\n\r\nIn this case the initial value declared for parameter k2 is consistent with\r\nthe value calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.25 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk2 @Record 'k2' { } .= 5;\r\nk2 := 5;\n\r\nk1 @Const 'k1' { } = 150;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with three species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k2:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k2 | $5$  |]\r\n\r\nIn this case the initial value declared for parameter k2 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value\r\nshould be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.25 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$        0.005$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk2 @Record 'k2' { } .= 0.005;\r\nk2 := 5;\n\r\nk1 @Const 'k1' { } = 150;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with three species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k2:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k2 | $5$  |]\r\n\r\nIn this case there is no initial value declared for parameter k2.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.25 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk2 @Record 'k2' { };\r\nk2 := 5;\n\r\nk1 @Const 'k1' { } = 150;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case the initial value declared for parameter k1 is consistent with\r\nthe value calculated by the assignmentRule.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          0.1$ |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Record 'k1' { } .= 0.75;\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case the initial value declared for parameter k1 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value\r\nshould be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          0.1$ |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$          750$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Record 'k1' { } .= 750;\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          0.1$ |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one 2-dimensional\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S4 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it must be considered during\r\nsimulation.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|     |*Value*         |*Units*  |\r\n|Initial amount of S1              |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2              |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3              |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4              |$   undeclared$ |mole                      |\r\n|Value of parameter k1             |$  1.5 \\x 10^5$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$           50$ |second^-1^ |\r\n|Value of parameter k3             |$          1.5$ |dimensionless |\r\n|Area of compartment \"compartment\" |$            1$ |rmetre^2^ |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, };\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\n               2-dimensional compartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it must be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}      |*Value*         |*Units*       |\r\n|Initial amount of S1              |$            1$ |mole          |\r\n|Initial amount of S2              |$1.5 \\x 10^-15$ |mole          |\r\n|Initial amount of S3              |$   undeclared$ |mole          |\r\n|Value of parameter k1             |$         0.75$ |dimensionless |\r\n|Value of parameter k2             |$           50$ |second^-1^    |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1.5e-15 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one 1-dimensional\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S4 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it must be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^3$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Length of compartment \"compartment\" |$            1$ |metre |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.0015 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, };\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 1500;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\n               1-dimensional compartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$  1 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one 0-dimensional\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, 0D-Compartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S4 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|              Initial amount of S1:| $   1 \\x 10^-3$ | mole                      |\r\n|              Initial amount of S2:| $ 1.5 \\x 10^-3$ | mole                      |\r\n|              Initial amount of S3:| $   1 \\x 10^-3$ | mole                      |\r\n|              Initial amount of S4:| $   undeclared$ | mole                      |\r\n|             Value of parameter k1:| $  1.5 \\x 10^3$ | litre mole^-1^ second^-1^ |\r\n|             Value of parameter k2:| $           50$ | second^-1^ |\r\n|             Value of parameter k3:| $          1.5$ | dimensionless |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, };\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 1500;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\n               0-dimensional compartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, 0D-Compartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|              Initial amount of S1:| $  1 \\x 10^-2$ | mole                      |\r\n|              Initial amount of S2:| $1.5 \\x 10^-2$ | mole                      |\r\n|              Initial amount of S3:| $   undeclared$ | mole                      |\r\n|             Value of parameter k1:| $         0.75$ | dimensionless |\r\n|             Value of parameter k2:| $           50$ | second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.015;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one \r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S4 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         3.25$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          1.75$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$         0.01$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.01;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, };\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.25;\r\nk2 @Const 'k2' { } = 1.75;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          0.1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$         0.08$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.08;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one \r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> 2S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S4 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$   1.5 \\x 10^$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, };\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = 2*S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-15 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and one constant\r\nparameter called k1.  (Note that indeed S1 and S2 are parameters and not \r\nspecies in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate                                 | S1           | $-S1 * k1$  |\r\n | Rate                                 | S2           | $S1 * k1$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*    |\r\n|Value of parameter S1         |$1.5 \\x 10^-2$ |any        |\r\n|Value of parameter S2         |$            0$ |same as S1 |\r\n|Value of parameter k1         |$            1$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1;\n\r\nS1 @Record 'S1' { } .= 0.015;\r\nS2 @Record 'S2' { } .= 0;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1 and S2 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | S1           | $S2 * k2-S1 * k1$  |\r\n | Rate                                 | S2           | $S1 * k1-S2 * k2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Value of parameter S1         |$1.5 \\x 10^-2$ |any        |\r\n|Value of parameter S2         |$            0$ |same as S1 |\r\n|Value of parameter k1         |$            1$ |second^-1^ |\r\n|Value of parameter k2         |$            0$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S2 + (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1 + (-1) * k2 * S2;\n\r\nS1 @Record 'S1' { } .= 0.015;\r\nS2 @Record 'S2' { } .= 0;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter    \r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1 and S2 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $S2 * k2-S1 * k1$  |\r\n | Rate | S2       | $S1 * k1-S2 * k2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.5 \\x 10^-2$ |any        |\r\n|Value of parameter S2 |$            0$ |same as S1 |\r\n|Value of parameter k1 |$          0.5$ |second^-1^ |\r\n|Value of parameter k2 |$          0.5$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S2 + (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1 + (-1) * k2 * S2;\n\r\nS1 @Record 'S1' { } .= 0.015;\r\nS2 @Record 'S2' { } .= 0;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter    \r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1 and S2 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $S2 * k2-S1 * k1$  |\r\n | Rate | S2       | $S1 * k1-S2 * k2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.5 \\x 10^-2$ |any        |\r\n|Value of parameter S2 |$1.5 \\x 10^-2$ |same as S1 |\r\n|Value of parameter k1 |$          0.5$ |second^-1^ |\r\n|Value of parameter k2 |$          0.5$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S2 + (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1 + (-1) * k2 * S2;\n\r\nS1 @Record 'S1' { } .= 0.015;\r\nS2 @Record 'S2' { } .= 0.015;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $k2 * S3-k1 * S1 * S2$  |\r\n | Rate | S2       | $k2 * S3-k1 * S1 * S2$  |\r\n | Rate | S3       | $k1 * S1 * S2-k2 * S3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.5 \\x 10^-2$ |any                        |\r\n|Value of parameter S2 |$  2 \\x 10^-2$ |same as S1                 |\r\n|Value of parameter S3 |$  1 \\x 10^-2$ |same as S1                 |\r\n|Value of parameter k1 |$          0.5$ |(units of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$          0.5$ |second^-1^                 |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k1 * S1 * S2 + (-1) * k2 * S3;\n\r\nS1 @Record 'S1' { } .= 0.015;\r\nS2 @Record 'S2' { } .= 0.02;\r\nS3 @Record 'S3' { } .= 0.01;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains four varying parameters called S1, S2, S3 and S4 and \r\ntwo constant parameters called k1 and k2.  (Note\r\nthat indeed S1, S2, S3 and S4 are parameters and not species in this\r\nmodel.)\r\n\r\nThe model contains four rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $k2 * S3 * S4-k1 * S1 * S2$  |\r\n | Rate | S2       | $k2 * S3 * S4-k1 * S1 * S2$  |\r\n | Rate | S3       | $k1 * S1 * S2-k2 * S3 * S4$  |\r\n | Rate | S4       | $k1 * S1 * S2-k2 * S3 * S4$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.0 \\x 10^-2$ |any |\r\n|Value of parameter S2 |$1.0 \\x 10^-2$ |same as S1 |\r\n|Value of parameter S3 |$2.0 \\x 10^-2$ |same as S1 |\r\n|Value of parameter S4 |$1.0 \\x 10^-2$ |same as S1 |\r\n|Value of parameter k1 |$0.75 \\x 10^2$ |(units of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.25 \\x 10^2$ |(units of S1)^-1^ second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S3 * S4 + (-1) * k1 * S1 * S2;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 * S4 + (-1) * k1 * S1 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k1 * S1 * S2 + (-1) * k2 * S3 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule4\"}, };\r\nS4_proc := k1 * S1 * S2 + (-1) * k2 * S3 * S4;\n\r\nS1 @Record 'S1' { } .= 0.01;\r\nS2 @Record 'S2' { } .= 0.01;\r\nS3 @Record 'S3' { } .= 0.02;\r\nS4 @Record 'S4' { } .= 0.01;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains four varying parameters called S1, S2, S3 and S4 and \r\nfour constant parameters called k1, k2, k3 and k4.  (Note that indeed S1, \r\nS2, S3, and S4 are parameters and not species in this model.)\r\n\r\nThe model contains four rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1 | $k2 * S2-k1 * S1$  |\r\n | Rate | S2 | $k1 * S1-k2 * S2-k3 * S2 + k4 * S3 * S4$  |\r\n | Rate | S3 | $k3 * S2-k4 * S3 * S4$  |\r\n | Rate | S4 | $k3 * S2-k4 * S3 * S4$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.0 \\x 10^-2$ |any |\r\n|Value of parameter S2 |$2.0 \\x 10^-2$ |same as S1 |\r\n|Value of parameter S3 |$            0$ |same as S1 |\r\n|Value of parameter S4 |$            0$ |same as S1 |\r\n|Value of parameter k1 |$         0.75$ |second^-1^ |\r\n|Value of parameter k2 |$         0.25$ |second^-1^ |\r\n|Value of parameter k3 |$         0.15$ |second^-1^ |\r\n|Value of parameter k4 |$          0.1$ |(units of S1)^-1^ second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S2 + (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1 + (-1) * k2 * S2 + (-1) * k3 * S2 + k4 * S3 * S4;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k3 * S2 + (-1) * k4 * S3 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule4\"}, };\r\nS4_proc := k3 * S2 + (-1) * k4 * S3 * S4;\n\r\nS1 @Record 'S1' { } .= 0.01;\r\nS2 @Record 'S2' { } .= 0.02;\r\nS3 @Record 'S3' { } .= 0;\r\nS4 @Record 'S4' { } .= 0;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.15;\r\nk4 @Const 'k4' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains four varying parameters called S1, S2, S3 and S4 and \r\nthree constant parameters called k1, k2 and k3.  (Note that indeed S1, \r\nS2, S3, and S4 are parameters and not species in this model.)\r\n\r\nThe model contains four rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $k2 * S3-k1 * S1 * S2 + k3 * S3$  |\r\n | Rate | S2       | $k2 * S3-k1 * S1 * S2$  |\r\n | Rate | S3       | $k1 * S1 * S2-k2 * S3-k3 * S3$  |\r\n | Rate | S4       | $k3 * S3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$2.0 \\x 10^-2$ |any |\r\n|Value of parameter S2 |$2.0 \\x 10^-2$ |same as S1 |\r\n|Value of parameter S3 |$            0$ |same as S1 |\r\n|Value of parameter S4 |$            0$ |same as S1 |\r\n|Value of parameter k1 |$ 1.0 \\x 10^2$ |(units of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$          0.9$ |second^-1^ |\r\n|Value of parameter k3 |$          0.7$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * k1 * S1 * S2 + k2 * S3 + k3 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k1 * S1 * S2 + (-1) * k2 * S3 + (-1) * k3 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule4\"}, };\r\nS4_proc := k3 * S3;\n\r\nS1 @Record 'S1' { } .= 0.02;\r\nS2 @Record 'S2' { } .= 0.02;\r\nS3 @Record 'S3' { } .= 0;\r\nS4 @Record 'S4' { } .= 0;\n\r\nk1 @Const 'k1' { } = 100;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains four varying parameters called S1, S2, S3 and S4 and \r\nthree constant parameters called k1, k2 and k3.  (Note that indeed S1, \r\nS2, S3, and S4 are parameters and not species in this model.)\r\n\r\nThe model contains four rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $-k1 * S1$  |\r\n | Rate | S2       | $k1 * S1-k2 * S2$  |\r\n | Rate | S3       | $k2 * S2-k3 * S3$  |\r\n | Rate | S4       | $k3 * S3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.0 \\x 10^-2$ |any |\r\n|Value of parameter S2 |$            0$ |same as S1 |\r\n|Value of parameter S3 |$            0$ |same as S1 |\r\n|Value of parameter S4 |$            0$ |same as S1 |\r\n|Value of parameter k1 |$          0.7$ |second^-1^ |\r\n|Value of parameter k2 |$          0.5$ |second^-1^ |\r\n|Value of parameter k3 |$          1.0$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1 + (-1) * k2 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k2 * S2 + (-1) * k3 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule4\"}, };\r\nS4_proc := k3 * S3;\n\r\nS1 @Record 'S1' { } .= 0.01;\r\nS2 @Record 'S2' { } .= 0;\r\nS3 @Record 'S3' { } .= 0;\r\nS4 @Record 'S4' { } .= 0;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains four varying parameters called S1, S2, S3 and S4 and \r\nfour constant parameters called k1, k2, k3 and k4.  (Note that indeed S1, \r\nS2, S3, and S4 are parameters and not species in this model.)\r\n\r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $k2 * S2-k1 * S1$  |\r\n | Rate | S3       | $k3 * S2-k4 * S3 * S4$  |\r\n | Rate | S4       | $k3 * S2-k4 * S3 * S4$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.0 \\x 10^-4$ |any                       |\r\n|Value of parameter S2 |$2.0 \\x 10^-4$ |any |\r\n|Value of parameter S3 |$            0$ |any |\r\n|Value of parameter S4 |$            0$ |same as S3 |\r\n|Value of parameter k1 |$         0.75$ |second^-1^ |\r\n|Value of parameter k2 |$         0.25$ |(units of S1) (units of S2)^-1^ second^-1^ |\r\n|Value of parameter k3 |$         0.15$ |(units of S3) (units of S2)^-1^ second^-1^ |\r\n|Value of parameter k4 |$          0.1$ |(units of S3)^-1^ second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S2 + (-1) * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule2\"}, };\r\nS3_proc := k3 * S2 + (-1) * k4 * S3 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule3\"}, };\r\nS4_proc := k3 * S2 + (-1) * k4 * S3 * S4;\n\r\nS1 @Record 'S1' { } .= 1e-4;\r\nS2 @Record 'S2' { } .= 2e-4;\r\nS3 @Record 'S3' { } .= 0;\r\nS4 @Record 'S4' { } .= 0;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.15;\r\nk4 @Const 'k4' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using rules and parameters with a functionDefinition.\r\ncomponentTags: Parameter, FunctionDefinition, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and one constant\r\nparameter called k1.  (Note that indeed S1 and S2 are parameters and not \r\nspecies in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1 | $-multiply(k1, S1)$  |\r\n | Rate | S2 | $multiply(k1, S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.5 \\x 10^-2$ |any |\r\n|Value of parameter S2 |$1.5 \\x 10^-2$ |same as S1 |\r\n|Value of parameter k1 |$            1$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * multiply(k1, S1);\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := multiply(k1, S1);\n\r\nS1 @Record 'S1' { } .= 0.015;\r\nS2 @Record 'S2' { } .= 0.015;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using rules and parameters with an event.\r\ncomponentTags: Parameter, RateRule, EventNoDelay \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and one constant\r\nparameter called k1.  (Note that indeed S1 and S2 are parameters and not \r\nspecies in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1 | $-k1 * S1$  |\r\n | Rate | S2 | $k1 * S1$  |]\r\n\r\n\r\nThe model contains one event defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | Trigger      | Delay | Assignments |\r\n | Event1 | $S1 < 0.1$ | $-$ | $S1 = 1$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$          1.0$ |any |\r\n|Value of parameter S2 |$          0.0$ |same as S1 |\r\n|Value of parameter k1 |$            1$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS1 [event1]= 1;\r\nS2 @Record 'S2' { } .= 0;\n\r\nk1 @Const 'k1' { } = 1;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using rules and parameters with a rate that causes a discontinuity\r\n               in the output.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and two constant\r\nparameters called p1 and p2.  (Note that indeed S1 and S2 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1 | $-Ceiling(S1 * p1)! / p2$  |\r\n | Rate | S2 | $Ceiling(S1 * p1)! / p2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$          1.0$ |any |\r\n|Value of parameter S2 |$          0.0$ |same as S1 |\r\n|Value of parameter p1 |$             $ |(units of S1)^-1^ |\r\n|Value of parameter p2 |$            2$ |second (units of S1)^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * factorial(ceil(p1 * S1)) * pow(p2, (-1));\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := factorial(ceil(p1 * S1)) * pow(p2, (-1));\n\r\nS1 @Record 'S1' { } .= 1;\r\nS2 @Record 'S2' { } .= 0;\n\r\np1 @Const 'p1' { } = 4;\r\np2 @Const 'p2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using rules and parameters only.\r\ncomponentTags: Parameter, AssignmentRule \r\ntestTags:      InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying parameter called S1.  (Note that indeed \r\nS1 is a parameter and not species in this model.)\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S1 | $3 + 4$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$          0.0$ |any |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1 @Record 'S1' { } .= 0;\r\nS1 := 7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using rules and parameters only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying parameter called S1.  (Note that indeed \r\nS1 is a parameter and not species in this model.)\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1 | $7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$          0.0$ |any |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := 7;\n\r\nS1 @Record 'S1' { } .= 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and one constant\r\nparameter called k1.  (Note that indeed S1 and S2 are parameters and not \r\nspecies in this model.)\r\n  \r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $-(k1 * S1)$  |\r\n | Rate | S2       | $k1 * S1$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.5 \\x 10^-1$ |any |\r\n|Value of parameter S2 |$            0$ |same as S1 |\r\n|Value of parameter k1 |$            1$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1;\n\r\nS1 @Record 'S1' { } .= 0.15;\r\nS2 @Record 'S2' { } .= 0;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and rules only.\r\ncomponentTags: Parameter, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and one constant\r\nparameter called k1.  (Note that indeed S1 and S2 are parameters and not \r\nspecies in this model.)\r\n \r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1       | $0.5$  |\r\n | Rate | S1       | $-(k1 * S1)$  |\r\n | Rate | S2       | $k1 * S1$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.5 \\x 10^-1$ |any |\r\n|Value of parameter S2 |$            0$ |same as S1 |\r\n|Value of parameter k1 |$  1 \\x 10^-1$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := 0.5;\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule2\"}, };\r\nS1_proc := (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule3\"}, };\r\nS2_proc := k1 * S1;\n\r\nS1 @Record 'S1' { } .= 0.15;\r\nS2 @Record 'S2' { } .= 0;\r\nk1 @Record 'k1' { } .= 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and rules with a functionDefinition.\r\ncomponentTags: Parameter, FunctionDefinition, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n \r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3       | $multiply(k1, S1, S2)$  |\r\n | Rate | S1       | $k2 * S3 - multiply(k1, S1, S2)$  |\r\n | Rate | S2       | $k2 * S3 - multiply(k1, S1, S2)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.0 \\x 10^-1$ |any |\r\n|Value of parameter S2 |$2.0 \\x 10^-1$ |same as S1 |\r\n|Value of parameter S3 |$1.0 \\x 10^-1$ |same as S1 |\r\n|Value of parameter k1 |$         0.75$ |(units of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.25$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := multiply(k1, S1, S2) + (-1) * k2 * S3;\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule2\"}, };\r\nS1_proc := k2 * S3 + (-1) * multiply(k1, S1, S2);\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule3\"}, };\r\nS2_proc := k2 * S3 + (-1) * multiply(k1, S1, S2);\n\r\nS1 @Record 'S1' { } .= 0.1;\r\nS2 @Record 'S2' { } .= 0.2;\r\nS3 @Record 'S3' { } .= 0.1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and rules with a functionDefinition.\r\ncomponentTags: Parameter, FunctionDefinition, RateRule \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains four varying parameters called S1, S2, S3 and S4 and \r\ntwo constant parameters called k1 and k2.  (Note\r\nthat indeed S1, S2, S3 and S4 are parameters and not species in this\r\nmodel.)\r\n\r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3       | $multiply(k1, (S1 * S2))$  |\r\n | Rate | S1       | $k2 * S3 * S4 - multiply(k1, multiply(S1, S2))$  |\r\n | Rate | S2       | $k2 * S3 * S4 - multiply(k1, multiply(S1, S2))$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$1.0 \\x 10^-1$ |any |\r\n|Value of parameter S2 |$2.0 \\x 10^-1$ |same as S1 |\r\n|Value of parameter S3 |$1.0 \\x 10^-1$ |same as S1 |\r\n|Value of parameter S4 |$1.0 \\x 10^-1$ |any |\r\n|Value of parameter k1 |$0.75 \\x 10^1$ |(units of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.25 \\x 10^1$ |(units of S4)^-1^ second^-1^ |]\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := multiply(k1, S1 * S2) + (-1) * k2 * S3 * S4;\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule2\"}, };\r\nS1_proc := k2 * S3 * S4 + (-1) * multiply(k1, multiply(S1, S2));\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule3\"}, };\r\nS2_proc := k2 * S3 * S4 + (-1) * multiply(k1, multiply(S1, S2));\n\r\nS1 @Record 'S1' { } .= 0.1;\r\nS2 @Record 'S2' { } .= 0.2;\r\nS3 @Record 'S3' { } .= 0.1;\r\nS4 @Record 'S4' { } .= 0.1;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and rules with an initialAssignment.\r\ncomponentTags: Parameter, InitialAssignment, RateRule \r\ntestTags:      NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called S1 and S2 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1 and S2 are parameters and not \r\nspecies in this model.)\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1       | $-k2 * S1 $  |\r\n | Rate | S2       | $k2 * S1 $  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 * S2$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this\r\ncase, the initial value of S1 has not been explicitly declared and must be\r\ncalculated using the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$   undeclared$ |any |\r\n|Value of parameter S2 |$2.0 \\x 10^-1$ |same as S1 |\r\n|Value of parameter k1 |$         0.75$ |dimensionless |\r\n|Value of parameter k2 |$         0.25$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := (-1) * k2 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S1;\n\r\nS1 @Record 'S1' { } .= k1 * S2;\r\nS2 @Record 'S2' { } .= 0.2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and both rate and assignment rules.   \r\ncomponentTags: Parameter, RateRule, AssignmentRule \r\ntestTags:      NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $1 * S2$  |\r\n | Rate       | S1       | $-k2 * S1 $  |\r\n | Rate       | S2       | $k2 * S1 $  |]\r\n\r\nNote the initial value for parameter S3 is undeclared and must be\r\ncalculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$            1$ |any |\r\n|Value of parameter S2 |$1.5 \\x 10^-15$ |same as S1 |\r\n|Value of parameter S3 |$   undeclared$ |same as S1 |\r\n|Value of parameter k1 |$         0.75$ |dimensionless |\r\n|Value of parameter k2 |$           50$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule2\"}, };\r\nS1_proc := (-1) * k2 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule3\"}, };\r\nS2_proc := k2 * S1;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS2 @Record 'S2' { } .= 1.5e-15;\r\nS3 @Record 'S3' { };\r\nS3 := k1 * S2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and both rate and assignment rules\r\n               with a functionDefinition.   \r\ncomponentTags: Parameter, FunctionDefinition, RateRule, AssignmentRule \r\ntestTags:      NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $multiply(k1, S2)$  |\r\n | Rate       | S1       | $-multiply(k2, S1)$  |\r\n | Rate       | S2       | $k2 * S1 $  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote the initial value for parameter S3 is undeclared and must be\r\ncalculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter S1 |$            1$ |any |\r\n|Value of parameter S2 |$          0.5$ |same as S1 |\r\n|Value of parameter S3 |$   undeclared$ |any |\r\n|Value of parameter k1 |$          0.7$ |(units of S3) (units of S1)^-1^ |\r\n|Value of parameter k2 |$           40$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule2\"}, };\r\nS1_proc := (-1) * multiply(k2, S1);\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule3\"}, };\r\nS2_proc := k2 * S1;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS2 @Record 'S2' { } .= 0.5;\r\nS3 @Record 'S3' { };\r\nS3 := multiply(k1, S2);\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 40;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and both rate and assignment rules\r\n               including initialAssignments.   \r\ncomponentTags: Parameter, InitialAssignment, RateRule, AssignmentRule \r\ntestTags:      NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $1 * S2$  |\r\n | Rate       | S1 | $-k2 * S1 $  |\r\n | Rate       | S2 | $k2 * S1 $  |]\r\n\r\nThe model contains two initialAssignments:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 0.75$  |\r\n | S2 | $k2 * 3 \\x 10^-17$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalues of parameters S1, S2 and S3 are undeclared and so must be calculated\r\nby the initialAssignments.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*         |*Units*  |\r\n|Value of parameter S1              |$   undeclared$ |any |\r\n|Value of parameter S2              |$   undeclared$ |same as S1 |\r\n|Value of parameter S3              |$   undeclared$ |same as S1 |\r\n|Value of parameter k1              |$         0.75$ |dimensionless |\r\n|Value of parameter k2              |$           50$ |second^-1^ |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule2\"}, };\r\nS1_proc := (-1) * k2 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule3\"}, };\r\nS2_proc := k2 * S1;\n\r\nS1 @Record 'S1' { } .= 1.33333333333333 * k1;\r\nS2 @Record 'S2' { } .= k2 * (3e-17);\r\nS3 @Record 'S3' { };\r\nS3 := k1 * S2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a one compartment,\r\n               with one reaction having a rate of zero.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe value of k2 is zero, which means the \r\nreverse reaction should occur at zero rate (i.e. not at all).  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.1 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$            0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a one compartment,\r\n               with one reaction having a rate of zero.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe value of k1 is zero, which means the first reaction should occur at\r\nzero rate (i.e. not at all).\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.1 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$            0$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment,\r\n               with one reaction having a rate of zero.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe value of k2 is zero, which means the reverse reaction should occur at\r\nzero rate (i.e. not at all).\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$            0$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment,\r\n               with one reaction having a rate of zero.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe value of k1 is zero, which means the \r\nfirst reaction should occur at zero rate (i.e. not at all).  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$            0$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0;\r\nk2 @Const 'k2' { } = 7500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using MathML in the rate equation.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $Piecewise({{p1, False}}, p2)$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$           10$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Volume of compartment \"compartment\" |$           1.$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := (false ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, S2 >= 4}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            10$ |mole                      |\r\n|Initial amount of S2                |$             0$ |mole                      |\r\n|Initial amount of S3                |$            10$ |mole                      |\r\n|Initial amount of S4                |$             0$ |mole                      |\r\n|Value of parameter p1               |$           1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$          0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$           1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := ((S2 >= 4) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, S2 > 7}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$           10$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$           10$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := ((S2 > 7) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, S1 <= 4}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            5$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$           1.$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S1], reversible: false, };\r\nreaction2 := ((S1 <= 4) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, S1 < 2.5}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            5$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S1], reversible: false, };\r\nreaction2 := ((S1 < 2.5) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using MathML in the rate equation.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * S1 * Piecewise({{p1, True}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$           1.$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := S1 * compartment * (true ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $Floor(S1 * p1) / p2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          0.0$ |mole                      |\r\n|Value of parameter p1               |$         10.5$ |litre |\r\n|Value of parameter p2               |$           10$ |second |\r\n|Volume of compartment \"compartment\" |$           1.$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := floor(p1 * S1) * pow(p2, (-1));\n\r\np1 @Const 'p1' { } = 10.5;\r\np2 @Const 'p2' { } = 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $Ceiling(S1 * p1)/p2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          0.0$ |mole                      |\r\n|Value of parameter p1               |$         10.5$ |litre |\r\n|Value of parameter p2               |$           10$ |second |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := ceil(p1 * S1) * pow(p2, (-1));\n\r\np1 @Const 'p1' { } = 10.5;\r\np2 @Const 'p2' { } = 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, And(S2 > 4, S1 < 5, S2 < 8)}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            10$ |mole                      |\r\n|Initial amount of S2                |$             0$ |mole                      |\r\n|Initial amount of S3                |$            10$ |mole                      |\r\n|Initial amount of S4                |$             0$ |mole                      |\r\n|Value of parameter p1               |$           1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$          0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$           1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S1, S2], reversible: false, };\r\nreaction2 := ((S2 > 4 and S1 < 5 and S2 < 8) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, Not(S2 < 4)}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$           10$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$           10$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := ((S2 >= 4) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, Or(S2 < 2, S2 > 4, S2 < 1)}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            4$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := ((S2 < 2 or S2 > 4 or S2 < 1) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $Piecewise({{p1, Xor(S2 < 2, S2 > 4, S2 < 1)}}, p2)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            4$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := ((S2 > 4 xor S2 < 1 xor S2 < 2) ? p1 : p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\n               non-unity compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is 2-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$            0$ |mole                      |\r\n|Value of parameter k1             |$          1.1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$          0.6$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 0.6;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 2-dimensional\r\n               non-unity compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$           75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$           25$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$          3.7$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 3.7;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a 2-dimensional\r\n               non-unity compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3              |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$ 0.75 \\x 10^7$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$ 0.25 \\x 10^5$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$         0.01$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 0.01;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500000;\r\nk2 @Const 'k2' { } = 25000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\n               non-unity compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is 1-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.9$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$          0.3$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 0.3;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.9;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 1-dimensional\r\n               non-unity compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$ 1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$          3.4$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$          9.8$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 9.8;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.4;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a 1-dimensional\r\n               non-unity compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$          2.0$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$            9$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            4$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 4;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 1.5 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 2 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 1 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 9;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\ncompartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is two-dimensional.  Species S1 and S2 are declared to have\r\nonly substance units.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|     |*Value*         |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$  1 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$            1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only.  Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-4;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 2-dimensional\r\ncompartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S1, S2 and S3 are\r\ndeclared to have only substance units.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1             |$           75$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$           25$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only.  Thus, they\r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.2;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  All four species are declared\r\nto have only substance units.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$ 7.5 \\x 10^3$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^3$ |mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only.  Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.002;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\ncompartment, with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is two-dimensional.  Species S1 is labeled as an SBML\r\nboundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$  1 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$            1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\ncompartment, with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is two-dimensional.  Species S2 is labeled as an SBML\r\nboundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$  1 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$            1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\ncompartment, with both species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is two-dimensional.  Both species S1 and S2 are labeled as an\r\nSBML boundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n!!!|Initial amount of S1              |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$  1 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$            1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 2-dimensional compartment.\r\ncompartment, with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S1 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|     |*Value*         |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$         0.75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$         0.25$ |second^-1^                |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 2-dimensional compartment.\r\ncompartment, with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S3 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1             |$         0.75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$         0.25$ |second^-1^                |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 2-dimensional compartment.\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Both species S1 and S2 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1             |$         0.75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$         0.25$ |second^-1^                |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 2-dimensional compartment.\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Both species S1 and S3 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1             |$         0.75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$         0.25$ |second^-1^                |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment, with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S1 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2              |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1             |$0.75 \\x 10^2$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^2$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.02 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment, with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S4 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$0.75 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Both species S1 and S2 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$0.75 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Both species S2 and S3 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$0.75 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Both species S3 and S4 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$0.75 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\ncompartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is one-dimensional.  Species S1 and S2 are declared to have\r\nonly substance units.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$   1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$          1.5$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only. Thus, they\r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 1-dimensional\r\ncompartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S1, S2 and S3 are\r\ndeclared to have only substance units.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          7.5$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 2;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  All four species are declared\r\nto have only substance units.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 6.2 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   5 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.015;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.02;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 620;\r\nk2 @Const 'k2' { } = 500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is one-dimensional.  Species S1 is labeled as an SBML\r\nboundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|     |*Value*         |*Units*  |\r\n|Initial amount of S1              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$   1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$          1.5$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, boundary: true, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is one-dimensional.  Species S2 is labeled as an SBML\r\nboundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$   1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$          1.5$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, boundary: true, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\ncompartment, with both species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is one-dimensional.  Both species S1 and S2 are labeled as an\r\nSBML boundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$   1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$          1.5$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, boundary: true, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, boundary: true, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 1-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S2 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          7.5$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, boundary: true, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 1.5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 1-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S3 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          7.5$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, boundary: true, compartment: compartment, } .= 1.5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 1-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Both species S1 and S2 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          7.5$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, boundary: true, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, boundary: true, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 1.5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 1-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Both species S1 and S3 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          7.5$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, boundary: true, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, boundary: true, compartment: compartment, } .= 1.5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S2 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$ 6.2 \\x 10^4$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   5 \\x 10^4$ |mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, boundary: true, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 1e-5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 62000;\r\nk2 @Const 'k2' { } = 50000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S3 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$ 6.2 \\x 10^3$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   5 \\x 10^3$ |mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.0015 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, boundary: true, compartment: compartment, } .= 0.002 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 6200;\r\nk2 @Const 'k2' { } = 5000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Both species S1 and S2 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$ 6.2 \\x 10^1$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   5 \\x 10^1$ |mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, boundary: true, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, boundary: true, compartment: compartment, } .= 0.15 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 0.2 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 62;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Both species S3 and S4 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 6.2 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   5 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, boundary: true, compartment: compartment, } .= 0.02 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, boundary: true, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 620;\r\nk2 @Const 'k2' { } = 500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Both species S2 and S4 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$ 6.2 \\x 10^4$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   5 \\x 10^4$ |mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, boundary: true, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, boundary: true, compartment: compartment, } .= 1e-5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 62000;\r\nk2 @Const 'k2' { } = 50000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 0-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is 0-dimensional.  Species S1 is labeled as an SBML boundary\r\nspecies.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2  |$            0$ |mole                      |\r\n|Value of parameter k1 |$        1.023$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 0.15;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.023;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 0-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is 0-dimensional.  Species S2 is labeled as an SBML boundary\r\nspecies.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2  |$            0$ |mole                      |\r\n|Value of parameter k1 |$        1.023$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.15;\r\nS2 @Species 'S2' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.023;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 0-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Species S2 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0 \\x 10^-15$ |mole                      |\r\n|Initial amount of S2  |$2.0 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3  |$1.0 \\x 10^-15$ |mole                      |\r\n|Value of parameter k1 |$         0.75$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.25$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 9.8;\r\nk2 @Const 'k2' { } = 0.57;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 0-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Species S3 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0 \\x 10^-15$ |mole                      |\r\n|Initial amount of S2  |$2.0 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3  |$1.0 \\x 10^-15$ |mole                      |\r\n|Value of parameter k1 |$         0.75$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.25$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS3 @Species 'S3' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 9.8;\r\nk2 @Const 'k2' { } = 0.57;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with three species in a 0-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Both species S2 and S3 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0 \\x 10^-15$ |mole                      |\r\n|Initial amount of S2  |$2.0 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3  |$1.0 \\x 10^-15$ |mole                      |\r\n|Value of parameter k1 |$         0.75$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.25$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS3 @Species 'S3' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 9.8;\r\nk2 @Const 'k2' { } = 0.57;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 0-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Species S1 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.0$ |mole                      |\r\n|Initial amount of S2  |$          1.5$ |mole                      |\r\n|Initial amount of S3  |$          2.0$ |mole                      |\r\n|Initial amount of S4  |$          0.5$ |mole                      |\r\n|Value of parameter k1 |$          0.6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.13$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.6;\r\nk2 @Const 'k2' { } = 0.13;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 0-dimensional\r\ncompartment, with a species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Species S4 is labeled as an\r\nSBML boundary species.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.0$ |mole                      |\r\n|Initial amount of S2  |$          1.5$ |mole                      |\r\n|Initial amount of S3  |$          2.0$ |mole                      |\r\n|Initial amount of S4  |$          0.5$ |mole                      |\r\n|Value of parameter k1 |$          0.6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.13$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2;\r\nS4 @Species 'S4' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 0.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.6;\r\nk2 @Const 'k2' { } = 0.13;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 0-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Both species S1 and S2 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.0$ |mole                      |\r\n|Initial amount of S2  |$          1.5$ |mole                      |\r\n|Initial amount of S3  |$          2.0$ |mole                      |\r\n|Initial amount of S4  |$          0.5$ |mole                      |\r\n|Value of parameter k1 |$          0.6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.13$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1.5;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.6;\r\nk2 @Const 'k2' { } = 0.13;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 0-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Both species S1 and S3 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.0$ |mole                      |\r\n|Initial amount of S2  |$          1.5$ |mole                      |\r\n|Initial amount of S3  |$          2.0$ |mole                      |\r\n|Initial amount of S4  |$          0.5$ |mole                      |\r\n|Value of parameter k1 |$          0.6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.13$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS3 @Species 'S3' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 2;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.6;\r\nk2 @Const 'k2' { } = 0.13;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 0-dimensional\r\ncompartment, with two species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, 0D-Compartment, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Both species S3 and S4 are\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.0$ |mole                      |\r\n|Initial amount of S2  |$          1.5$ |mole                      |\r\n|Initial amount of S3  |$          2.0$ |mole                      |\r\n|Initial amount of S4  |$          0.5$ |mole                      |\r\n|Value of parameter k1 |$          0.6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$         0.13$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS3 @Species 'S3' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 2;\r\nS4 @Species 'S4' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 0.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.6;\r\nk2 @Const 'k2' { } = 0.13;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Species S3 is\r\nlabeled as constant and therefore cannot be changed by rules or reactions.\r\nThe model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * S3 * compartment$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          0.5$ |mole                      |\r\n|Initial amount of S3                |$          1.2$ |mole                      |\r\n|Value of parameter k1               |$         1.78$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$         1.34$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1.34;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.2 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 1.78;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S4 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$0.75 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$1.25 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 1.68 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$ 0.27 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$          1.2$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1.2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 7.5e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.00125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1680;\r\nk2 @Const 'k2' { } = 270;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with five species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are five\r\nspecies named S1, S2, S3, S4 and S5 and two parameters named k1 and k2.\r\nSpecies S5 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment / S5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S5                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$  1.3 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$          0.2$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 5e-7 / compartment;\r\nS5 @Species 'S5' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, modifiers: [S5], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4 * pow(S5, (-1));\n\r\nk1 @Const 'k1' { } = 1300;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in a \r\n               2 dimensional compartment, where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Compartment\r\n\"compartment\" is 2-dimensional.  Species S3 is labeled as constant and\r\ntherefore cannot be changed by rules or reactions.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * S3 * compartment$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$          1.5$ |mole                      |\r\n|Initial amount of S2              |$          0.5$ |mole                      |\r\n|Initial amount of S3              |$          1.2$ |mole                      |\r\n|Value of parameter k1             |$         1.78$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.5 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 1.2 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 1.78;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a 2 dimensional compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S4 is labeled as\r\nconstant and therefore cannot be changed by rules or reactions.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3              |$0.75 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4              |$1.25 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$ 1.68 \\x 10^3$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$ 0.27 \\x 10^3$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.0015 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 7.5e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 0.00125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1680;\r\nk2 @Const 'k2' { } = 270;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with five species in a 2 dimensional compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are five\r\nspecies named S1, S2, S3, S4 and S5 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S5 is labeled as\r\nconstant and therefore cannot be changed by rules or reactions.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment / S5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3              |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4              |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S5              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$  1.3 \\x 10^6$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$          0.3$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 5e-7 / compartment;\r\nS5 @Species 'S5' { units: mole/metre^2, boundary: true, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, modifiers: [S5], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4 * pow(S5, (-1));\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in a \r\n               1 dimensional compartment, where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Compartment\r\n\"compartment\" is 1-dimensional.  Species S3 is labeled as constant and\r\ntherefore cannot be changed by rules or reactions.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * S3 * compartment$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          0.5$ |mole                      |\r\n|Initial amount of S3                |$          1.2$ |mole                      |\r\n|Value of parameter k1               |$         1.78$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.5 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, boundary: true, compartment: compartment, } .= 1.2 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 1.78;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a 1 dimensional compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S4 is labeled as\r\nconstant and therefore cannot be changed by rules or reactions.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$0.75 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$1.25 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 1.68 \\x 10^3$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$ 0.27 \\x 10^3$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0.0015 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 7.5e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, boundary: true, compartment: compartment, } .= 0.00125 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1680;\r\nk2 @Const 'k2' { } = 270;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with five species in a 1 dimensional compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are five\r\nspecies named S1, S2, S3, S4 and S5 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S5 is labeled as\r\nconstant and therefore cannot be changed by rules or reactions.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment / S5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S5                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$  1.3 \\x 10^6$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 5e-7 / compartment;\r\nS5 @Species 'S5' { units: mole/metre, boundary: true, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, modifiers: [S5], reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4 * pow(S5, (-1));\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in a \r\n               0 dimensional compartment, where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Compartment\r\n\"compartment\" is 0-dimensional.  Species S3 is labeled as constant and\r\ntherefore cannot be changed by rules or reactions.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.5$ |mole                      |\r\n|Initial amount of S2  |$          0.5$ |mole                      |\r\n|Initial amount of S3  |$          1.2$ |mole                      |\r\n|Value of parameter k1 |$         1.78$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.5;\r\nS3 @Species 'S3' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1.2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := k1 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 1.78;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a 0 dimensional compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Species S4 is labeled as\r\nconstant and therefore cannot be changed by rules or reactions.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$ 1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2  |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3  |$0.75 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4  |$1.25 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1 |$ 1.68 \\x 10^3$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$ 0.27 \\x 10^3$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 7.5e-4;\r\nS4 @Species 'S4' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 0.00125;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1680;\r\nk2 @Const 'k2' { } = 270;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with five species in a 0 dimensional compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ConstantSpecies, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are five\r\nspecies named S1, S2, S3, S4 and S5 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  Species S5 is labeled as\r\nconstant and therefore cannot be changed by rules or reactions.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 / S5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2  |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3  |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4  |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S5  |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1 |$  1.3 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$          0.3$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 5e-7;\r\nS5 @Species 'S5' { units: mole, boundary: true, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, modifiers: [S5], reversible: false, };\r\nreaction2 := k2 * S3 * S4 * pow(S5, (-1));\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions involving two species in one\r\n               2 dimensional compartment, with non-unity stoichiometries.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  Compartment\r\n\"compartment\" is 2-dimensional.  The model contains two reactions defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $k1 * S1 * compartment$    |\r\n| 2 S2 -> S1 | $k2 * S2 * S2 * compartment$ |]\r\n\r\nNote the stoichiometry of S2 is 2 in both reactions.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$            0$ |mole                      |\r\n|Value of parameter k1             |$         0.35$ |second^-1^ |\r\n|Value of parameter k2             |$          180$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * pow(S2, 2);\n\r\nk1 @Const 'k1' { } = 0.35;\r\nk2 @Const 'k2' { } = 180;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions involving two species in one\r\n               1 dimensional compartment, with non-unity stoichiometries.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  Compartment\r\n\"compartment\" is 1-dimensional.  The model contains two reactions defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $k1 * S1 * compartment$    |\r\n| 2 S2 -> S1 | $k2 * S2 * S2 * compartment$ |]\r\n\r\nNote the stoichiometry of S2 is 2 in both reactions.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$         0.35$ |second^-1^ |\r\n|Value of parameter k2               |$          180$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S2 = S1, reversible: false, };\r\nreaction2 := compartment * k2 * pow(S2, 2);\n\r\nk1 @Const 'k1' { } = 0.35;\r\nk2 @Const 'k2' { } = 180;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions involving two species in one\r\n               0 dimensional compartment, with non-unity stoichiometries.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named k1 and k2.  Compartment\r\n\"compartment\" is 0-dimensional.  The model contains two reactions defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2 S2 | $k1 * S1$    |\r\n| 2 S2 -> S1 | $k2 * S2 * S2$ |]\r\n\r\nNote the stoichiometry of S2 is 2 in both reactions.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2  |$            0$ |mole                      |\r\n|Value of parameter k1 |$         0.35$ |second^-1^ |\r\n|Value of parameter k2 |$          180$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-4;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S2 = S1, reversible: false, };\r\nreaction2 := k2 * pow(S2, 2);\n\r\nk1 @Const 'k1' { } = 0.35;\r\nk2 @Const 'k2' { } = 180;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 2D compartment,\r\n               with one species having a stoichiometry of 2.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 + S2 -> S3 | $k1 * S1 * S1 * S2 * compartment$  |\r\n| S3 -> 2S1 + S2 | $k2 * S3 * compartment$        |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$0.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$ 1.6 \\x 10^4$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$          0.7$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$1$             |metre^2^                        |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * pow(S1, 2) * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = 2*S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 16000;\r\nk2 @Const 'k2' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 1D compartment,\r\n               with one species having a stoichiometry of 2.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 + S2 -> S3 | $k1 * S1 * S1 * S2 * compartment$  |\r\n| S3 -> 2S1 + S2 | $k2 * S3 * compartment$        |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$0.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 1.6 \\x 10^3$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.7$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$1$             |metre                        |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 5e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * pow(S1, 2) * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = 2*S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 1600;\r\nk2 @Const 'k2' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 0D compartment,\r\n               with one species having a stoichiometry of 2.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 + S2 -> S3 | $k1 * S1 * S1 * S2$  |\r\n| S3 -> 2S1 + S2 | $k2 * S3t$        |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2  |$0.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3  |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1 |$ 1.6 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$          0.7$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.005;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * pow(S1, 2) * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = 2*S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 160;\r\nk2 @Const 'k2' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 2D compartment,\r\n               with non-unity stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + 2S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2  | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3              |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4              |$            0$ |mole                      |\r\n|Value of parameter k1             |$  0.9 \\x 10^6$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$ 0.15 \\x 10^6$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$1$             |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 5e-7 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + 2*S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 900000;\r\nk2 @Const 'k2' { } = 150000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 1D compartment,\r\n               with non-unity stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + 2S4 | $k1 * S1 * S2 * compartment$  |\r\n| S3 + S4 -> S1 + S2  | $k2 * S3 * S4 * compartment$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter k1               |$  0.9 \\x 10^6$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$ 0.15 \\x 10^6$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$1$             |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 5e-7 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 2e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + 2*S4, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 900000;\r\nk2 @Const 'k2' { } = 150000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 0D compartment,\r\n               with non-unity stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + 2S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2  | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2  |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3  |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4  |$            0$ |mole                      |\r\n|Value of parameter k1 |$  0.9 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$ 0.15 \\x 10^6$ |mole^-1^ second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 5e-7;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + 2*S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 900000;\r\nk2 @Const 'k2' { } = 150000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $calculate(S1,p1,p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Ceiling(x * y)! / z$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          0.0$ |mole                      |\r\n|Value of parameter p1               |$            4$ |litre mole^-1^            |\r\n|Value of parameter p2               |$           25$ |second mole^-1^           |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: factorial(ceil(x * y)) * pow(z, (-1)), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := calculate(S1, p1, p2);\n\r\np1 @Const 'p1' { } = 4;\r\np2 @Const 'p2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S2, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Piecewise({{y, x > 7}}, z)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$           10$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$           10$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: ((x > 7) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := calculate(S2, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using MathML in the rate equation.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $calculate(p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y | $Piecewise({{x, False}}, y)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$           10$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Volume of compartment \"compartment\" |$           1.$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y], math: y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := calculate(p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S2, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Piecewise({{y, x >= 4}}, z)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            10$ |mole                      |\r\n|Initial amount of S2                |$             0$ |mole                      |\r\n|Initial amount of S3                |$            10$ |mole                      |\r\n|Initial amount of S4                |$             0$ |mole                      |\r\n|Value of parameter p1               |$           1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$          0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$           1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: ((x >= 4) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := calculate(S2, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S1, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Piecewise({{y, x <= 4}}, z)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            5$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$           1.$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: ((x <= 4) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S1], reversible: false, };\r\nreaction2 := calculate(S1, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S1, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Piecewise({{y, x < 2.5}}, z)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            5$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: ((x < 2.5) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S1], reversible: false, };\r\nreaction2 := calculate(S1, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using MathML in the rate equation.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and two parameters named p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * S1 * calculate(p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y | $Piecewise({{x, True}}, y)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$           1.$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y], math: x, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * S1 * calculate(p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S1, S2, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the reaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | w, x, y, z | $Piecewise({{y, And(x > 4, w < 5, x < 8)}}, z)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            10$ |mole                      |\r\n|Initial amount of S2                |$             0$ |mole                      |\r\n|Initial amount of S3                |$            10$ |mole                      |\r\n|Initial amount of S4                |$             0$ |mole                      |\r\n|Value of parameter p1               |$           1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$          0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$           1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$             1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [w, x, y, z], math: ((x > 4 and w < 5 and x < 8) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S1, S2], reversible: false, };\r\nreaction2 := calculate(S1, S2, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition  \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S2, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the\r\nreaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Piecewise({{y, Not(x < 4)}}, z)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$           10$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$           10$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: ((x >= 4) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 10 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := calculate(S2, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S2, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the\r\nreaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Piecewise({{y, Or(x < 2, x > 4, x < 1)}}, z)$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            4$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: ((x < 2 or x > 4 or x < 1) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := calculate(S2, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in one\r\ncompartment using a rate that causes a discontinuity in the output.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named p1, p2 and k1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k1 * S1$  |\r\n| S3 -> S4 | $calculate(S2, p1, p2)$  |]\r\n\r\nThe model contains one functionDefinition, which is used within the\r\nreaction, defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | calculate | x, y, z | $Piecewise({{y, Xor(x < 2, x > 4, x < 1)}}, z)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            4$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Value of parameter p1               |$          1.5$ |mole second^-1^ |\r\n|Value of parameter p2               |$         0.05$ |mole second^-1^ |\r\n|Value of parameter k1               |$          1.0$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\ncalculate #defineFunction { arguments: [x, y, z], math: ((x > 4 xor x < 1 xor x < 2) ? y : z), };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 4 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, modifiers: [S2], reversible: false, };\r\nreaction2 := calculate(S2, p1, p2);\n\r\np1 @Const 'p1' { } = 1.5;\r\np2 @Const 'p2' { } = 0.05;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2D\r\ncompartment and nonzero initial amounts using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is 2-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * multiply(k1,S1)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2              |$0.5 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1             |$         1.75$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$          3.5$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 3.5;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.15 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.05 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1D\r\ncompartment and nonzero initial amounts using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is 1-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * multiply(k1,S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$2.63 \\x 10^-3$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$         0.07$ |metre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 0.07;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 1.5e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 0.00263;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 2D compartment \r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3              |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$         3.24$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$        0.125$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$          6.8$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 6.8;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.24;\r\nk2 @Const 'k2' { } = 0.125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 1D compartment \r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$         3.24$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$        0.125$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$          6.8$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 6.8;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.24;\r\nk2 @Const 'k2' { } = 0.125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 2D compartment\r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$0.9 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2              |$1.1 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3              |$1.2 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1             |$12.75 \\x 10^1$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^1$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$         1.98$ |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1.98;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.009 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.011 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.012 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 127.5;\r\nk2 @Const 'k2' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one 1D compartment\r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * compartment$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * compartment$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$0.9 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.1 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.2 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^2$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^4$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$         1.98$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1.98;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 9e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 1.1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 1.2e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := compartment * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are four species named S1, S2, S3 and S4 and three parameters named\r\nk1, k2 and k3.  Compartment \"compartment\" contains species S1 and S2.\r\nCompartment \"compartment1\" contains species S3 and S4.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 3 parameters (k1, k2, k3)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |]\r\n\r\nThe first reaction occurs entirely in compartment \"compartment\", whereas\r\nthe second reaction occurs between a species in \"compartment\" and a species\r\nin \"compartment1\".\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S4 | $k3 * S3$ |]\r\n\r\nIn this case the initial value declared for species S4 is consistent with\r\nthat calculated by the assignmentRule.  Note that since this assignmentRule\r\nmust always remain true, it should be considered during simulation.\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial concentration of species S4 | $k3 * S3$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial value of parameter k3 | $0.25$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 := k3 * S3;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are five species named S1, S2, S3, S4 and S5 and four parameters\r\nnamed k1, k2, k3 and k4.  Compartment \"compartment\" contains species S1 and\r\nS2.  Compartment \"compartment1\" contains species S3, S4 and S5.\r\n\r\nThe model contains:\r\n* 5 species (S1, S2, S3, S4, S5)\r\n* 4 parameters (k1, k2, k3, k4)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |\r\n| reaction3: S3 + S4 -> 2S4 | $compartment * k3 * S3 * S4$ |]\r\n\r\nThe first reaction occurs entirely within compartment \"compartment\", the\r\nsecond reaction occurs between a species in compartment \"compartment\" and a\r\nspecies in \"compartment1\" and the third reaction occurs entirely within\r\n\"compartment1\".\r\n\r\nThe model contains one rule which assigns value to species S5:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S5 | $k4 * S2$ |]\r\n\r\nIn this case the initial value declared for species S5 is inconsistent with\r\nthat calculated by the assignmentRule; the calculated value should be used.\r\nNote that since this assignmentRule must always remain true, it should be\r\nconsidered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial amount of species S4 | $0.1$ | variable |\r\n| Initial concentration of species S5 | $k4 * S2$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $7.5$ | constant |\r\n| Initial value of parameter k3 | $0.75$ | constant |\r\n| Initial value of parameter k4 | $0.5$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, } .= 0.1 / compartment1;\r\nS5 @Species 'S5' { units: mole/litre, compartment: compartment1, } .= 0.1 / compartment1;\r\nS5 := k4 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\r\nreaction3 @Reaction 'reaction3' { actors: S3 + S4 = 2*S4, reversible: false, };\r\nreaction3 := compartment * k3 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 7.5;\r\nk3 @Const 'k3' { } = 0.75;\r\nk4 @Const 'k4' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are three species named S1, S3 and S5 and three parameters named k1,\r\nk2 and k4.  Compartment \"compartment\" contains species S1.  Compartment\r\n\"compartment1\" contains species S3 and S5.\r\n\r\nThe model contains:\r\n* 3 species (S1, S3, S5)\r\n* 3 parameters (k1, k2, k4)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 -> S3 | $compartment * k1 * S1$ |\r\n| reaction2: S3 -> S1 | $compartment1 * k2 * (S3 + -1 * S1)$ |]\r\n\r\nBoth reactions occur between species within different compartments.\r\n\r\nThe model contains one rule which assigns value to species S5:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S5 | $k4 * S3$ |]\r\n\r\nIn this case the initial value declared for species S5 is consistent with\r\nthat calculated by the assignmentRule.  Note that since this assignmentRule\r\nmust always remain true, it should be considered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial concentration of species S5 | $k4 * S3$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial value of parameter k4 | $0.5$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS5 @Species 'S5' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS5 := k4 * S3;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, };\r\nreaction2 := compartment1 * k2 * (S3 + (-1) * S1);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk4 @Const 'k4' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are four species named S1, S2, S3 and S4 and three parameters named\r\nk1, k2 and k3.  Compartment \"compartment\" contains species S1 and S2.\r\nCompartment \"compartment1\" contains species S3 and S4.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 3 parameters (k1, k2, k3)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |]\r\n\r\nThe first reaction occurs entirely in compartment, whereas the second reaction\r\noccurs between a species in compartment and a species in compartment1.\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S4 | $k3 * S3$ |]\r\n\r\nIn this case the initial value declared for species S4 is inconsistent with\r\nthat calculated by the assignmentRule; the calculated value should be used.\r\nNote that since this assignmentRule must always remain true, it should be\r\nconsidered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial concentration of species S4 | $k3 * S3$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial value of parameter k3 | $0.25$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, } .= 1 / compartment1;\r\nS4 := k3 * S3;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are four species named S1, S2, S3 and S4 and three parameters named\r\nk1, k2 and k3.  Compartment \"compartment\" contains species S1 and S2.\r\nCompartment \"compartment1\" contains species S3 and S4.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 3 parameters (k1, k2, k3)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |]\r\n\r\nThe first reaction occurs entirely in compartment, whereas the second reaction\r\noccurs between a species in compartment and a species in compartment1.\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S4 | $k3 * S3$ |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial concentration of species S4 | $k3 * S3$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial value of parameter k3 | $0.25$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, };\r\nS4 := k3 * S3;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are five species named S1, S2, S3, S4 and S5 and four parameters\r\nnamed k1, k2, k3 and k4.  Compartment \"compartment\" contains species S1 and\r\nS2.  Compartment \"compartment1\" contains species S3, S4 and S5.\r\n\r\nThe model contains:\r\n* 5 species (S1, S2, S3, S4, S5)\r\n* 4 parameters (k1, k2, k3, k4)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |\r\n| reaction3: S3 + S4 -> 2S4 | $compartment * k3 * S3 * S4$ |]\r\n\r\nThe first reaction occurs entirely within compartment, the second reaction\r\noccurs between a species in compartment and a species in compartment1 and the\r\nthird reaction occurs entirely within compartment1.\r\n\r\nThe model contains one rule which assigns value to species S5:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S5 | $k4 * S2$ |]\r\n\r\nIn this case the initial value declared for species S5 is consistent with that calculated\r\nby the assignmentRule.  Note that since this assignmentRule \r\nmust always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial amount of species S4 | $0.1$ | variable |\r\n| Initial concentration of species S5 | $k4 * S2$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $7.5$ | constant |\r\n| Initial value of parameter k3 | $0.75$ | constant |\r\n| Initial value of parameter k4 | $0.5$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, } .= 0.1 / compartment1;\r\nS5 @Species 'S5' { units: mole/litre, compartment: compartment1, } .= 0.5 / compartment1;\r\nS5 := k4 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\r\nreaction3 @Reaction 'reaction3' { actors: S3 + S4 = 2*S4, reversible: false, };\r\nreaction3 := compartment * k3 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 7.5;\r\nk3 @Const 'k3' { } = 0.75;\r\nk4 @Const 'k4' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned, MultiCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are five species named S1, S2, S3, S4 and S5 and four parameters\r\nnamed k1, k2, k3 and k4.  Compartment \"compartment\" contains species S1 and\r\nS2.  Compartment \"compartment1\" contains species S3, S4 and S5.\r\n\r\nThe model contains:\r\n* 5 species (S1, S2, S3, S4, S5)\r\n* 4 parameters (k1, k2, k3, k4)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 + S2 -> 2S2 | $compartment * k1 * S1 * S2$ |\r\n| reaction2: S2 -> S3 | $compartment1 * k2 * (S2 + -1 * S3)$ |\r\n| reaction3: S3 + S4 -> 2S4 | $compartment * k3 * S3 * S4$ |]\r\n\r\nThe first reaction occurs entirely within compartment, the second reaction\r\noccurs between a species in compartment and a species in compartment1 and the\r\nthird reaction occurs entirely within compartment1.\r\n\r\nThe model contains one rule which assigns value to species S5:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S5 | $k4 * S2$ |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial amount of species S4 | $0.1$ | variable |\r\n| Initial concentration of species S5 | $k4 * S2$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $7.5$ | constant |\r\n| Initial value of parameter k3 | $0.75$ | constant |\r\n| Initial value of parameter k4 | $0.5$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment1, } .= 0.1 / compartment1;\r\nS5 @Species 'S5' { units: mole/litre, compartment: compartment1, };\r\nS5 := k4 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := compartment1 * k2 * (S2 + (-1) * S3);\r\nreaction3 @Reaction 'reaction3' { actors: S3 + S4 = 2*S4, reversible: false, };\r\nreaction3 := compartment * k3 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 7.5;\r\nk3 @Const 'k3' { } = 0.75;\r\nk4 @Const 'k4' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned, MultiCompartment, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are three species named S1, S3 and S5 and three parameters named k1,\r\nk2 and k4.  Compartment \"compartment\" contains species S1.  Compartment\r\n\"compartment1\" contains species S3 and S5.\r\n\r\nThe model contains:\r\n* 3 species (S1, S3, S5)\r\n* 3 parameters (k1, k2, k4)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 -> S3 | $compartment * k1 * S1$ |\r\n| reaction2: S3 -> S1 | $compartment1 * k2 * (S3 + -1 * S1)$ |]\r\n\r\nBoth reactions occur between species within different compartments.\r\n\r\nThe model contains one rule which assigns value to species S5:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S5 | $k4 * S3$ |]\r\n\r\nIn this case the initial value declared for species S5 is inconsistent with\r\nthat calculated by the assignmentRule; the calculated value should be used.\r\nNote that since this assignmentRule must always remain true, it should be\r\nconsidered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial concentration of species S5 | $k4 * S3$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial value of parameter k4 | $0.5$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS5 @Species 'S5' { units: mole/litre, compartment: compartment1, } .= 1 / compartment1;\r\nS5 := k4 * S3;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, };\r\nreaction2 := compartment1 * k2 * (S3 + (-1) * S1);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk4 @Const 'k4' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Reactions occurring between two compartments. \r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned, MultiCompartment, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThe model contains two compartments named compartment and compartment1.\r\nThere are three species named S1, S3 and S5 and three parameters named k1,\r\nk2 and k4.  Compartment \"compartment\" contains species S1.  Compartment\r\n\"compartment1\" contains species S3 and S5.\r\n\r\nThe model contains:\r\n* 3 species (S1, S3, S5)\r\n* 3 parameters (k1, k2, k4)\r\n* 2 compartments (compartment, compartment1)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| reaction1: S1 -> S3 | $compartment * k1 * S1$ |\r\n| reaction2: S3 -> S1 | $compartment1 * k2 * (S3 + -1 * S1)$ |]\r\n\r\nBoth reactions occur between species within different compartments.\r\n\r\nThe model contains one rule which assigns value to species S5:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S5 | $k4 * S3$ |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S3 | $0$ | variable |\r\n| Initial concentration of species S5 | $k4 * S3$ | variable |\r\n| Initial value of parameter k1 | $0.75$ | constant |\r\n| Initial value of parameter k2 | $0.25$ | constant |\r\n| Initial value of parameter k4 | $0.5$ | constant |\r\n| Initial volume of compartment 'compartment' | $1$ | constant |\r\n| Initial volume of compartment 'compartment1' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\r\ncompartment1 @Compartment 'compartment1' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment1, } .= 0 / compartment1;\r\nS5 @Species 'S5' { units: mole/litre, compartment: compartment1, };\r\nS5 := k4 * S3;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, };\r\nreaction2 := compartment1 * k2 * (S3 + (-1) * S1);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk4 @Const 'k4' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, HasOnlySubstanceUnits, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.15;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-5;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-5;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1e-5;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 2.25e-5;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S3\r\nis labeled as an SBML boundary species.  The model contains one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S1\r\nis labeled as an SBML boundary species.  The model contains one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nSpecies S4 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nSpecies S1 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nSpecies S3 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n!!!|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nBoth species S3 and S4 are labeled as an SBML boundary species.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Both\r\nspecies S1 and S3 are labeled as an SBML boundary species.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the initial value\r\nmust be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, ConstantSpecies, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S1\r\nis labeled as both constant and an SBML boundary condition, and therefore cannot \r\nbe changed by rules or reactions.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.1 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, ConstantSpecies, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S2\r\nis labeled as both constant and an SBML boundary condition, and therefore \r\ncannot be changed by rules or reactions.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nSpecies S2 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$ 0.5 \\x 10^-2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.005;\r\nk2 @Const 'k2' { } = 5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nSpecies S3 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$ 0.5 \\x 10^-2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.005;\r\nk2 @Const 'k2' { } = 5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nSpecies S5 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S5 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Initial amount of S5                |$   1 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$ 0.5 \\x 10^-2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1.5e-5 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 2.25e-5 / compartment;\r\nS4 := k3 * S2;\r\nS5 @Species 'S5' { units: mole/litre, boundary: true, compartment: compartment, } .= 1e-5 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, modifiers: [S5], reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S5;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.005;\r\nk2 @Const 'k2' { } = 5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, ConstantSpecies, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S4\r\nis labeled as constant and therefore cannot be changed by rules or\r\nreactions.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $compartment * k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S4$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, };\r\nS3 := k1 * S4;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.015 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment\r\n               whose volume is varying.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are two\r\nspecies called S1 and S2 and three parameters called k1, p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | C       | $p1 * p2$  |\r\n | Rate       | p2      | $0.1       |]\r\n\r\nIn this case the initial value declared for C is consistent\r\nwith that calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.9$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre mole^-1^ |\r\n|Value of parameter p2               |$          1.5$ |mole second^-1^ |\r\n|Volume of compartment C |$         0.15$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 0.15;\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 1.5;\n\r\nk1 @Const 'k1' { } = 0.9;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment\r\n               whose volume is varying.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called \"compartment\".  There are two\r\nspecies called S1 and S2 and three parameters called k1, p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to compartment\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | compartment | $p1 * p2$  |\r\n | Rate       |     p2      | $0.1       |]\r\n\r\nIn this case, the initial value declared for compartment \"compartment\" is\r\ninconsistent with that calculated by the assignmentRule; the calculated\r\nvalue should be used.  Note that since this assignmentRule must always\r\nremain true, it should be considered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.9$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre mole^-1^ |\r\n|Value of parameter p2               |$          1.5$ |mole second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, } .= 1;\r\ncompartment := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 1.5;\n\r\nk1 @Const 'k1' { } = 0.9;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment\r\n               whose volume is varying.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are two\r\nspecies called S1 and S2 and three parameters called k1, p1 and p2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | C | $p1 * p2$  |\r\n | Rate       |     p2      | $0.1       |]\r\n\r\nIn this case, the initial value is not declared for compartment\r\nC and must be calculated by the assignmentRule.  Note that\r\nsince this assignmentRule must always remain true, it should be considered\r\nduring simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.9$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre mole^-1^ |\r\n|Value of parameter p2               |$          1.5$ |mole second^-1^ |\r\n|Volume of compartment C |$   undeclared$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, };\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 1.5;\n\r\nk1 @Const 'k1' { } = 0.9;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, RateRule, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are three\r\nspecies called S1, S2 and S3 and four parameters called k1, k2, p1 and p2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment |  C  | $p1 * p2$  |\r\n | Rate       | p2  | $0.1       |]\r\n\r\nIn this case, the initial value declared for compartment C is\r\ninconsistent with that calculated by the assignmentRule; the calculated\r\nvalue should be used.  Note that since this assignmentRule must always\r\nremain true, it should be considered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          2.5$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre mole^-1^ |\r\n|Value of parameter p2               |$          1.0$ |mole second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 2.5;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, RateRule, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are three\r\nspecies called S1, S2 and S3 and four parameters called k1, k2, p1 and p2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment |  C  | $p1 * p2$  |\r\n | Rate       | p2  | $0.2       |]\r\n\r\nIn this case, the initial value declared for compartment C is\r\nconsistent with that calculated by the assignmentRule.  Note that since\r\nthis assignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           25$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre mole^-1^ |\r\n|Value of parameter p2               |$          1.0$ |mole second^-1^ |\r\n|Volume of compartment C |$          0.1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 0.1;\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.2;\n\r\np2 @Record 'p2' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 25;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, RateRule, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are three\r\nspecies called S1, S2 and S3 and four parameters called k1, k2, p1 and p2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment |  C  | $p1 * p2$  |\r\n | Rate       | p2  | $0.1       |]\r\n\r\nIn this case, the initial value is not declared for compartment\r\nC and must be calculated by the assignmentRule.  Note that\r\nsince this assignmentRule must always remain true, it should be considered\r\nduring simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$         0.1$ |mole                      |\r\n|Initial amount of S2                |$          0.2$ |mole                      |\r\n|Initial amount of S3                |$          0.1$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre mole^-1^ |\r\n|Value of parameter p2               |$          1.0$ |mole second^-1^ |\r\n|Volume of compartment C |$    undeclared$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, };\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, RateRule, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | C       | $p1 * p2$  |\r\n | Rate       | p2      | $0.1$       |]\r\n\r\nIn this case, the initial value declared for compartment C is\r\ninconsistent with that calculated by the assignmentRule; the calculated\r\nvalue should be used.  Note that since this assignmentRule must always\r\nremain true, it should be considered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$          1.1$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$          0.0365$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.0025$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre^2^ mole^-1^ |\r\n|Value of parameter p2               |$          1.5$ |mole second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 1;\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 1.5;\n\r\nk1 @Const 'k1' { } = 0.0365;\r\nk2 @Const 'k2' { } = 0.0025;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, RateRule, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | C       | $p1 * p2$  |\r\n | Rate       | p2      | $0.1$       |]\r\n\r\nIn this case, the initial value declared for compartment C is\r\nconsistent with that calculated by the assignmentRule.  Note that since\r\nthis assignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$          1.1$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$          0.0365$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.0025$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre^2^ mole^-1^ |\r\n|Value of parameter p2               |$          1.5$ |mole second^-1^ |\r\n|Volume of compartment C |$           0.1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 0.1;\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 1.5;\n\r\nk1 @Const 'k1' { } = 0.0365;\r\nk2 @Const 'k2' { } = 0.0025;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment whose \r\n               volume is varying.\r\ncomponentTags: Compartment, Species, RateRule, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment, NonConstantParameter, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one varying compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two rules. The assignmentRule assigns value to C\r\nand the rateRule determines the rate at which p2 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | C       | $p1 * p2$  |\r\n | Rate       | p2      | $0.1$       |]\r\n\r\nIn this case, the initial value is not declared for compartment\r\nC and must be calculated by the assignmentRule.  Note that\r\nsince this assignmentRule must always remain true, it should be considered\r\nduring simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          1.5$ |mole                      |\r\n|Initial amount of S3                |$          1.1$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$          7.5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          2.5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$          0.1$ |litre^2^ mole^-1^ |\r\n|Volume of compartment C |$   undeclared$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, };\r\nC := p1 * p2;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\r\np2_proc @Process { actors:  = p2, aux: {metaid: \"rule2\"}, };\r\np2_proc := 0.1;\n\r\np2 @Record 'p2' { } .= 0.9;\n\r\nk1 @Const 'k1' { } = 0.0365;\r\nk2 @Const 'k2' { } = 0.0025;\r\np1 @Const 'p1' { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a 2D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Compartment\r\n\"compartment\" is 2-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.65$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$          1.5$ |mole                      |\r\n|Initial amount of S2              |$            0$ |mole                      |\r\n|Initial amount of S3              |$            0$ |mole                      |\r\n|Value of parameter k1             |$        1.546$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.65;\n\r\nk1 @Const 'k1' { } = 1.546;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a 1D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Compartment\r\n\"compartment\" is 1-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.65$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k1               |$        1.546$ |second^-1^ |\r\n|length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.65;\n\r\nk1 @Const 'k1' { } = 1.546;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a 0D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  Compartment\r\n\"compartment\" is 0-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.65$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.5$ |mole                      |\r\n|Initial amount of S2  |$            0$ |mole                      |\r\n|Initial amount of S3  |$            0$ |mole                      |\r\n|Value of parameter k1 |$        1.546$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.65;\n\r\nk1 @Const 'k1' { } = 1.546;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a 2D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3              |$4.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4              |$  1 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1             |$0.69 \\x 10^2$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.23 \\x 10^-1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 0.04 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1 / 100);\n\r\nk1 @Const 'k1' { } = 69;\r\nk2 @Const 'k2' { } = 0.023;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a 1D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-4$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$4.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$0.69 \\x 10^4$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.23 \\x 10^-2$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 2e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 4e-4 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1 / 10000);\n\r\nk1 @Const 'k1' { } = 6900;\r\nk2 @Const 'k2' { } = 0.0023;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a 0D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2  |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3  |$4.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4  |$  1 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1 |$0.69 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.23 \\x 10^-1$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.015;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.02;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.04;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1 / 100);\n\r\nk1 @Const 'k1' { } = 69;\r\nk2 @Const 'k2' { } = 0.023;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a 2D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1              |$          1.5$ |mole                      |\r\n|Initial amount of S2              |$          2.0$ |mole                      |\r\n|Initial amount of S3              |$          1.5$ |mole                      |\r\n|Initial amount of S4              |$            4$ |mole                      |\r\n|Value of parameter k1             |$         0.75$ |second^-1^ |\r\n|Value of parameter k2             |$         0.25$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            1$ |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: compartment, } .= 1.5 / compartment;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: compartment, } .= 4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a 1D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            1$ |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/metre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/metre, compartment: compartment, } .= 1.5 / compartment;\r\nS4 @Species 'S4' { units: mole/metre, compartment: compartment, } .= 4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a 0D compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 0-dimensional.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$          1.5$ |mole                      |\r\n|Initial amount of S2  |$          2.0$ |mole                      |\r\n|Initial amount of S3  |$          1.5$ |mole                      |\r\n|Initial amount of S4  |$            4$ |mole                      |\r\n|Value of parameter k1 |$         0.75$ |second^-1^ |\r\n|Value of parameter k2 |$         0.25$ |second^-1^ |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 2;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$          0.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and one parameter named k1.  The model contains\r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.15$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$         1.75$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1.75;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.15;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-1$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 0.93;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.02 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1 / 100);\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 0.025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1 * k2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1               |$         1.75$ |second^-1^ |\r\n|Value of parameter k2               |$1.5 \\x 10^-2$ |mole |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.15;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k1 * k2;\n\r\nk1 @Const 'k1' { } = 1.75;\r\nk2 @Const 'k2' { } = 0.015;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1e-7);\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, HasOnlySubstanceUnits\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:25em,=}|  *Reaction*  |  *Rate*               |\r\n|              S1 -> S2     | $k1 * S1$ |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:25em,=}|  *Type*  |  *Variable*  |  *Formula*          |\r\n|                  Rate | S3         | $k1  *  0.5 10^-3$  |\r\n|                  Rate | S4         | $-k2  *  0.5 10^-3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,=}|                         |*Value*           |*Units*       |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-3$ |mole         |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-3$ |mole         |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-3$ |mole         |\r\n|Initial amount of S4                |$   4 \\x 10^-3$ |mole         |\r\n|Value of parameter k1               |$        0.693$ |second^-1^   |\r\n|Value of parameter k2               |$         0.25$ |second^-1^   |\r\n|Volume of compartment \"compartment\" |$            1$ |litre        |]\r\n\r\nThe species have been declared as having substance units only (meaning that\r\nthe attribute %hasOnlySubstanceUnits% is set to true). Thus, they must be\r\ntreated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.002;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.004;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 5e-4 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-5e-4) * k2;\n\r\nk1 @Const 'k1' { } = 0.693;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S3\r\nis labeled as an SBML boundary species.  The model contains one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1 * k2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$         1.75$ |second^-1^ |\r\n|Value of parameter k2               |$1.5 \\x 10^-5$ |mole |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-4 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1e-4 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k1 * k2;\n\r\nk1 @Const 'k1' { } = 1.75;\r\nk2 @Const 'k2' { } = 0.000015;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S1\r\nis labeled as an SBML boundary species.  The model contains one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1 * k2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$         1.75$ |second^-1^ |\r\n|Value of parameter k2               |$1.5 \\x 10^-4$ |mole |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.001 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k1 * k2;\n\r\nk1 @Const 'k1' { } = 1.75;\r\nk2 @Const 'k2' { } = 0.00015;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Species S2\r\nis labeled as an SBML boundary species.  The model contains one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1 * k2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$         1.75$ |second^-1^ |\r\n|Value of parameter k2               |$1.5 \\x 10^-3$ |mole |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.01 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.01 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k1 * k2;\n\r\nk1 @Const 'k1' { } = 1.75;\r\nk2 @Const 'k2' { } = 0.0015;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  Both\r\nspecies S2 and S3 are labeled as an SBML boundary species.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1 * k2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1               |$         1.75$ |second^-1^ |\r\n|Value of parameter k2               |$1.5 \\x 10^-2$ |mole |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.15 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.1 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.1 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k1 * k2;\n\r\nk1 @Const 'k1' { } = 1.75;\r\nk2 @Const 'k2' { } = 0.015;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S1 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1e-7);\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S3 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1e-7);\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S4 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1e-7);\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  Both\r\nspecies S1 and S4 are labeled as an SBML boundary species.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1e-7);\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  Both\r\nspecies S3 and S4 are labeled as an SBML boundary species.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * compartment$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * compartment$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 2e-6 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: compartment, } .= 1.5e-6 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 1e-6 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := compartment * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := compartment * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1e-7);\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S1 is labeled as an SBML boundary species.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5 10^-3$  |\r\n | Rate | S4 | $-k2  *  0.5 10^-3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$   4 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$        0.693$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.004 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 5e-4 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-5e-4) * k2;\n\r\nk1 @Const 'k1' { } = 0.693;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S3 is labeled as an SBML boundary species.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5 10^-3$  |\r\n | Rate | S4 | $-k2  *  0.5 10^-3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$   4 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$        0.693$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.004 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 5e-4 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-5e-4) * k2;\n\r\nk1 @Const 'k1' { } = 0.693;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nSpecies S4 is labeled as an SBML boundary species.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5 10^-3$  |\r\n | Rate | S4 | $-k2  *  0.5 10^-3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$   4 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$        0.693$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.004 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 5e-4 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-5e-4) * k2;\n\r\nk1 @Const 'k1' { } = 0.693;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  Both\r\nspecies S1 and S4 are labeled as an SBML boundary species.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5 10^-3$  |\r\n | Rate | S4 | $-k2  *  0.5 10^-3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$   4 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$        0.693$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.004 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 5e-4 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-5e-4) * k2;\n\r\nk1 @Const 'k1' { } = 0.693;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  Both\r\nspecies S3 and S4 are labeled as an SBML boundary species.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * compartment$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5 10^-3$  |\r\n | Rate | S4 | $-k2  *  0.5 10^-3$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$   4 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$        0.693$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS2 @Species 'S2' { units: mole/litre, compartment: compartment, } .= 0.002 / compartment;\r\nS3 @Species 'S3' { units: mole/litre, compartment: compartment, } .= 0.0015 / compartment;\r\nS4 @Species 'S4' { units: mole/litre, compartment: compartment, } .= 0.004 / compartment;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := compartment * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 5e-4 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-5e-4) * k2;\n\r\nk1 @Const 'k1' { } = 0.693;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1$    |\r\n | Event2 | $S3 > 1.4$ | $-$   | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event2]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1.5$    |\r\n |        |             |       | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns value to species S1 defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S4 > S2$ | $-$   | $S1 -> 2 \\x 10^-3$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S2    |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S3    |$2.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S4    |$1.0 \\x 10^-3$  |mole                       |\r\n|Value of parameter k1   |$0.75 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2   |$0.25 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS1 [event1]= (1 / 500);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.0012 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two events that assign value to species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S4 > S2$ | $-$   | $S1 -> 2 \\x 10^-2$    |]\r\n | Event2 | $S3 > 2.25 \\x 10^-2$ | $-$   | $S4 -> 1 \\x 10^-2$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S2    |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S3    |$2.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S4    |$1.0 \\x 10^-2$  |mole                       |\r\n|Value of parameter k1   |$0.75 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2   |$0.25 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS1 [event1]= (1 / 50);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.012 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS4 [event2]= (1 / 100);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > (9 / 400), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and an event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S4 > S2$ | $-$   | $S1 -> 2 \\x 10^-1$    |]\r\n |  |  |   | $S4 -> 0.5 \\x 10^-1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S2    |$1.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S3    |$2.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S4    |$1.0 \\x 10^-1$  |mole                       |\r\n|Value of parameter k1   |$0.75 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2   |$0.25 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS1 [event1]= (1 / 5);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.12 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS4 [event1]= (1 / 20);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species using a function.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, FunctionDefinition\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and four parameters called k1, k2, k3 and k4.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = add(k3, k4)$    |]\r\n \r\nThe eventAssignment uses the functionDefinition defined as:\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y      | $x + y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$0.8$ |mole litre^-1^ |\r\n|Value of parameter k4   |$0.2$ |mole litre^-1^ |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= add(k3, k4);\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.8;\r\nk4 @Const 'k4' { } = 0.2;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assigns value to a species using a function.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, FunctionDefinition\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and four parameters called k1, k2, k3 and k4.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = add(k3, k4)$    |\r\n | Event2 | $S3 > 1.2$ | $-$   | $S1 = 1 * divide(k3, k4)$    |]\r\n\r\nBoth eventAssignments use functionDefinitions defined as:\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y      | $x + y$   |\r\n | divide | x, y      | $x / y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$0.5$ |mole litre^-1^ |\r\n|Value of parameter k4   |$0.5$ |mole litre^-1^ |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\ndivide #defineFunction { arguments: [x, y], math: x * pow(y, (-1)), };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event2]= divide(k3, k4);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= add(k3, k4);\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.5;\r\nk4 @Const 'k4' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 2D compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n2-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.7$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |mole                      |\r\n|Initial amount of S2  |$2.0$  |mole                      |\r\n|Initial amount of S3  |$1.0$  |mole                      |\r\n|Value of parameter k1 |$0.8$           |metre^2 mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.2$           |second^-1^                |\r\n|Area of compartment C |$1$              |metre^2                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.8;\r\nk2 @Const 'k2' { } = 0.2;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.7, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 1D compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n1-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.6$ | $-$   | $S2 = 1.5$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.8$           |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.2$           |second^-1^                |\r\n|Length of compartment C |$1$              |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.8;\r\nk2 @Const 'k2' { } = 0.2;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.6, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 0D compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n0-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.7$ | $-$   | $S2 = 1.25$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |mole                      |\r\n|Initial amount of S2  |$2.0$  |mole                      |\r\n|Initial amount of S3  |$1.0$  |mole                      |\r\n|Value of parameter k1 |$0.8$  |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.2$  |second^-1^                |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: C, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, compartment: C, isAmount: true, } .= 2;\r\nS2 [event1]= 1.25;\r\nS3 @Species 'S3' { units: mole, compartment: C, isAmount: true, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.8;\r\nk2 @Const 'k2' { } = 0.2;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.7, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 2D compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n2-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1$    |\r\n | Event2 | $S3 > 1.4$ | $-$   | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |mole                      |\r\n|Initial amount of S2  |$2.0$  |mole                      |\r\n|Initial amount of S3  |$1.0$  |mole                      |\r\n|Value of parameter k1 |$0.075$           |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.025$           |second^-1^                |\r\n|Area of compartment C |$1$              |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 1 / C;\r\nS1 [event2]= 1;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.075;\r\nk2 @Const 'k2' { } = 0.025;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 1D compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n1-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.65$ | $-$   | $S2 = 1$    |\r\n | Event2 | $S3 > 1.2$ | $-$   | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.075$           |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.025$           |second^-1^                |\r\n|Length of compartment C |$1$              |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1 / C;\r\nS1 [event2]= 1;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.075;\r\nk2 @Const 'k2' { } = 0.025;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.65, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 0D compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n0-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.65$ | $-$   | $S2 = 1$    |\r\n | Event2 | $S3 > 1.2$ | $-$   | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |mole                      |\r\n|Initial amount of S2  |$2.0$  |mole                      |\r\n|Initial amount of S3  |$1.0$  |mole                      |\r\n|Value of parameter k1 |$0.075$           |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.025$           |second^-1^                |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: C, isAmount: true, } .= 1;\r\nS1 [event2]= 0.95;\r\nS2 @Species 'S2' { units: mole, compartment: C, isAmount: true, } .= 2;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole, compartment: C, isAmount: true, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.075;\r\nk2 @Const 'k2' { } = 0.025;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.7, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 2D compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n2-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns value to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*  | *Delay* | *Assignments*  |\r\n | Event1                      | $S1 < 0.5$ | $-$     | $S2 = 1.25$    |\r\n |                             |            |         | $S1 = 1$       |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                         |\r\n|Initial amount of S2          |$2.0$   |mole                         |\r\n|Initial amount of S3          |$1.0$   |mole                         |\r\n|Value of parameter k1         |$0.75$  |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                   |\r\n|Area of compartment C         |$1$     |metre^2^                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.25;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 1D compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n1-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n| Event1                       | $S1 < 0.45$ | $-$     | $S2 = 1.25$   |\r\n|                              |             |         | $S1 = 0.6$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Length of compartment C       |$1$     |metre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 0.6;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.25;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.45, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one 0D compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Compartment C is\r\n0-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.45$ | $-$   | $S2 = 1.25$    |\r\n |        |             |       | $S1 = 0.6$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |mole                      |\r\n|Initial amount of S2  |$2.0$  |mole                      |\r\n|Initial amount of S3  |$1.0$  |mole                      |\r\n|Value of parameter k1 |$0.75$           |mole^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.25$           |second^-1^                |]\r\n\r\nIn this example the compartment has its spatialDimensions attribute set to\r\nzero; i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: C, isAmount: true, } .= 1;\r\nS1 [event1]= 0.5;\r\nS2 @Species 'S2' { units: mole, compartment: C, isAmount: true, } .= 2;\r\nS2 [event1]= 1.25;\r\nS3 @Species 'S3' { units: mole, compartment: C, isAmount: true, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$0.1$   |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$      |\r\n | Event2                      | $S3 > 1.4$  | $-$     | $S1 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1.43$  |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.43;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event2]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.65$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$0.9$   |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.9;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.65, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns a value to species S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger* | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$ | $-$     | $S1 -> 2 \\x 10^-3$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$2.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S2          |$2.2 \\x 10^-3$  |mole                       |\r\n|Initial amount of S3          |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S4          |$0.5 \\x 10^-3$  |mole                       |\r\n|Value of parameter k1         |$750$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.05$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$0.24$           |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.24;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS1 [event1]= 0.004;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.0022 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 0.05;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > 0.01, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two events that assign values to species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*             | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$             | $-$     | $S1 -> 1.4$    |]\r\n | Event2                      | $S2 < 0.03$           | $-$     | $S4 -> 1 \\x 10^-1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S2          |$1.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S3          |$2.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S4          |$1.0 \\x 10^-1$  |mole                       |\r\n|Value of parameter k1         |$0.75 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^-2$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$0.1$            |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS1 [event1]= 1.4;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.12 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS4 [event2]= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 0.0025;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\r\nevent2 @DSwitcher 'event2' { trigger: S2 < 0.03, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and an event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns a value to both species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger* | *Delay* | *Assignments* |\r\n| Event1                      | $S4 > S2$ | $-$     | $S1 -> 2 \\x 10^-4$   |\r\n|                             |           |         | $S4 -> 2 \\x 10^-4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$4.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S2          |$4.8 \\x 10^-4$  |mole                       |\r\n|Initial amount of S3          |$8.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S4          |$4.0 \\x 10^-4$  |mole                       |\r\n|Value of parameter k1         |$0.75 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.025 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$0.25$           |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.25;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 4e-4;\r\nS1 [event1]= (1 / 5000);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 4.8e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 8e-4;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4e-4;\r\nS4 [event1]= (1 / 5000);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 250;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Species S2 is\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$       |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Species S3 is\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Both species S2\r\nand S3 are labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.1;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Species S2 is\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$  | $-$     | $S2 = 1$    |\r\n | Event2                      | $S3 > 1.4$   | $-$     | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event2]= 1;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Species S3 is\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assigns values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$      |\r\n | Event2                      | $S3 > 1.4$  | $-$     | $S1 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event2]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Both species S2\r\nand S3 are labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$    |\r\n | Event2                      | $S3 > 1.4$  | $-$     | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event2]= 1.1;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.1;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Species S2 is\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$  | $-$     | $S2 = 1.5$    |\r\n |                             |              |         | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Species S3 is\r\nlabeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$       |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  Both species S2\r\nand S3 are labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  Species S4 is\r\nlabeled as constant and therefore cannot be changed by rules or reactions.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns a value to species S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$   | $-$     | $S1 -> 2 \\x 10^-4$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S2          |$1.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S3          |$2.0 \\x 10^-4$  |mole                       |\r\n|Initial amount of S4          |$1.0 \\x 10^-4$  |mole                       |\r\n|Value of parameter k1         |$0.75 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4 / C;\r\nS1 [event1]= (1 / 5000);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  Species S4 is\r\nlabeled as constant and therefore cannot be changed by rules or reactions.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two events that assign values to species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*          | *Delay* | *Assignments* |\r\n | Event1                      | $S2 < S4$          | $-$     | $S1 -> 2 \\x 10^-3$    |]\r\n | Event2                      | $S3 > 2 \\x 10^-3$ | $-$     | $S3 -> 1 \\x 10^-3$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S2          |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S3          |$1.9 \\x 10^-3$  |mole                       |\r\n|Initial amount of S4          |$1.0 \\x 10^-3$  |mole                       |\r\n|Value of parameter k1         |$0.75 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS1 [event1]= 0.002;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.0012 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.0019 / C;\r\nS3 [event2]= (1 / 1000);\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\nevent1 @DSwitcher 'event1' { trigger: S2 < S4, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 0.002, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and an event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  Species S4 is\r\nlabeled as constant and therefore cannot be changed by rules or reactions.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger* | *Delay* | *Assignments* |\r\n | Event1                      | $S2 < S4$ | $-$     | $S1 -> 2 \\x 10^-2$    |]\r\n |                             |           |         | $S3 -> 0.5 \\x 10^-2$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S2          |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S3          |$2.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S4          |$1.0 \\x 10^-2$  |mole                       |\r\n|Value of parameter k1         |$0.75 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS1 [event1]= (1 / 50);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.012 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 [event1]= (1 / 200);\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S2 < S4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + 2S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + 2*S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, EventNoDelay \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$     |]\r\n\r\nReaction S1 + S2 -> S3 defines one local parameter k.  Reaction S3 -> S1 +\r\nS2 defines another local parameter k.  Note that these parameters have a\r\nscope local to the defining reaction.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of local parameter k    |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of local parameter k    |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\n\r\nk__reaction1_local @Const { } = 0.75;\r\nk__reaction2_local @Const { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> 2S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| 2S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two events that assign values to species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*            | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$            | $-$     | $S1 -> 2 \\x 10^-1$    |]\r\n | Event2                      | $S3 > 2.5 \\x 10^-1$ | $-$     | $S4 -> 1 \\x 10^-1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S2          |$1.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S3          |$2.0 \\x 10^-1$  |mole                       |\r\n|Initial amount of S4          |$1.0 \\x 10^-1$  |mole                       |\r\n|Value of parameter k1         |$0.75 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS1 [event1]= (1 / 5);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.12 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS4 [event2]= (1 / 10);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > (1 / 4), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, EventNoDelay \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k * S3 * S4 * C$  |]\r\n\r\nReaction S1 + S2 -> S3 + S4 defines one local parameter k.  Reaction S3 +\r\nS4 -> S1 + S2 defines another (different) local parameter k.  Note that\r\nthese parmeters have a scope local to the defining reaction.\r\n\r\nThe model contains two events that assign values to species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*             | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$             | $-$     | $S1 -> 2 \\x 10^-3$    |]\r\n | Event2                      | $S3 > 2.25 \\x 10^-3$ | $-$     | $S4 -> 1 \\x 10^-3$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial amount of S1          |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S2          |$1.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S3          |$2.0 \\x 10^-3$  |mole                       |\r\n|Initial amount of S4          |$1.0 \\x 10^-3$  |mole                       |\r\n|Value of local parameter k    |$0.75 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Value of local parameter k    |$0.25 \\x 10^3$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS1 [event1]= (1 / 500);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.0012 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS4 [event2]= (1 / 1000);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3 * S4;\n\r\nk__reaction1_local @Const { } = 750;\r\nk__reaction2_local @Const { } = 250;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > (9 / 4000), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + 2S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.75$    |\r\n |                             |             |         | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.75;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + 2*S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, EventNoDelay \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$     |]\r\n\r\nReaction S1 + S2 -> S3 defines one local parameter k.  Reaction S3 -> S1 +\r\nS2 defines another (different) local parameter k.  Note that these\r\nparmeters have a scope local to the defining reaction.\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of local parameter k    |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of local parameter k    |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\n\r\nk__reaction1_local @Const { } = 0.75;\r\nk__reaction2_local @Const { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only with\r\n               one event that assigns value to a parameter.\r\ncomponentTags: Parameter, RateRule, EventNoDelay \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S2  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S3  | $k1 * S1 * S2 - k2 * S3$  |]\r\n\r\nThe model contains one event that assigns value to parameter S2 defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |any                      |\r\n|Initial amount of S2  |$2.0$  |same as S1                      |\r\n|Initial amount of S3  |$1.0$  |same as S1                      |\r\n|Value of parameter k1 |$0.75$           |(unit of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.25$           |second^-1^                |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k1 * S1 * S2 + (-1) * k2 * S3;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS2 @Record 'S2' { } .= 2;\r\nS2 [event1]= 1;\r\nS3 @Record 'S3' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only with\r\n               one event that assigns value to a parameter.\r\ncomponentTags: Parameter, RateRule, EventNoDelay \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S2  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S3  | $k1 * S1 * S2 - k2 * S3$  |]\r\n\r\nThe model contains two events, that assign value to parameters S2 and S1 respectively, defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1$    |\r\n | Event2 | $S3 > 1.4$ | $-$   | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |any                      |\r\n|Initial amount of S2  |$2.0$  |same as S1                      |\r\n|Initial amount of S3  |$1.0$  |same as S1                      |\r\n|Value of parameter k1 |$0.75$           |(unit of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.25$           |second^-1^                |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k1 * S1 * S2 + (-1) * k2 * S3;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS1 [event2]= 1;\r\nS2 @Record 'S2' { } .= 2;\r\nS2 [event1]= 1;\r\nS3 @Record 'S3' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only with\r\n               one event that assigns value to two parameters.\r\ncomponentTags: Parameter, RateRule, EventNoDelay \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S2  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S3  | $k1 * S1 * S2 - k2 * S3$  |]\r\n\r\nThe model contains two events, that assign value to parameters S2 and S1 respectively, defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1$    |\r\n |  |  |    | $S1 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |any                      |\r\n|Initial amount of S2  |$2.0$  |same as S1                      |\r\n|Initial amount of S3  |$1.0$  |same as S1                      |\r\n|Value of parameter k1 |$0.75$           |(unit of S1)^-1^ second^-1^ |\r\n|Value of parameter k2 |$0.25$           |second^-1^                |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k1 * S1 * S2 + (-1) * k2 * S3;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS1 [event1]= 1;\r\nS2 @Record 'S2' { } .= 2;\r\nS2 [event1]= 1.5;\r\nS3 @Record 'S3' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = S2$     |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S1 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic three reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and three parameters called k1, k2 and k3.  The model\r\ncontains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |\r\n| S2 -> S3 | $k2 * S2 * C$  |\r\n| S3 -> S1 | $k3 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = S2$     |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S1 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |second^-1^                |\r\n|Value of parameter k2         |$0.55$  |second^-1^                |\r\n|Value of parameter k3         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1, reversible: false, };\r\nreaction3 := C * k3 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.55;\r\nk3 @Const 'k3' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic three reactions with three species in one compartment\r\n               and one event that assigns value to three species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and three parameters called k1, k2 and k3.  The model\r\ncontains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |\r\n| S2 -> S3 | $k2 * S2 * C$  |\r\n| S3 -> S1 | $k3 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns values to species S1, S2 and S3:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = S3$     |\r\n |                             |             |         | $S1 = S2$     |\r\n |                             |             |         | $S3 = S1$     |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S1 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |second^-1^                |\r\n|Value of parameter k2         |$0.55$  |second^-1^                |\r\n|Value of parameter k3         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event1]= S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= S3;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS3 [event1]= S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1, reversible: false, };\r\nreaction3 := C * k3 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.55;\r\nk3 @Const 'k3' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only with\r\n               and one event that assigns value to two parameters.\r\ncomponentTags: Parameter, RateRule, EventNoDelay \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and two constant\r\nparameters called k1 and k2.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S2  | $k2 * S3 - k1 * S1 * S2$  |\r\n | Rate | S3  | $k1 * S1 * S2 - k2 * S3$  |]\r\n\r\nThe model contains one event that assigns values to parameters S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = S2$     |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S1 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |any                         |\r\n|Initial amount of S2          |$2.0$   |same as S1                  |\r\n|Initial amount of S3          |$1.0$   |same as S1                  |\r\n|Value of parameter k1         |$0.75$  |(unit of S1)^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                  |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k1 * S1 * S2 + (-1) * k2 * S3;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS1 [event1]= S2;\r\nS2 @Record 'S2' { } .= 2;\r\nS2 [event1]= 1.5;\r\nS3 @Record 'S3' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only with\r\n               and one event that assigns value to two parameters.\r\ncomponentTags: Parameter, RateRule, EventNoDelay \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and three constant\r\nparameters called k1, k2 and k3.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1  | $k3 * S3 - k1 * S1$  |\r\n | Rate | S2  | $k1 * S1 - k2 * S2$  |\r\n | Rate | S3  | $k2 * S2 - k3 * S3$  |]\r\n\r\nThe model contains one event that assigns values to both parameters S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = 1.5$    |\r\n |        |             |       | $S1 = S2$    |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S1 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |any                      |\r\n|Initial amount of S2  |$2.0$  |same as S1                      |\r\n|Initial amount of S3  |$1.0$  |same as S1                      |\r\n|Value of parameter k1 |$0.75$           |second^-1^ |\r\n|Value of parameter k2 |$0.55$           |second^-1^ |\r\n|Value of parameter k3 |$0.25$           |second^-1^                |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k3 * S3 + (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1 + (-1) * k2 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k2 * S2 + (-1) * k3 * S3;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS1 [event1]= S2;\r\nS2 @Record 'S2' { } .= 2;\r\nS2 [event1]= 1.5;\r\nS3 @Record 'S3' { } .= 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.55;\r\nk3 @Const 'k3' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only with\r\n               and one event that assigns value to three parameters.\r\ncomponentTags: Parameter, RateRule, EventNoDelay \r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called S1, S2 and S3 and three constant\r\nparameters called k1, k2 and k3.  (Note that indeed S1, S2 and S3 are parameters and \r\nnot species in this model.)\r\n\r\nThe model contains three rules defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S1  | $k3 * S3 - k1 * S1$  |\r\n | Rate | S2  | $k1 * S1 - k2 * S2$  |\r\n | Rate | S3  | $k2 * S2 - k3 * S3$  |]\r\n\r\nThe model contains one event that assigns values to parameters S1, S2 and\r\nS3:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = S3$    |\r\n |        |             |       | $S1 = S2$    |\r\n |        |             |       | $S3 = S1$    |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S1 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1  |$1.0$  |any                      |\r\n|Initial amount of S2  |$2.0$  |same as S1                      |\r\n|Initial amount of S3  |$1.0$  |same as S1                      |\r\n|Value of parameter k1 |$0.75$           |second^-1^ |\r\n|Value of parameter k2 |$0.55$           |second^-1^ |\r\n|Value of parameter k3 |$0.25$           |second^-1^                |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS1_proc @Process { actors:  = S1, aux: {metaid: \"rule1\"}, };\r\nS1_proc := k3 * S3 + (-1) * k1 * S1;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k1 * S1 + (-1) * k2 * S2;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule3\"}, };\r\nS3_proc := k2 * S2 + (-1) * k3 * S3;\n\r\nS1 @Record 'S1' { } .= 1;\r\nS1 [event1]= S2;\r\nS2 @Record 'S2' { } .= 2;\r\nS2 [event1]= S3;\r\nS3 @Record 'S3' { } .= 1;\r\nS3 [event1]= S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.55;\r\nk3 @Const 'k3' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called\r\nS1 and S2 and one parameter called k1.  The model contains one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$ |]\r\n\r\nThe model does not contain any rules.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*        |\r\n|Initial concentration of S1   |$1.5 \\x 10^-4$  |mole litre^-1^ |\r\n|Initial concentration of S2   |$0$              |mole litre^-1^ |\r\n|Value of parameter k1         |$1$              |second^-1^     |\r\n|Volume of compartment C       |$1$              |litre          |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-4;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment and nonzero initial concentrations.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called\r\nS1 and S2 and one parameter called k1.  The model contains one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*        |*Units*        |\r\n|Initial concentration of S1 |$1.5 \\x 10^-1$  |mole litre^-1^ |\r\n|Initial concentration of S2 |$1.5 \\x 10^-1$  |mole litre^-1^ |\r\n|Value of parameter k1       |$1$              |second^-1^     |\r\n|Volume of compartment C     |$1$              |litre          |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.15;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment, nonzero initial concentrations, and identical reaction rates.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called\r\nS1 and S2 and two parameters called k1 and k2.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |\r\n| S2 -> S1 | $k2 * S2 * C$  |]\r\n\r\nThe rate constants are identical in both directions, leading to a system\r\nwhere the species concentrations remain the same.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*        |\r\n|Initial concentration of S1 |$1.5 \\x 10^-3$ |mole litre^-1^ |\r\n|Initial concentration of S2 |$1.5 \\x 10^-3$ |mole litre^-1^ |\r\n|Value of parameter k1       |$0.5$           |second^-1^     |\r\n|Value of parameter k2       |$0.5$           |second^-1^     |\r\n|Volume of compartment C     |$1$             |litre          |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.0015;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S1, reversible: false, };\r\nreaction2 := C * k2 * S2;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*        |*Units*                   |\r\n|Initial concentration of S1 |$1.0 \\x 10^-2$  |mole litre^-1^            |\r\n|Initial concentration of S2 |$2.0 \\x 10^-2$  |mole litre^-1^            |\r\n|Initial concentration of S3 |$1.0 \\x 10^-2$  |mole litre^-1^            |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Volume of compartment C     |$1$              |litre                     |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one C.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial concentration of S1 |$1.0 \\x 10^-4$  |mole litre^-1^ |\r\n|Initial concentration of S2 |$1.0 \\x 10^-4$  |mole litre^-1^ |\r\n|Initial concentration of S3 |$2.0 \\x 10^-4$  |mole litre^-1^ |\r\n|Initial concentration of S4 |$1.0 \\x 10^-4$  |mole litre^-1^ |\r\n|Value of parameter k1       |$0.75 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2       |$0.25 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C     |$1$              |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2e-4;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and three parameters called k1, k2 and k3.  The model\r\ncontains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*        |*Units*        |\r\n|Initial concentration of S1 |$2.0 \\x 10^-1$  |mole litre^-1^ |\r\n|Initial concentration of S2 |$2.0 \\x 10^-1$  |mole litre^-1^ |\r\n|Initial concentration of S3 |$0$              |mole litre^-1^ |\r\n|Initial concentration of S4 |$0$              |mole litre^-1^ |\r\n|Value of parameter k1       |$1.0 \\x 10^1$   |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2       |$0.9$            |second^-1^                 |\r\n|Value of parameter k3       |$0.7$            |second^-1^                 |\r\n|Volume of compartment C     |$1$              |litre                      |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3;\n\r\nk1 @Const 'k1' { } = 10;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.\r\nThere are four species called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |\r\n| S2 -> S3 | $k2 * S2 * C$  |\r\n| S3 -> S4 | $k3 * S3 * C$  |] \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1 |$1.0 \\x 10^-3$ |mole litre^-1^          |\r\n|Initial concentration of S2 |$0$             |mole litre^-1^          |\r\n|Initial concentration of S3 |$0$             |mole litre^-1^          |\r\n|Initial concentration of S4 |$0$             |mole litre^-1^          |\r\n|Value of parameter k1       |$0.7$           |second^-1^     |\r\n|Value of parameter k2       |$0.5$           |second^-1^     |\r\n|Value of parameter k3       |$1$             |second^-1^     |\r\n|Volume of compartment C     |$1$             |litre          |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 / 100$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the parameter k1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1    |$1$              |mole   |\r\n|Initial amount of S2    |$1.5$            |mole   |\r\n|Value of parameter k1   |$undeclared$     |second^-1^ |\r\n|Value of parameter k2   |$50$             |second^-1^ |\r\n|Volume of compartment C |$1$              |litre      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment 'C' { units: volume, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: substance/volume, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: substance/volume, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { } .= k2 / 100;\r\nk2 @Record 'k2' { } .= 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 / 100$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for parameter k1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k1       |$100$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |second^-1^ |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 100;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 50$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$5.4$      |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= k2 / 50;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 50$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= k2 / 50;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 50$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*    |*Units*  |\r\n|Initial amount of S1        |$1$          |mole                      |\r\n|Initial amount of S2        |$1.5$        |mole                      |\r\n|Value of parameter k1       |$0.5$        |second^-1^ |\r\n|Value of parameter k2       |$50$         |litre |\r\n|Volume of compartment C     |$undeclared$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= k2 / 50;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-3$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.00125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.25 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-5$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$undeclared$     |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-1$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-2$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k2 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the parameter k2 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$undeclared$    |second^-1^                |\r\n|Value of parameter p1       |$0.125$         |second^-1^                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk2 @Record 'k2' { } .= 2 * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\np1 @Const 'p1' { } = 0.125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k2 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for parameter k2 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$1.0$           |second^-1^                |\r\n|Value of parameter p1       |$0.125$         |second^-1^                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk2 @Record 'k2' { } .= 2 * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\np1 @Const 'p1' { } = 0.125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k2 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for parameter k2 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.125$         |second^-1^                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk2 @Record 'k2' { } .= 2 * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\np1 @Const 'p1' { } = 0.125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |litre                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |litre                |\r\n|Volume of compartment C     |$3.5$           |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |litre                |\r\n|Volume of compartment C     |$undeclared$    |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 2D compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n2-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1       |$7.5$           |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$2.5$           |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |metre^2^                |\r\n|Area of compartment C       |$1$             |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 1e-4 / C;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 2D compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n2-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1       |$7.5$           |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$2.5$           |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |metre^2^                |\r\n|Area of compartment C       |$3.5$           |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 0.1 / C;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 0.2 / C;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 0.1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 2D compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n2-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1       |$7.5$           |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$2.5$           |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |metre^2^                |\r\n|Area of compartment C       |$undeclared$    |metre^2^                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 0.001 / C;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 1D compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n1-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$           |mole                      |\r\n|Initial amount of S2        |$2.0$           |mole                      |\r\n|Initial amount of S3        |$1.0$           |mole                      |\r\n|Value of parameter k1       |$3.5$           |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$1.5$           |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |metre                |\r\n|Length of compartment C     |$1$             |metre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.5;\r\nk2 @Const 'k2' { } = 1.5;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 1D compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n1-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$           |mole                      |\r\n|Initial amount of S2        |$2.0$           |mole                      |\r\n|Initial amount of S3        |$1.0$           |mole                      |\r\n|Value of parameter k1       |$3.5$           |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$1.5$           |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |metre                |\r\n|Length of compartment C     |$3.5$           |metre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.5;\r\nk2 @Const 'k2' { } = 1.5;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 1D compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n1-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$           |mole                      |\r\n|Initial amount of S2        |$2.0$           |mole                      |\r\n|Initial amount of S3        |$1.0$           |mole                      |\r\n|Value of parameter k1       |$3.5$           |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$1.5$           |second^-1^                |\r\n|Value of parameter p1       |$0.5$           |metre                |\r\n|Length of compartment C     |$undeclared$    |metre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 3.5;\r\nk2 @Const 'k2' { } = 1.5;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 0D compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, 0D-Compartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n0-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-3$ |mole                |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero, i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: C, isAmount: true, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole, compartment: C, isAmount: true, } .= 0.02;\r\nS3 @Species 'S3' { units: mole, compartment: C, isAmount: true, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.00125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 0D compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, 0D-Compartment\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n0-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.25 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-5$ |mole                |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero, i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: C, isAmount: true, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole, compartment: C, isAmount: true, } .= 2e-4;\r\nS3 @Species 'S3' { units: mole, compartment: C, isAmount: true, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a 0D compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, 0D-Compartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Compartment C is \r\n0-dimensional.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 $  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$undeclared$     |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-1$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-2$ |mole                |]\r\n\r\nIn this example, the compartment has its spatialDimensions attribute set to\r\nzero, i.e., it represents a point and therefore cannot have size or units.\r\nThe species values must be treated as amounts and not concentrations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { boundary: true, } .= 0;\n\r\nS1 @Species 'S1' { units: mole, compartment: C, isAmount: true, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole, compartment: C, isAmount: true, } .= 0.2;\r\nS3 @Species 'S3' { units: mole, compartment: C, isAmount: true, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 9$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$5.4$      |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 / 9;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 10$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$5$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 / 10;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 9$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*    |*Units*  |\r\n|Initial amount of S1        |$1$          |mole                      |\r\n|Initial amount of S2        |$1.5$        |mole                      |\r\n|Value of parameter k1       |$0.5$        |second^-1^ |\r\n|Value of parameter k2       |$50$         |litre |\r\n|Volume of compartment C     |$undeclared$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 / 9;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.25$          |litre                |\r\n|Volume of compartment C     |$0.5$           |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.25$          |litre                |\r\n|Volume of compartment C     |$3.5$           |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.25$          |litre                |\r\n|Volume of compartment C     |$undeclared$    |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  Species S1 is\r\nlabeled as an SBML boundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1       | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*      |*Units*  |\r\n|Initial amount of S1                |$undeclared$ |mole                      |\r\n|Initial amount of S2                |$1.5$        |mole                      |\r\n|Value of parameter k1               |$0.75$       |dimensionless             |\r\n|Value of parameter k2               |$50$         |second^-1^                |\r\n|Volume of compartment C |$1$          |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  Species S1 is\r\nlabeled as an SBML boundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*   |*Units*  |\r\n|Initial amount of S1        |$30$         |mole                      |\r\n|Initial amount of S2        |$1.5$       |mole                      |\r\n|Value of parameter k1       |$0.75$      |dimensionless             |\r\n|Value of parameter k2       |$50$        |second^-1^                |\r\n|Volume of compartment C     |$1$         |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  Species S1 is\r\nlabeled as an SBML boundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1.125$    |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k1       |$0.75$     |dimensionless |\r\n|Value of parameter k2       |$50$       |second^-1^ |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Species S1 is labeled \r\nas an SBML boundary species.   The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-4$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Species S1 is labeled \r\nas an SBML boundary species.   The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.25 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-3$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.00125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  Species S1 is labeled \r\nas an SBML boundary species.   The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$undeclared$     |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-5$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, ConstantSpecies, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and three parameters called k1, k2 and p1.  Species S4 is labeled \r\nas a constant species.   The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S4 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S4 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S4 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.25 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S4        |$undeclared$     |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$5 \\x 10^-2$    |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.025 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 2 * p1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, modifiers: [S4], reversible: false, };\r\nreaction1 := C * k1 * S1 * S4;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.05;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and three parameters called k1, k2 and p1.  Species S4 is labeled \r\nas a constant species.   The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S4 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S4 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S4 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.25 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S4        |$1.0 \\x 10^-3$     |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$5 \\x 10^-4$    |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2.5e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 2 * p1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, modifiers: [S4], reversible: false, };\r\nreaction1 := C * k1 * S1 * S4;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0005;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, ConstantSpecies, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and three parameters called k1, k2 and p1.  Species S4 is labeled \r\nas a constant species.   The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S4 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S4 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S4 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.25 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S4        |$5.0 \\x 10^-2$     |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$5 \\x 10^-3$    |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.0025 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 2 * p1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, modifiers: [S4], reversible: false, };\r\nreaction1 := C * k1 * S1 * S4;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.005;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  Species S3 is\r\nlabeled a constant species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1 * S3$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S3 | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S3 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Initial amount of S3        |$1.125$      |mole                      |\r\n|Value of parameter k1       |$0.75$     |dimensionless |\r\n|Value of parameter k2       |$2.7$      |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := C * k2 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 2.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, ConstantSpecies, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  Species S3 is\r\nlabeled a constant species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1 * S3$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S3 | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S3 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Initial amount of S3        |$5.7$      |mole                      |\r\n|Value of parameter k1       |$0.75$     |dimensionless |\r\n|Value of parameter k2       |$2.7$      |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := C * k2 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 2.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, ConstantSpecies, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  Species S3 is\r\nlabeled a constant species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1 * S3$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S3 | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S3 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Initial amount of S3        |$undeclared$      |mole                      |\r\n|Value of parameter k1       |$0.75$     |dimensionless |\r\n|Value of parameter k2       |$2.7$      |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := C * k2 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 2.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  The model contains \r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1       | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*      |*Units*  |\r\n|Initial amount of S1                |$undeclared$ |mole                      |\r\n|Initial amount of S2                |$1.5$        |mole                      |\r\n|Value of parameter k1               |$0.75$       |dimensionless             |\r\n|Value of parameter k2               |$5$         |second^-1^                |\r\n|Volume of compartment C |$1$          |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  The model contains \r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1       | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*      |*Units*  |\r\n|Initial amount of S1                |$3.2$        |mole                      |\r\n|Initial amount of S2                |$1.5$        |mole                      |\r\n|Value of parameter k1               |$0.75$       |dimensionless             |\r\n|Value of parameter k2               |$5$         |second^-1^                |\r\n|Volume of compartment C |$1$          |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  The model contains \r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1       | $k1 * S2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*      |*Units*  |\r\n|Initial amount of S1                |$1.125$        |mole                      |\r\n|Initial amount of S2                |$1.5$        |mole                      |\r\n|Value of parameter k1               |$0.75$       |dimensionless             |\r\n|Value of parameter k2               |$5$         |second^-1^                |\r\n|Volume of compartment C |$1$          |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= k1 * S2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> 2S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-5$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> 2S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.5 \\x 10^-1$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-1$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-1$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-2$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> 2S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$undeclared$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$  |mole                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-4$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = 2*S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and one parameters called p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$  |]\r\n\r\nReaction $S1 + S2 -> S3$ defines one local parameter k.  Reaction $S3 -> S1\r\n+ S2$ defines another (different) local parameter k.  Note that these\r\nparameters have a scope local to the defining reaction.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$1.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-3$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-3$  |mole                      |\r\n|Value of parameter p1       |$1.25 \\x 10^-4$ |mole                |\r\n|Value of parameter local k  |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter local k  |$0.25$           |second^-1^                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\n\r\nk__reaction1_local @Const { } = 0.75;\r\nk__reaction2_local @Const { } = 0.25;\r\np1 @Const 'p1' { } = 0.000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and one parameters called p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$  |]\r\n\r\nReaction $S1 + S2 -> S3$ defines one local parameter k.  Reaction $S3 -> S1\r\n+ S2$ defines another (different) local parameter k.  Note that these\r\nparameters have a scope local to the defining reaction.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$0.25 \\x 10^-2$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-2$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-2$  |mole                      |\r\n|Value of parameter p1       |$1.25 \\x 10^-3$ |mole                |\r\n|Value of parameter local k  |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter local k  |$0.25$           |second^-1^                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\n\r\nk__reaction1_local @Const { } = 0.75;\r\nk__reaction2_local @Const { } = 0.25;\r\np1 @Const 'p1' { } = 0.00125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and one parameters called p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$  |]\r\n\r\nReaction $S1 + S2 -> S3$ defines one local parameter k.  Reaction $S3 -> S1\r\n+ S2$ defines another (different) local parameter k.  Note that these\r\nparameters have a scope local to the defining reaction.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial amount of S1        |$undeclared$  |mole                      |\r\n|Initial amount of S2        |$2.0 \\x 10^-4$  |mole                      |\r\n|Initial amount of S3        |$1.0 \\x 10^-4$  |mole                      |\r\n|Value of parameter p1       |$1.25 \\x 10^-5$ |mole                |\r\n|Value of parameter local k  |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter local k  |$0.25$           |second^-1^                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\n\r\nk__reaction1_local @Const { } = 0.75;\r\nk__reaction2_local @Const { } = 0.25;\r\np1 @Const 'p1' { } = 0.0000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k * S1$  |]\r\n\r\nReaction $S1 -> S2$ defines one local parameter k.  Note that this\r\nparameter has a scope local to the defining reaction.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k / 50$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k        |$50$       |litre |\r\n|Value of local parameter k  |$0.5$      |second^-1^ |\r\n|Volume of compartment C     |$5.4$      |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= k / 50;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\n\r\nk__reaction1_local @Const { } = 0.5;\r\nk @Const 'k' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k * S1$  |]\r\n\r\nReaction $S1 -> S2$ defines one local parameter k.  Note that this\r\nparameter has a scope local to the defining reaction.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k / 50$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k        |$50$       |litre |\r\n|Value of local parameter k  |$0.5$      |second^-1^ |\r\n|Volume of compartment C     |$1$      |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= k / 50;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\n\r\nk__reaction1_local @Const { } = 0.5;\r\nk @Const 'k' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k * S1$  |]\r\n\r\nReaction $S1 -> S2$ defines one local parameter k.  Note that this\r\nparameter has a scope local to the defining reaction.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k / 50$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k        |$50$       |litre |\r\n|Value of local parameter k  |$0.5$      |second^-1^ |\r\n|Volume of compartment C     |$undeclared$      |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= k / 50;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\n\r\nk__reaction1_local @Const { } = 0.5;\r\nk @Const 'k' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $division(k2, 100)$  |]\r\n\r\nThe initialAssignment uses a functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n |                             division | x, y          | $x / y$     |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the parameter k1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1    |$1$              |mole   |\r\n|Initial amount of S2    |$1.5$            |mole   |\r\n|Value of parameter k1   |$undeclared$     |second^-1^ |\r\n|Value of parameter k2   |$50$             |second^-1^ |\r\n|Volume of compartment C |$1$              |litre      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\n","completion":"\r\ndivision #defineFunction { arguments: [x, y], math: x / y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { } .= division(k2, 100);\n\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $multiply(k1, S2)$  |]\r\n\r\nThe initialAssignment uses a functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n |                             multiply | x, y          | $x * y$     |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless             |\r\n|Value of parameter k2               |$           5$ |second^-1^                |\r\n|Volume of compartment C |$             $ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= multiply(k1, S2);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.0015 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $division(k2, 50)$  |]\r\n\r\nThe initialAssignment uses a functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n |                             division | x, y          | $x / y$     |]\r\n\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial amount of S1        |$1$        |mole                      |\r\n|Initial amount of S2        |$1.5$      |mole                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) they must be treated as concentrations where they appear in\r\nexpressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\ndivision #defineFunction { arguments: [x, y], math: x / y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= division(k2, 50);\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               and one species labeled as a boundary condition\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  Species S1\r\nis labeled as an SBML boundary species.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto} | |*Value*          |*Units*                   |\r\n|Initial concentration of S1    |$1.0 \\x 10^-1$  |mole litre^-1^                      |\r\n|Initial concentration of S2    |$2.0 \\x 10^-1$  |mole litre^-1^                      |\r\n|Initial concentration of S3    |$1.0 \\x 10^-1$  |mole litre^-1^                      |\r\n|Value of parameter k1          |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2          |$0.25$           |second^-1^                |\r\n|Volume of compartment C        |$1$              |litre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 0.1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               and two species labeled as a boundary condition\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  Species S1\r\nand S2 are labeled as SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*                   |\r\n|Initial concentration of S1   |$1.0 \\x 10^-2$  |mole litre^-1^                      |\r\n|Initial concentration of S2   |$2.0 \\x 10^-2$  |mole litre^-1^                      |\r\n|Initial concentration of S3   |$1.0 \\x 10^-2$  |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$           |second^-1^                |\r\n|Volume of compartment C       |$1$              |litre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 0.01;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0.02;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               and all species labeled as a boundary condition\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  All three\r\nspecies S1, S2 and S3 are labeled as SBML boundary species.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Initial concentration of S2   |$2.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Initial concentration of S3   |$1.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$           |second^-1^                |\r\n|Volume of compartment C       |$1$              |litre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 2e-4;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment,\r\n               with one species having a stoichiometry of 2\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 + S2 -> S3 | $k1 * S1 * S1 * S2 * C$  |\r\n| S3 -> 2S1 + S2 | $k2 * S3 * C$        |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-3$  |mole litre^-1^                         |\r\n|Initial concentration of S2   |$2.0 \\x 10^-3$  |mole litre^-1^                         |\r\n|Initial concentration of S3   |$1.0 \\x 10^-3$  |mole litre^-1^                         |\r\n|Value of parameter k1         |$1.0 \\x 10^3$   |litre^2^ mole^-2^ second^-1^ |\r\n|Value of parameter k2         |$0.25$           |second^-1^                   |\r\n|Volume of compartment C       |$1$              |litre                        |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * pow(S1, 2) * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = 2*S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 1000;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Initial concentration of S2   |$1.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Initial concentration of S3   |$2.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Initial concentration of S4   |$1.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Value of parameter k1         |$0.75 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.2;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment,\r\n               with one species acting as a boundary condition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.\r\nSpecies S4 is labeled as an SBML boundary species.  The model contains two\r\nreactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Initial concentration of S2   |$1.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Initial concentration of S3   |$2.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Initial concentration of S4   |$1.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Value of parameter k1         |$0.75 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.01;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.02;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment,\r\n               with non-unity stoichiometry.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + 2S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2  | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Initial concentration of S2   |$1.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Initial concentration of S3   |$2.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Initial concentration of S4   |$1.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75 \\x 10^4$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25 \\x 10^4$  |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C       |$1$              |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2e-4;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + 2*S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C$     |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$2.0 \\x 10^-3$  |mole litre^-1^                       |\r\n|Initial concentration of S2   |$2.0 \\x 10^-3$  |mole litre^-1^                       |\r\n|Initial concentration of S3   |$0$              |mole litre^-1^                       |\r\n|Initial concentration of S4   |$0$              |mole litre^-1^                       |\r\n|Value of parameter k1         |$1.0 \\x 10^3$   |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.9$            |second^-1^                 |\r\n|Value of parameter k3         |$0.7$            |second^-1^                 |\r\n|Volume of compartment C       |$1$              |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.002;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3;\n\r\nk1 @Const 'k1' { } = 1000;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |\r\n| S2 -> S3 | $k2 * S2 * C$  |\r\n| S3 -> S4 | $k3 * S3 * C$  |] \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-1$  |mole litre^-1^           |\r\n|Initial concentration of S2   |$0$              |mole litre^-1^           |\r\n|Initial concentration of S3   |$0$              |mole litre^-1^           |\r\n|Initial concentration of S4   |$0$              |mole litre^-1^           |\r\n|Value of parameter k1         |$0.7$            |second^-1^     |\r\n|Value of parameter k2         |$0.5$            |second^-1^     |\r\n|Value of parameter k3         |$1$              |second^-1^     |\r\n|Volume of compartment C       |$1$              |litre          |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$            0$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$          1.5$ |second^-1^ |\r\n|Volume of compartment C       |$          1.5$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-4$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$2.0 \\x 10^-4$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$1.5 \\x 10^-4$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25 \\x 10^-2$ |second^-1^ |\r\n|Volume of compartment C       |$          0.7$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.7;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 0.0025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter\r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$          1.7$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$          2.0$ |mole litre^-1^                      |\r\n|Initial concentration of S4   |$          1.0$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$         0.25$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C       |$          0.3$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.7;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  Compartment\r\nC is two-dimensional.  The model contains one reaction defined\r\nas:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1   |$1.5 \\x 10^-2$ |mole metre^-2^                      |\r\n|Initial concentration of S2   |$         0$    |mole metre^-2^                      |\r\n|Value of parameter k1         |$            1$ |second^-1^                |\r\n|Area of compartment C         |$1$             |metre^2^                  |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 0.015;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 2-dimensional compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.\r\nCompartment C is 2-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-4$ |mole metre^-2^                      |\r\n|Initial concentration of S2   |$2.0 \\x 10^-4$ |mole metre^-2^                      |\r\n|Initial concentration of S3   |$1.0 \\x 10^-4$ |mole metre^-2^                      |\r\n|Value of parameter k1         |$         0.75$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$         0.25$ |second^-1^                |\r\n|Area of compartment C         |$            1$ |metre^2^                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 2e-4;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.\r\nCompartment C is 2-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-3$ |mole metre^-2^                      |\r\n|Initial concentration of S2   |$1.0 \\x 10^-3$ |mole metre^-2^                      |\r\n|Initial concentration of S3   |$2.0 \\x 10^-3$ |mole metre^-2^                      |\r\n|Initial concentration of S4   |$1.0 \\x 10^-3$ |mole metre^-2^                      |\r\n|Value of parameter k1         |$0.75 \\x 10^3$ |metre^2^ mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25 \\x 10^3$ |metre^2^ mole^-1^ second^-1^ |\r\n|Area of compartment C         |$            1$ |metre^2^                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre^2, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre^2, compartment: C, } .= 0.001;\r\nS2 @Species 'S2' { units: mole/metre^2, compartment: C, } .= 0.001;\r\nS3 @Species 'S3' { units: mole/metre^2, compartment: C, } .= 0.002;\r\nS4 @Species 'S4' { units: mole/metre^2, compartment: C, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  Compartment\r\nC is 1-dimensional.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$1.5 \\x 10^-1$ |mole metre^-1^                      |\r\n|Initial concentration of S2   |$         0$    |mole metre^-1^                      |\r\n|Value of parameter k1         |$            1$ |second^-1^                |\r\n|Length of compartment C       |$            1$ |metre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 0.15;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 1-dimensional compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.\r\nCompartment C is 1-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-2$ |mole metre^-1^                      |\r\n|Initial concentration of S2   |$2.0 \\x 10^-2$ |mole metre^-1^                      |\r\n|Initial concentration of S3   |$1.0 \\x 10^-2$ |mole metre^-1^                      |\r\n|Value of parameter k1         |$         0.75$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$         0.25$ |second^-1^ |\r\n|Length of compartment C       |$            1$ |metre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 0.01;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 0.02;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\ncompartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.\r\nCompartment C is 1-dimensional.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-4$ |mole metre^-1^                      |\r\n|Initial concentration of S2   |$1.0 \\x 10^-4$ |mole metre^-1^                      |\r\n|Initial concentration of S3   |$2.0 \\x 10^-4$ |mole metre^-1^                      |\r\n|Initial concentration of S4   |$1.0 \\x 10^-4$ |mole metre^-1^                      |\r\n|Value of parameter k1         |$0.75 \\x 10^4$ |metre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25 \\x 10^4$ |metre mole^-1^ second^-1^ |\r\n|Length of compartment C       |$            1$ |metre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: metre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/metre, compartment: C, } .= 1e-4;\r\nS2 @Species 'S2' { units: mole/metre, compartment: C, } .= 1e-4;\r\nS3 @Species 'S3' { units: mole/metre, compartment: C, } .= 2e-4;\r\nS4 @Species 'S4' { units: mole/metre, compartment: C, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species and parameters local to \r\n               reactions.\r\ncomponentTags: Compartment, Species, Reaction \r\ntestTags:      Concentration, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * C,$  |\r\n| S2 -> S3 | $k * S2 * C,$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k.  Reaction S2 -> S3 also\r\ndefines one (different) local parameter k.  Both of these parameters have a\r\nscope local to the defining reaction.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$3.0 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$            0$ |mole litre^-1^                      |\r\n|Value of local parameter k    |$            1$ |second^-1^ |\r\n|Value of local parameter k    |$            2$ |second^-1^ |\r\n|Volume of compartment C       |$            1$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.003;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S2;\n\r\nk__reaction1_local @Const { } = 1;\r\nk__reaction2_local @Const { } = 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species and parameters both global\r\n               and local to reactions.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one global parameter called k.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * C$  |\r\n| S2 -> S3 | $k * S2 * C$  |]\r\n\r\nReaction S2 -> S3 defines one local parameter k.\r\n\r\nNote that the id of the local parameter k shadows the global parameter k.\r\nWithin the defining reaction, the value of the locally-defined parameter k\r\nmust be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$3.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$            0$ |mole litre^-1^                      |\r\n|Value of parameter k          |$            1$ |second^-1^ |\r\n|Value of local parameter k    |$            2$ |second^-1^ |\r\n|Volume of compartment C       |$            1$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.3;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S2;\n\r\nk__reaction2_local @Const { } = 2;\r\nk @Const 'k' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species and parameters both global\r\n               and local to reactions.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one global parameter called k.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * C$  |\r\n| S2 -> S3 | $S1 * S2 * C$  |]\r\n\r\nReaction S2 -> S3 defines one local parameter S1.\r\n\r\nNote that the id of the local parameter S1 shadows the species S1.  Within\r\nthe defining reaction, the value of the locally-defined symbol S1 must be\r\nused.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$3.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$            0$ |mole litre^-1^                      |\r\n|Value of parameter k          |$            2$ |second^-1^ |\r\n|Value of local parameter S1   |$            1$ |second^-1^ |\r\n|Volume of compartment C       |$            1$ |litre                     |]\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment 'C' { units: volume, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: substance/volume, compartment: C, } .= 0.03;\r\nS2 @Species 'S2' { units: substance/volume, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: substance/volume, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, modifiers: [S1], reversible: false, };\r\nreaction2 := C * S1__reaction2_local * S2;\n\r\nk @Record 'k' { } .= 2;\n\r\nS1__reaction2_local @Const { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one parameter called k1.  Species S3 is\r\nlabeled as constant and therefore cannot be changed by rules or reactions.\r\nThe model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * S3 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$            2$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$          1.5$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C       |$            1$ |litre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, modifiers: [S3], reversible: false, };\r\nreaction1 := C * k1 * S1 * S3;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions with four species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.\r\nSpecies S4 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$          1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$          2.0$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$          1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S4   |$          1.5$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$          1.7$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$          0.3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C       |$            1$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, modifiers: [S4], reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1.7;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with five species in a compartment \r\n               where one species is constant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are five\r\nspecies called S1, S2, S3, S4 and S5 and two parameters called k1 and k2.\r\nSpecies S5 is labeled as constant and therefore cannot be changed by rules\r\nor reactions.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C / S5$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of S1   |$ 1.0 \\x 10^-6$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$ 1.5 \\x 10^-6$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$ 2.0 \\x 10^-6$ |mole litre^-1^                      |\r\n|Initial concentration of S4   |$ 0.5 \\x 10^-6$ |mole litre^-1^                      |\r\n|Initial concentration of S5   |$ 1.0 \\x 10^-6$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$  1.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$          0.3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C       |$            1$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-6;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5e-7;\r\nS5 @Species 'S5' { units: mole/litre, boundary: true, compartment: C, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, modifiers: [S5], reversible: false, };\r\nreaction2 := C * k2 * S3 * S4 * pow(S5, (-1));\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$            0$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$          1.5$ |second^-1^ |\r\n|Volume of compartment C       |$          1.5$ |litre                     |]\r\n\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$2.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$1.5 \\x 10^-2$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25 \\x 10^-1$ |second^-1^ |\r\n|Volume of compartment C       |$          0.7$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.7;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.015;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 0.025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a compartment \r\n               of non-unity volume. \r\ncomponentTags: Compartment, Species, Reaction, Parameter\r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$          1.7$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$          2.0$ |mole litre^-1^                      |\r\n|Initial concentration of S4   |$          1.0$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$         0.75$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$         0.25$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C       |$          0.3$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.7;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment of non-unity size using a function to apply \r\nthe kinetic law.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * multiply(k1,S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.5 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$1.5 \\x 10^-3$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$            1$ |second^-1^ |\r\n|Volume of compartment C       |$          2.3$ |litre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.0015;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment \r\n               of non-unity size using a functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.\r\nThere are three species called S1, S2 and S3 and two parameters called k1 and k2.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $multiply(k1, S1, S2) * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$1.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$2.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$1.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Value of parameter k1         | $         0.75$ | litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         | $         2.5$ | second^-1^ |\r\n|Volume of compartment C       |$          2.3$ |litre                     |]\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * multiply(k1, S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one varying compartment\r\n               and one functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $multiply(k1,multiply(S1,S2)) * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$0.5 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$1.0 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$2.0 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S4   |$1.5 \\x 10^-3$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C       |$         12.5$ |litre                     |]\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 12.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 5e-4;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.001;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.002;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.0015;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * multiply(k1, multiply(S1, S2));\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one \r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S4 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$ 1.5 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S4   |$   undeclared$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$            5$ |second^-1^ |\r\n|Value of parameter k3         |$          1.5$ |dimensionless |\r\n|Volume of compartment C       |$          0.1$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3 and thus it\r\nmust be calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1   |$            1$ |mole litre^-1^                      |\r\n|Initial concentration of S2   |$1.5 \\x 10^-4$ |mole litre^-1^                      |\r\n|Initial concentration of S3   |$   undeclared$ |mole litre^-1^                      |\r\n|Value of parameter k1         |$         0.75$ |dimensionless |\r\n|Value of parameter k2         |$            5$ |second^-1^ |\r\n|Volume of compartment C       |$         0.08$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.08;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one parameters called k.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k * S$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k which has a\r\nscope local to the defining reaction.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k * S2$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*      |*Units*  |\r\n|Initial amount of S1                |$1$          |mole                      |\r\n|Initial amount of S2                |$0$          |mole                      |\r\n|Initial amount of S3                |$1$          |mole                      |\r\n|Value of parameter k                |$0.75$       |dimensionless |\r\n|Value of local parameter k          |$5$          |second^-1^ |\r\n|Volume of compartment C             |$1$          |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS3 := k * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\n\r\nk__reaction1_local @Const { } = 5;\r\nk @Const 'k' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S and one parameter called k.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$  |]\r\n\r\nReaction S1 + S2 -> S3 defines one local parameter k.  Reaction S3 -> S1 + S2 also\r\ndefines one (different) local parameter k.  Both of these parameters have a\r\nscope local to the defining reaction.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k * S2$  |]\r\n\r\nNote that in this case the initial value of species S4 has not been declared and must be \r\ncalculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$    1 \\x 10^-5 |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k                |$          1.5$ |dimensionless |\r\n|Value of local parameter k          |$  1.5 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of local parameter k          |$            5$ |second^-1^ |\r\n|Volume of compartment C             |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\n\r\nk__reaction1_local @Const { } = 15000;\r\nk__reaction2_local @Const { } = 5;\r\nk @Const 'k' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is undeclared and so must be calculated\r\nby the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$undeclared$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is inconsisent with the value declared by the model definition.  \r\nThe value calculated by the initialAssignment should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$10$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is consisent with the value declared by the model definition.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$0.1$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is consistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$        0.375$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.375 / C;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is inconsistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$        3.75$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 3.75 / C;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $multiply(k3, S1)$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$         2.25$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 2.25 / C;\r\nS4 := multiply(k3, S1);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $multiply(k3, S1)$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := multiply(k3, S1);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $multiply(k3, S1)$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nNote that in this case the initial value declared for species S4 is consistent\r\nwith the value calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS4 := multiply(k3, S1);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and three parameters called k1, p1 and p2.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $multiply(p1, p2)$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is undeclared and so must be calculated\r\nby the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$undeclared$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := multiply(p1, p2);\n\r\np1 @Const 'p1' { } = 75;\r\np2 @Const 'p2' { } = 0.01;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and three parameters called k1, p1 and p2.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $multiply(p1, p2)$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is inconsisent with the value declared by the model definition.  \r\nThe value calculated by the initialAssignment should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$10$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := multiply(p1, p2);\n\r\np1 @Const 'p1' { } = 75;\r\np2 @Const 'p2' { } = 0.01;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment, FunctionDefinition \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and three parameters called k1, p1 and p2.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $multiply(p1, p2)$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is consisent with the value declared by the model definition.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$0.1$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := multiply(p1, p2);\n\r\np1 @Const 'p1' { } = 75;\r\np2 @Const 'p2' { } = 0.01;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay, FunctionDefinition  \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S2)$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay, FunctionDefinition  \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S2)$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nIn this case the initial value declared for species S3 is consistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$        0.375$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.375 / C;\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay, FunctionDefinition  \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S2)$  |]\r\n\r\nThe assignmentRule applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n \r\nIn this case the initial value declared for species S3 is inconsistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          0.5$ |mole                      |\r\n|Initial amount of S3                |$        3.75$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 3.75 / C;\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, InitialAssignment \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k2  *  S4$  |\r\n | Rate | S4 | $-k2  *  S4$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 0.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 calculated by the initialAssignment is consisent with the value \r\ndeclared by the model definition.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Value of parameter p                |$         0.75$ |mole litre^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k2 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-1) * k2 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k2  *  S4$  |\r\n | Rate | S4 | $-k2  *  S4$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 0.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 calculated by the initialAssignment is inconsisent with the value \r\ndeclared by the model definition.  The calculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Value of parameter p                |$         0.75$ |mole litre^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k2 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-1) * k2 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k2  *  S4$  |\r\n | Rate | S4 | $-k2  *  S4$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 0.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 is not declared by the model definition.  The calculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ undeclared$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.5$ |second^-1^ |\r\n|Value of parameter p                |$         0.75$ |mole litre^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k2 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-1) * k2 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.5;\r\np1 @Const 'p1' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and four parameters called k1, k2, k3 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value should be used.  \r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 2000$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 calculated by the initialAssignment is consisent with the value \r\ndeclared by the model definition.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$            5$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Value of parameter p1               |$   2 \\x 10^-2$ |mole litre^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= p1 * pow(2000, (-1));\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\r\np1 @Const 'p1' { } = 0.02;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and four parameters called k1, k2, k3 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value should be used.  \r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 2000$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 calculated by the initialAssignment is inconsisent with the value \r\ndeclared by the model definition.  The calculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$            5$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Value of parameter p1               |$   2 \\x 10^-2$ |mole litre^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= p1 * pow(2000, (-1));\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\r\np1 @Const 'p1' { } = 0.02;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and four parameters called k1, k2, k3 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value should be used.  \r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 2000$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 is not declared by the model definition.  The calculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ undeclared$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$            5$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Value of parameter p1               |$   2 \\x 10^-2$ |mole litre^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= p1 * pow(2000, (-1));\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\r\np1 @Const 'p1' { } = 0.02;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one parameter called k1.  The model contains\r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.15$  |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.15;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, EventNoDelay\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1$  |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = 2$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5$ |mole                      |\r\n|Initial amount of S2                |$2.0$ |mole                      |\r\n|Initial amount of S3                |$1.5$ |mole                      |\r\n|Initial amount of S4                |$  1$ |mole                      |\r\n|Value of parameter k1               |$0.$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.00025$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := 1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = 2$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, EventNoDelay \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 > 0.000015$ | $-$   | $S3 = 0.00001$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$         2.25$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS3 [event1]= (1e-5);\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 2.25 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 > (1.5e-5), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, EventNoDelay \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 > 0.000015$ | $-$   | $S3 = 0.00001$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS3 [event1]= (1e-5);\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 > (1.5e-5), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\nconsistent with the value calculated by the assignmentRule.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 > 0.000015$ | $-$   | $S3 = 0.00001$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS3 [event1]= (1e-5);\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 > (1.5e-5), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule with a \r\n               functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S1)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S3 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          0.5$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C             |$          2.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule with a functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment                           | S4           | $multiply(p1, S2)$  |]\r\n\r\nThe model contains one FunctionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S4 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-1$ |second^-1^ |\r\n|Value of parameter p1               |$         0.75$ |dimensionless |\r\n|Volume of compartment C             |$         0.86$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.86;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.015 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := multiply(p1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 0.025;\r\np1 @Const 'p1' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with five species in one\r\ncompartment using an assignmentRules with functionDefinitions to vary two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are five\r\nspecies called S1, S2, S3, S4 and S5 and three parameters called k1, k2 and\r\np1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S2 | $k2 * S5 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $func1(S3, p1)$  |\r\n | Assignment | S5 | $multiply(S4, p1)$  |]\r\n\r\nThe model contains two functionDefinitions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |\r\n | func1 | x, y | $x/(1 + y)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Initial amount of S4                |$            0$ |mole                      |\r\n|Initial amount of S5                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          0.1$ |second^-1^ |\r\n|Value of parameter k2               |$         0.15$ |second^-1^ |\r\n|Value of parameter p1               |$          2.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            2.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\nfunc1 #defineFunction { arguments: [x, y], math: x * pow(y + 1, (-1)), };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 := func1(S3, p1);\r\nS5 @Species 'S5' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS5 := multiply(S4, p1);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S2, modifiers: [S5], reversible: false, };\r\nreaction2 := C * k2 * S5;\n\r\nk1 @Const 'k1' { } = 0.1;\r\nk2 @Const 'k2' { } = 0.15;\r\np1 @Const 'p1' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$         2.25$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$            2.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 2.25 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$         0.76$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.76;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value should be used.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$            5$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$          1.4$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.4;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is undeclared and so must be calculated\r\nby the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$undeclared$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is inconsisent with the value declared by the model definition.  \r\nThe value calculated by the initialAssignment should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$10$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C             |$          0.47$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.47;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is consisent with the value declared by the model definition.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$0.66$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            6.6$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 6.6;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is consistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$        0.375$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            0.79$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.79;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.375 / C;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is inconsistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$        3.75$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 7.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 3.75 / C;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule with a \r\n               functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S1)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S3 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$            1$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$          0.5$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$   undeclared$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$          1.5$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C             |$          2.5$ |litre                     |]\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial concentration of S1                |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$ 1.5 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$         2.25$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$            2.5$ |litre                     |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 2.25;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is undeclared and so must be calculated\r\nby the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$undeclared$    |mole litre^-1^                      |\r\n|Initial concentration of S2                |$         0.15$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial concentration of S1                |$            1$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$   undeclared$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule with a functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  Species S1 \r\nis labeled as an SBML boundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S1)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S3 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          0.5$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C             |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule with a functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  Species S3 \r\nis labeled as an SBML boundary species.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $multiply(k1, S1)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S3 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$          0.5$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C             |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, };\r\nS3 := multiply(k1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.  \r\nSpecies S1 is labeled as an SBML boundary species.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$         2.25$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 2.25 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using both an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.  \r\nSpecies S4 is labeled as an SBML boundary species.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is\r\ninconsistent with the value calculated by the assignmentRule.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$         2.25$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 2.25 / C;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  Species S1 \r\nis labeled as an SBML boundary species.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is undeclared and so must be calculated\r\nby the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$undeclared$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  Species S2 \r\nis labeled as an SBML boundary species.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is undeclared and so must be calculated\r\nby the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$undeclared$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  \r\nSpecies S1 is labeled as an SBML boundary species.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, BoundaryCondition, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  \r\nSpecies S3 is labeled as an SBML boundary species.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule with a functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and one parameter called k.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$  |]\r\n\r\nReaction S1 + S2 -> S3 defines one local parameter k which has a\r\nscope local to the defining reaction.  Reaction S3 -> S1 + S2 defines another\r\n(different) local parameter k.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment                           | S4           | $multiply(k, S2)$  |]\r\n\r\nThe model contains one FunctionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S4 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k                |$         0.75$ |dimensionless |\r\n|Value of local parameter k (R1)     |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of local parameter k (R2)     |$0.25 \\x 10^-2$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5e-4 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := multiply(k, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\n\r\nk__reaction1_local @Const { } = 7500;\r\nk__reaction2_local @Const { } = 0.0025;\r\nk @Const 'k' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S and three parameters called k1, k2 and k.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k * S1 * C$  |\r\n| S3 -> S1 | $k * S3 * C$  |]\r\n\r\nReaction S1 -> S3 defines one local parameter k which has a\r\nscope local to the defining reaction.  Reaction S3 -> S1 defines another\r\n(different) local parameter k.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k               |$          1.5$ |dimensionless |\r\n|Value of local parameter k (R1)     |$        0.015$ |second^-1^ |\r\n|Value of local parameter k (R2)     |$          0.5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk__reaction1_local @Const { } = 0.015;\r\nk__reaction2_local @Const { } = 0.5;\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk @Const 'k' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k * S1$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k which has a\r\nscope local to the defining reaction and is different from the global parameter k\r\nused in the initialAssignment.\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is inconsisent with the value declared by the model definition.  \r\nThe value calculated by the initialAssignment should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$10$    |mole                      |\r\n|Initial amount of S2                |$         0.15$ |mole                      |\r\n|Value of parameter k               |$   undeclared$ |second^-1^ |\r\n|Value of local parameter k          |$   0.75$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\n\r\nk @Record 'k' { };\r\nk := 0.75;\n\r\nk__reaction1_local @Const { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one parameter called k.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k * S1$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k which has a\r\nscope local to the defining reaction and is different from the global parameter k\r\nused in the assignmentRule.\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is consistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$        0.375$ |mole                      |\r\n|Value of parameter k                |$         0.75$ |dimensionless |\r\n|Value of local parameter k          |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.375 / C;\r\nS3 := k * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1;\n\r\nk__reaction1_local @Const { } = 5;\r\nk @Const 'k' { } = 0.75;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$          2.0$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$            4$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment C |$          0.5$ |litre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one parameter called k1.  The model contains\r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.15$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$          1.5$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$            0$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment C |$         1.75$ |litre                     |]\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.75;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.15;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-4$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$1.5 \\x 10^-4$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$2.0 \\x 10^-4$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$1.5 \\x 10^-4$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$  1 \\x 10^-4$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-2$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.93;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-4;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5e-4;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := 1e-4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 0.0025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantParameter, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2; two constant parameters called k2 and k3 and one varying\r\nparameter called k1.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $add(k2, k3)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$            1$ |second^-1^ |\r\n|Value of parameter k2               |$          0.2$ |second^-1^ |\r\n|Value of parameter k3               |$          0.3$ |lsecond^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.15 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := add(k2, k3);\n\r\nk1 @Record 'k1' { } .= 1;\n\r\nk2 @Const 'k2' { } = 0.2;\r\nk3 @Const 'k3' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantParameter, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4; three constant parameters called k2, k3 and\r\np1 and one varying parameter called k1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $add(k2, k3) * p1$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$    1 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$  0.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k3               |$  0.7 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$            1$ |second^-1^                |\r\n|Volume of compartment C |$            0.15$ |litre                     |]\r\nThe species values are given as amounts of substance to make it easier to\r\n\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.15;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-6 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-6 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2e-6 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5e-7 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := p1 * add(k2, k3);\n\r\nk1 @Record 'k1' { } .= 1e+6;\n\r\nk2 @Const 'k2' { } = 300000;\r\nk3 @Const 'k3' { } = 700000;\r\np1 @Const 'p1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonConstantParameter, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3; four constant parameters called k2, k3, p1 and\r\np2 and one varying parameter called k1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $p1* add(p2 * k2, k3)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$          1.7$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Value of parameter k3               |$         -0.1$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$            1$ |second^-1^                |\r\n|Value of parameter p2               |$            1$ |litre mole^-1^                 |\r\n|Volume of compartment C |$            1.25$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.25;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := p1 * add(k2 * p2, k3);\n\r\nk1 @Record 'k1' { } .= 1.7;\n\r\nk2 @Const 'k2' { } = 0.3;\r\nk3 @Const 'k3' { } = -0.1;\r\np1 @Const 'p1' { } = 1;\r\np2 @Const 'p2' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$ 1.5 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$   undeclared$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$         0.76$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.76;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated by the assignmentRule.  The calculated value should be used.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$ 1.5 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$   1 \\x 10^-5$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$            5$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C             |$          1.4$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.4;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5;\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, ConstantSpecies\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and one parameter called k1.  Species S4 is \r\nlabeled as constant and therefore cannot be changed by rules or reactions.   \r\nThe model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.15$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Initial amount of S4                |$          1.0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.15;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| 2S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^3$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-2$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.0015 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.0015 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.001 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1 / 1000);\n\r\nk1 @Const 'k1' { } = 750;\r\nk2 @Const 'k2' { } = 0.0025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule that applies a functionDefinition\r\n               with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + 2S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $multiply(k2, 4 \\x 10^-6$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$   1 \\x 10^-7$ |mole                      |\r\n|Value of parameter k1               |$ 0.75 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-6 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-6 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5e-6 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-7 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + 2*S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := multiply(k2, (1 / 2.5e+5));\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| 2S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, InitialAssignment \r\ntestTags:      Amount, NonUnityStoichiometry, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k2  *  S4$  |\r\n | Rate | S4 | $-k2  *  S4$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 0.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 is not declared by the model definition.  The calculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ undeclared$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.5$ |second^-1^ |\r\n|Value of parameter p                |$         0.75$ |mole litre^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k2 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-1) * k2 * S4;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.5;\r\np1 @Const 'p1' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, EventNoDelay \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = 2$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k1 which has a\r\nscope local to the defining reaction and is different from the global parameter k1\r\nused in the RateRule.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Value of local parameter k1               |$0.9$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1__reaction1_local * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1__reaction1_local @Const { } = 0.9;\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule that applies a functionDefinition\r\n               with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and one parameter called k.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k * S3 * C$  |]\r\n\r\nEach reaction defines one local parameter k which has a\r\nscope local to the defining reaction and is different from the global parameter k\r\nused in the RateRule.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $multiply(k2, 4 \\x 10^-6$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$   1 \\x 10^-7$ |mole                      |\r\n|Value of parameter k               |$         0.25$ |second^-1^ |\r\n|Value of local parameter k (R1)               |$ 0.75 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of local parameter k (R2)              |$         0.3$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-6 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-6 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5e-6 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-7 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k__reaction1_local * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k__reaction2_local * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := multiply(k, (1 / 2.5e+5));\n\r\nk__reaction1_local @Const { } = 750000;\r\nk__reaction2_local @Const { } = 0.3;\r\nk @Const 'k' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule and a rateRule to vary species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, AssignmentRule \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S and three parameters called k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S1 | $k2 * S3 * C$  |]\r\n\r\nReaction S1 -> S3 defines one local parameter k1 and reaction S3 -> S2 defines one\r\nlocal parameter k2.  These parameters have a scope local to the defining reaction \r\nand are different from the global parameters k1 and k2 used in the rules.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S1$  |\r\n | Rate       | S2 | $k2 * S3-k1 * S1$  |]\r\n\r\nNote that in this case the initial value of species S4 is not explicitly\r\ndeclared and must be calculated by the assignmentRule.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$        0.015$ |second^-1^ |\r\n|Value of parameter k2               |$          0.5$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Value of local parameter k1         |$        0.01$ |second^-1^ |\r\n|Value of local parameter k2         |$          0.4$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := k3 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1__reaction1_local * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1, reversible: false, };\r\nreaction2 := C * k2__reaction2_local * S3;\r\nS2_proc @Process { actors:  = S2, aux: {metaid: \"rule2\"}, };\r\nS2_proc := k2 * S3 + (-1) * k1 * S1;\n\r\nk1__reaction1_local @Const { } = 0.01;\r\nk2__reaction2_local @Const { } = 0.4;\r\nk1 @Const 'k1' { } = 0.015;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, InitialAssignment \r\ntestTags:      Amount, LocalParameters, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k1 which has a\r\nscope local to the defining reaction and is different from the global parameter k1\r\nused in the InitialAssignment.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k2  *  S4$  |\r\n | Rate | S4 | $-k2  *  S4$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 / 0.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this case the \r\nvalue of species S1 is not declared by the model definition.  The calculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$ undeclared$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1                |$         0.75$ |mole litre^-1^ |\r\n|Value of parameter k2               |$         0.5$ |second^-1^ |\r\n|Value of local parameter k1               |$         0.8$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1__reaction1_local * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k2 * S4;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-1) * k2 * S4;\n\r\nk1__reaction1_local @Const { } = 0.8;\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule, EventNoDelay \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> (4 * p1)S2 | $k1 * S1 * C$  |]\r\n\r\nReaction S1 -> S2 defines one local parameter k1 which has a\r\nscope local to the defining reaction and is different from the global parameter k1\r\nused in the rateRule.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = 2$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Value of local parameter k1               |$         0.8$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1__reaction1_local * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1__reaction1_local @Const { } = 0.8;\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\ncompartment using an assignmentRule with a functionDefinition to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and p1.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment                           | S4           | $multiply(p1, S2)$  |]\r\n\r\nThe model contains one FunctionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nNote that in this case the initial value of the species S4 is not explicitly\r\ndeclared and must be calculated by the AssignmentRule. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$1.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$2.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$1.5 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$   undeclared$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$0.75 \\x 10^2$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-1$ |second^-1^ |\r\n|Value of parameter p1               |$         0.75$ |dimensionless |\r\n|Volume of compartment C             |$         0.86$ |litre                     |]\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.86;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.015;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := multiply(p1, S2);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 0.025;\r\np1 @Const 'p1' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with five species in one\r\ncompartment using an assignmentRules with functionDefinitions to vary two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, AssignmentRule \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are five\r\nspecies called S1, S2, S3, S4 and S5 and three parameters called k1, k2 and\r\np1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S3 | $k1 * S1 * C$  |\r\n| S3 -> S2 | $k2 * S5 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $func1(S3, p1)$  |\r\n | Assignment | S5 | $multiply(S4, p1)$  |]\r\n\r\nThe model contains two functionDefinitions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |\r\n | func1 | x, y | $x / (1 + y)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$          1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S5                |$            0$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$          0.1$ |second^-1^ |\r\n|Value of parameter k2               |$         0.15$ |second^-1^ |\r\n|Value of parameter p1               |$          2.5$ |dimensionless |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\nfunc1 #defineFunction { arguments: [x, y], math: x * pow(y + 1, (-1)), };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0;\r\nS4 := func1(S3, p1);\r\nS5 @Species 'S5' { units: mole/litre, compartment: C, } .= 0;\r\nS5 := multiply(S4, p1);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S2, modifiers: [S5], reversible: false, };\r\nreaction2 := C * k2 * S5;\n\r\nk1 @Const 'k1' { } = 0.1;\r\nk2 @Const 'k2' { } = 0.15;\r\np1 @Const 'p1' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Concentration, NonConstantParameter, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2; two constant parameters called k2 and k3 and one varying\r\nparameter called k1.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $add(k2, k3)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial concentration of S1                |$1.5 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$            0$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$            1$ |second^-1^ |\r\n|Value of parameter k2               |$          0.2$ |second^-1^ |\r\n|Value of parameter k3               |$          0.3$ |lsecond^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := add(k2, k3);\n\r\nk1 @Record 'k1' { } .= 1;\n\r\nk2 @Const 'k2' { } = 0.2;\r\nk3 @Const 'k3' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Concentration, NonConstantParameter, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4; three constant parameters called k2, k3 and\r\np1 and one varying parameter called k1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $add(k2, k3) * p1$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial concentration of S1                |$ 1.0 \\x 10^-6$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$ 1.5 \\x 10^-6$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$ 2.0 \\x 10^-6$ |mole litre^-1^                      |\r\n|Initial concentration of S4                |$ 0.5 \\x 10^-6$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$    1 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$  0.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k3               |$  0.7 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$            1$ |second^-1^                |\r\n|Volume of compartment C |$            0.15$ |litre                     |]\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.15;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-6;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5e-7;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := p1 * add(k2, k3);\n\r\nk1 @Record 'k1' { } .= 1e+6;\n\r\nk2 @Const 'k2' { } = 300000;\r\nk3 @Const 'k3' { } = 700000;\r\np1 @Const 'p1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Rate rule using a functionDefinition used to determine value of parameter\r\n               which is used in a reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, RateRule \r\ntestTags:      Concentration, NonConstantParameter, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3; four constant parameters called k2, k3, p1 and\r\np2 and one varying parameter called k1.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule that determines the value of parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | k1 | $p1* add(p2 * k2, k3)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y | $x + y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial concentration of S1                |$          1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$          2.0$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$          1.0$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$          1.7$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Value of parameter k3               |$         -0.1$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter p1               |$            1$ |second^-1^                |\r\n|Value of parameter p2               |$            1$ |litre mole^-1^                 |\r\n|Volume of compartment C |$            1.25$ |litre                     |]\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.25;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := p1 * add(k2 * p2, k3);\n\r\nk1 @Record 'k1' { } .= 1.7;\n\r\nk2 @Const 'k2' { } = 0.3;\r\nk3 @Const 'k3' { } = -0.1;\r\np1 @Const 'p1' { } = 1;\r\np2 @Const 'p2' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial concentration of S1          |$1.0$   |mole litre^-1^                      |\r\n|Initial concentration of S2          |$2.0$   |mole litre^-1^                      |\r\n|Initial concentration of S3          |$1.0$   |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$0.1$   |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$      |\r\n | Event2                      | $S3 > 1.4$  | $-$     | $S1 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial concentration of S1          |$1.0$   |mole litre^-1^                      |\r\n|Initial concentration of S2          |$2.0$   |mole litre^-1^                      |\r\n|Initial concentration of S3          |$1.0$   |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$1.43$  |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.43;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS1 [event2]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to both species S1 and S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.65$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S1 = 1$      |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*                   |\r\n|Initial concentration of S1          |$1.0$   |mole litre^-1^                      |\r\n|Initial concentration of S2          |$2.0$   |mole litre^-1^                      |\r\n|Initial concentration of S3          |$1.0$   |mole litre^-1^                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Volume of compartment C       |$0.9$   |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.9;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS1 [event1]= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.65, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns a value to species S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger* | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$ | $-$     | $S1 -> 2 \\x 10^-1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1          |$1.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Initial concentration of S2          |$1.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Initial concentration of S3          |$2.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Initial concentration of S4          |$1.0 \\x 10^-1$  |mole litre^-1^                       |\r\n|Value of parameter k1         |$0.75 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^1$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$0.24$           |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.24;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1;\r\nS1 [event1]= 0.2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.12;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.2;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 2.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and two events that assign value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains two events that assign values to species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*             | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$             | $-$     | $S1 -> 2 \\x 10^-4$    |]\r\n | Event2                      | $S3 > 2.25 \\x 10^-4$ | $-$     | $S4 -> 1 \\x 10^-4$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1          |$1.0 \\x 10^-4$  |mole litre^-1^                       |\r\n|Initial concentration of S2          |$1.0 \\x 10^-4$  |mole litre^-1^                       |\r\n|Initial concentration of S3          |$2.0 \\x 10^-4$  |mole litre^-1^                       |\r\n|Initial concentration of S4          |$1.0 \\x 10^-4$  |mole litre^-1^                       |\r\n|Value of parameter k1         |$0.75 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^4$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$0.1$            |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4;\r\nS1 [event1]= (1 / 5000);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.2e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 2e-4;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-4;\r\nS4 [event2]= (1 / 10000);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 2500;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > (9 / 40000), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\n               and an event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and two parameters called k1 and k2.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns a value to both species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger* | *Delay* | *Assignments* |\r\n | Event1                      | $S4 > S2$ | $-$     | $S1 -> 2 \\x 10^-2$   |\r\n |                             |           |         | $S4 -> 0.5 \\x 10^-2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*          |*Units*  |\r\n|Initial concentration of S1          |$1.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Initial concentration of S2          |$1.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Initial concentration of S3          |$2.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Initial concentration of S4          |$1.0 \\x 10^-2$  |mole litre^-1^                       |\r\n|Value of parameter k1         |$0.75 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2         |$0.25 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Volume of compartment C       |$0.25$           |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.25;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01;\r\nS1 [event1]= (1 / 50);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.012;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.02;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.01;\r\nS4 [event1]= (1 / 200);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\nevent1 @DSwitcher 'event1' { trigger: S4 > S2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is consistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.25$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial concentration of S1                |$            1$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$        0.375$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            0.79$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.79;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.375;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.25, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, EventNoDelay  \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2$  |]\r\n\r\nIn this case the initial value declared for species S3 is inconsistent with\r\nthe value calculated by the assignmentRule.  Note that since this\r\nassignmentRule must always remain true, it should be considered during\r\nsimulation.\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.1$ | $-$   | $S2 = 1$    |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial concentration of S1                |$            1$ |mole litre^-1^                      |\r\n|Initial concentration of S2                |$            0$ |mole litre^-1^                      |\r\n|Initial concentration of S3                |$        3.75$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$         0.75$ |dimensionless |\r\n|Value of parameter k2               |$            5$ |second^-1^ |\r\n|Volume of compartment C |$            2.5$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 7.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5;\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 3.75;\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species using a function.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, FunctionDefinition, RateRule\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species\r\ncalled S1, S2, S3 and S4 and four parameters called k1, k2, k3 and k4.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one rule that determines the rate at which species S4 \r\nis changing:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4  | $k2 * add(S1, S3)$  |]\r\n \r\nThe model contains one event that assigns a value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = add(k3, k4)$    |]\r\n \r\nBoth the rateRule and the eventAssignment uses the functionDefinition defined as:\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y      | $x + y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Initial amount of S4    |$1.5$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$0.8$ |mole litre^-1^ |\r\n|Value of parameter k4   |$0.2$ |mole litre^-1^ |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 [event1]= add(k3, k4);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := k2 * add(S1, S3);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.8;\r\nk4 @Const 'k4' { } = 0.2;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and two events that assigns value to a species using a function.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, FunctionDefinition, RateRule\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species\r\ncalled S1, S2, S3 and S4 and four parameters called k1, k2, k3 and k4.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one rule that determines the rate at which species S4 \r\nis changing:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4  | $k2 * add(S1, S2)$  |]\r\n \r\nThe model contains two events that assign values to species S2 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = add(k3, k4)$    |\r\n | Event2 | $S3 > 1.2$ | $-$   | $S4 = 1 * divide(k3, k4)$    |]\r\n\r\nThe rateRule and both eventAssignments use functionDefinitions defined as:\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y      | $x + y$   |\r\n | divide | x, y      | $x / y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Initial amount of S4    |$1.5$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$0.5$ |mole litre^-1^ |\r\n|Value of parameter k4   |$0.5$ |mole litre^-1^ |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\ndivide #defineFunction { arguments: [x, y], math: x * pow(y, (-1)), };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= add(k3, k4);\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 [event2]= divide(k3, k4);\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := k2 * add(S1, S2);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.5;\r\nk4 @Const 'k4' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species using a function.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, FunctionDefinition, InitialAssignment\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and five parameters called k1, k2, k3, k4 and p1.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = add(k3, k4)$    |]\r\n \r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $add(p1, p1)$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nBoth the eventAssignment and the initialAssignment use the functionDefinition defined as:\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y      | $x + y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$0.8$ |mole litre^-1^ |\r\n|Value of parameter k4   |$0.2$ |mole litre^-1^ |\r\n|Value of parameter p1   |$0.5$ |mole |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= add(p1, p1);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= add(k3, k4);\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.8;\r\nk4 @Const 'k4' { } = 0.2;\r\np1 @Const 'p1' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species using a function.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, FunctionDefinition, InitialAssignment\r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and five parameters called k1, k2, k3, k4 and p1.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = add(k3, k4)$    |]\r\n \r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $add(p1, p1)$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nBoth the eventAssignment and the initialAssignment use the functionDefinition defined as:\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y      | $x + y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$5.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$0.8$ |mole litre^-1^ |\r\n|Value of parameter k4   |$0.2$ |mole litre^-1^ |\r\n|Value of parameter p1   |$0.5$ |mole |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= add(p1, p1);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= add(k3, k4);\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.8;\r\nk4 @Const 'k4' { } = 0.2;\r\np1 @Const 'p1' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event that assigns value to a species using a function.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, FunctionDefinition, InitialAssignment\r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and five parameters called k1, k2, k3, k4 and p1.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = add(k3, k4)$    |]\r\n \r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $add(p1, p1)$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value has not been declared for species S1 \r\nand must be calculated using the InitialAssignment.\r\n\r\nBoth the eventAssignment and the initialAssignment use the functionDefinition defined as:\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | add | x, y      | $x + y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$undeclared$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$0.8$ |mole litre^-1^ |\r\n|Value of parameter k4   |$0.2$ |mole litre^-1^ |\r\n|Value of parameter p1   |$0.5$ |mole |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nadd #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= add(p1, p1);\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= add(k3, k4);\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 0.8;\r\nk4 @Const 'k4' { } = 0.2;\r\np1 @Const 'p1' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 9$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial concentration of S1        |$1$        |mole litre^-1^                      |\r\n|Initial concentration of S2        |$1.5$      |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$5.4$      |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 * pow(9, (-1));\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 10$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial concentration of S1        |$1$        |mole litre^-1^                      |\r\n|Initial concentration of S2        |$1.5$      |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$5$        |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 * pow(10, (-1));\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / 9$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*    |*Units*  |\r\n|Initial concentration of S1        |$1$          |mole litre^-1^                      |\r\n|Initial concentration of S2        |$1.5$        |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.5$        |second^-1^ |\r\n|Value of parameter k2       |$50$         |litre |\r\n|Volume of compartment C     |$undeclared$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 * pow(9, (-1));\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$2.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$1.0 \\x 10^-2$ |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.25$          |litre                |\r\n|Volume of compartment C     |$0.5$           |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$2.0 \\x 10^-3$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$1.0 \\x 10^-3$ |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.25$          |litre                |\r\n|Volume of compartment C     |$3.5$           |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$2.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$1.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$          |second^-1^                |\r\n|Value of parameter p1       |$0.25$          |litre                |\r\n|Volume of compartment C     |$undeclared$    |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= 2 * p1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is inconsisent with the value declared by the model definition.  \r\nThe value calculated by the initialAssignment should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$10$    |mole litre^-1^                      |\r\n|Initial concentration of S2                |$         0.15$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C             |$          0.47$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.47;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in one\r\ncompartment using an assignmentRule to assign value to a parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule, InitialAssignment \r\ntestTags:      Concentration, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to parameter k1:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | k1 | $0.75$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $k1 / 7.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  The initial\r\nvalue of species S1 is consisent with the value declared by the model definition.  \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$0.1$    |mole litre^-1^                      |\r\n|Initial concentration of S2                |$         0.15$ |mole litre^-1^                      |\r\n|Value of parameter k1               |$   undeclared$ |second^-1^ |\r\n|Volume of compartment C |$            6.6$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 6.6;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.133333333333333 * k1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.15;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { };\r\nk1 := 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event and one initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and three parameters called k1, k2 and p1.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$      |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S2       | $p1 * S1$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S2 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$undeclared$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Value of parameter p1         |$0.5$  |dimensionless                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= S1 * pow(p1, (-1));\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event and one initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and three parameters called k1, k2 and p1.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$      |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S2       | $p1 * S1$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S2 is inconsistent\r\nwith the value be calculated using the InitialAssignment; the calculated value\r\nshould be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$4.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Value of parameter p1         |$0.5$  |dimensionless                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= S1 * pow(p1, (-1));\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\n               and one event and one initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay, InitialAssignment \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and three parameters called k1, k2 and p1.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1$      |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S2       | $p1 * S1$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S2 is consistent\r\nwith the value calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2         |$0.25$  |second^-1^                |\r\n|Value of parameter p1         |$0.5$  |dimensionless                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= S1 * pow(p1, (-1));\r\nS2 [event1]= 1;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.5;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 / 100$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the parameter k1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial concentration of S1    |$1$              |mole litre^-1^   |\r\n|Initial concentration of S2    |$1.5$            |mole litre^-1^   |\r\n|Value of parameter k1   |$undeclared$     |second^-1^ |\r\n|Value of parameter k2   |$50$             |second^-1^ |\r\n|Volume of compartment C |$1$              |litre      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { } .= k2 * pow(100, (-1));\n\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 / 100$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for parameter k1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial concentration of S1        |$1$        |mole litre^-1^                      |\r\n|Initial concentration of S2        |$1.5$      |mole litre^-1^                      |\r\n|Value of parameter k1       |$100$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |second^-1^ |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Record 'k1' { } .= k2 * pow(100, (-1));\n\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n                             | C | $k2*(50^-1)$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial concentration of S1        |$1$        |mole litre^-1^                      |\r\n|Initial concentration of S2        |$1.5$      |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$5.4$      |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 * pow(50, (-1));\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | C | $k2 / (50^-1)$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for compartment C is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*  |*Units*  |\r\n|Initial concentration of S1        |$1$        |mole litre^-1^                      |\r\n|Initial concentration of S2        |$1.5$      |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.5$      |second^-1^ |\r\n|Value of parameter k2       |$50$       |litre |\r\n|Volume of compartment C     |$1$        |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 * pow(50, (-1));\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one\r\ncompartment using initialAssignment to set the initial value of the compartment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called k1 and k2.  The model contains one \r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k1 * S1$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n                             | C | $k2*(50^-1)$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment C has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*    |*Units*  |\r\n|Initial concentration of S1        |$1$          |mole litre^-1^                      |\r\n|Initial concentration of S2        |$1.5$        |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.5$        |second^-1^ |\r\n|Value of parameter k2       |$50$         |litre |\r\n|Volume of compartment C     |$undeclared$ |litre                     |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, } .= k2 * pow(50, (-1));\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 50;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial concentration of S1        |$1.0 \\x 10^-2$  |mole litre^-1^                      |\r\n|Initial concentration of S2        |$2.0 \\x 10^-2$  |mole litre^-1^                      |\r\n|Initial concentration of S3        |$1.0 \\x 10^-2$  |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-3$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.02;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.00125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial concentration of S1        |$0.25 \\x 10^-4$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$2.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Initial concentration of S3        |$1.0 \\x 10^-4$  |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-5$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.0000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\n  The model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width 30em,margin: 1em auto}| |*Value*        |*Units*  |\r\n|Initial concentration of S1        |$undeclared$     |mole litre^-1^                      |\r\n|Initial concentration of S2        |$2.0 \\x 10^-3$  |mole litre^-1^                      |\r\n|Initial concentration of S3        |$1.0 \\x 10^-3$  |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$0.25$           |second^-1^                |\r\n|Value of parameter p1       |$1.25 \\x 10^-4$ |mole                |\r\n|Volume of compartment C     |$1$              |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.002;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\np1 @Const 'p1' { } = 0.000125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in a compartment using \r\ninitialAssignment to set the initial value of one parameter.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment \r\ntestTags:      Concentration, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called k1, k2 and p1.  The model contains \r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k2 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the parameter k2 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$2.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$1.0 \\x 10^-1$ |mole litre^-1^                      |\r\n|Value of parameter k1       |$0.75$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2       |$undeclared$    |second^-1^                |\r\n|Value of parameter p1       |$0.125$         |second^-1^                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk2 @Record 'k2' { } .= 2 * p1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\np1 @Const 'p1' { } = 0.125;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Zeroth order mass action kinetics.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains  one reaction that has\r\na kinetic law that defines zero order mass action kinetics (as referenced by \r\nSBO:0000047):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter k       |$0.075$          |mole litre^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k;\n\r\nk @Const 'k' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      First order mass action kinetics.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains  one reaction that has\r\na kinetic law that defines first order mass action kinetics (as referenced by \r\nSBO:0000049):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter k       |$2.5$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k * S1;\n\r\nk @Const 'k' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      First order mass action kinetics with monoexponential decay.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains one reaction that has\r\na kinetic law that defines first order mass action kinetics with monoexponential\r\ndecay (as referenced by SBO:0000333):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $(S1 * C) / k$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter k       |$1.5$          |second|\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * S1 * pow(k, (-1));\n\r\nk @Const 'k' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Second order mass action kinetics with one reactant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains one reaction that has\r\na kinetic law that defines second order mass action kinetics with one reactant\r\n(as referenced by SBO:0000052):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter k       |$1.5$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k * pow(S1, 2);\n\r\nk @Const 'k' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Second order mass action kinetics with two reactants.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and one parameter called k.  The model contains one reaction that has\r\na kinetic law that defines second order mass action kinetics with two reactants\r\n(as referenced by SBO:0000054):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S2 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter k       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k * S1 * S2;\n\r\nk @Const 'k' { } = 1.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Third order mass action kinetics with one reactant.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and one parameter called k.  The model contains one reaction that has\r\na kinetic law that defines third order mass action kinetics with one reactant\r\n(as referenced by SBO:0000057):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k * S1 * S1 * S1 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter k       |$0.65$          |litre^2^ mole^-2^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k * pow(S1, 3);\n\r\nk @Const 'k' { } = 0.65;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Third order mass action kinetics with two reactants.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and one parameter called k.  The model contains one reaction that has\r\na kinetic law that defines third order mass action kinetics with two reactants\r\n(as referenced by SBO:0000054):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k * S1 * S1 * S2 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter k       |$1.1$          |litre^2^ mole^-2^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k * pow(S1, 2) * S2;\n\r\nk @Const 'k' { } = 1.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Third order mass action kinetics with three reactants.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and one parameter called k.  The model contains one reaction that has\r\na kinetic law that defines third order mass action kinetics with three reactants\r\n(as referenced by SBO:0000061):\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 + S3 -> S4 | $k * S1 * S2 * S3 * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0.75$ |mole                      |\r\n|Initial amount of S4        |$0$ |mole                      |\r\n|Value of parameter k       |$0.8$          |litre^2^ mole^-2^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.75 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 + S3 = S4, reversible: false, };\r\nreaction1 := C * k * S1 * S2 * S3;\n\r\nk @Const 'k' { } = 0.8;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$0.5$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$2.3$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$0.95$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.95;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$0$ |mole litre^-1^                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$0.5$             |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$0.5$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$0$ |mole litre^-1^                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$2.3$             |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$0.5$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$0$ |mole litre^-1^                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$0.95$             |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.95;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  Species S1 is labeled as an \r\nSBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S1 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S1 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  Species S2 is labeled as an \r\nSBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S3 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0.4$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 0.4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S2 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> 2S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + 2S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + 2*S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + 2S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + 2*S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with global and local parameters.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(kf * S3 - kr * S4) * C$  |]\r\n\r\nReaction S1 <-> S2 defines two local parameters kf and kr which have a\r\nscope local to the defining reaction and are different from the global parameters kf\r\nand kr used in the Reaction S3 <-> S4.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Value of local parameter kf       |$0.8$          |second^-1^ |\r\n|Value of local parameter kr       |$0.06$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf__reaction1_local * S1 + (-1) * kr__reaction1_local * S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, };\r\nreaction2 := C * (kf * S3 + (-1) * kr * S4);\n\r\nkf__reaction1_local @Const { } = 0.8;\r\nkr__reaction1_local @Const { } = 0.06;\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with local parameters.\r\ncomponentTags: Compartment, Species, Reaction \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2.  The model contains  two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(kf * S3 - kr * S4) * C$  |]\r\n\r\nBoth reactions define two local parameters kf and kr which have a\r\nscope local to the defining reaction.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of local parameter kf (R1)       |$0.8$          |second^-1^ |\r\n|Value of local parameter kr (R1)      |$0.06$          |second^-1^ |\r\n|Value of local parameter kf (R1)      |$0.9$          |second^-1^ |\r\n|Value of local parameter kr (R2)      |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf__reaction1_local * S1 + (-1) * kr__reaction1_local * S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, };\r\nreaction2 := C * (kf__reaction2_local * S3 + (-1) * kr__reaction2_local * S4);\n\r\nkf__reaction1_local @Const { } = 0.8;\r\nkr__reaction1_local @Const { } = 0.06;\r\nkf__reaction2_local @Const { } = 0.9;\r\nkr__reaction2_local @Const { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(multiply(kf, S1) - kr * S2) * C$  |]\r\n\r\nThe reaction applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.59$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (multiply(kf, S1) + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.59;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(multiply(multiply(kf, S1), S2) - kr * S3) * C$  |]\r\n\r\nThe reaction applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.11$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (multiply(multiply(kf, S1), S2) + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.11;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(minus(multiply(kf, S1), kr * S2 * S3)) * C$  |]\r\n\r\nThe reaction applies two functionDefinitions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |\r\n | minus | x, y      | $x - y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\nminus #defineFunction { arguments: [x, y], math: x + (-1) * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * minus(multiply(kf, S1), kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 1.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction with an initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment  \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called kf, kr and p1.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Value of parameter p1       |$0.5$           |mole                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction with an initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment  \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called kf, kr and p1.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Value of parameter p1       |$0.5$           |mole                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction with an initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment  \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called kf, kr and p1.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.   In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$undeclared$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Value of parameter p1       |$0.5$           |mole                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, };\r\nreaction1 := C * (kf * S1 * S2 + (-1) * kr * S3);\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which assigns value to parameter kf:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | kf | $2.5$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$undeclared$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Record 'kf' { };\r\nkf := 2.5;\n\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $0.5 * S1$  |]\r\n\r\nIn this case there is no initial value declared for species S4.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$undeclared$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := 0.5 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $0.5 * S1$  |]\r\n\r\nIn this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated using the assignmentRule.  The calculated value\r\nshould be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5 / C;\r\nS4 := 0.5 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which specifies the rate at which species \r\nS4 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $-0.5 * (kf * S1 - kr * S2 * S3)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$0.5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (-0.5) * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which specifies the rate at which species \r\nS4 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $-0.5 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$0.5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (-0.5) * S1;\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which specifies the rate at which species \r\nS4 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $0.15$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$0.5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2 + S3, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2 * S3);\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := 0.15;\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reversible reactions with two species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe model contains one event that assigns values to species S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |]\r\n \r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2         |$2.0$   |mole                      |\r\n|Value of parameter kf         |$0.9$  |second^-1^ |\r\n|Value of parameter kr         |$0.075$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with four species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species\r\ncalled S1, S2, S3 and S4 and four parameters called k1, k2, kf and kr.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(k1 * S3 - k2 * S4) * C$  |]\r\n\r\nThe model contains one event that assigns values to both species S2 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.5$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S4 = S2$     |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S4 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Initial amount of S4          |$1.5$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |second^-1^                |\r\n|Value of parameter k2         |$0.15$  |second^-1^                |\r\n|Value of parameter kf         |$0.9$  |second^-1^                |\r\n|Value of parameter kr         |$0.075$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 [event1]= S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, };\r\nreaction2 := C * (k1 * S3 + (-1) * k2 * S4);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.15;\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with four species in one compartment\r\n               and two events that assigns value to species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species\r\ncalled S1, S2, S3 and S4 and four parameters called k1, k2, kf and kr.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(k1 * S3 - k2 * S4) * C$  |]\r\n\r\nThe model contains two event that assigns values to species S2 and S4 respectively:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.5$  | $-$     | $S2 = 1.5$    |\r\n | Event2                      | $S3 < 0.75$ | $-$     | $S4 = 0.5$     |]\r\n \r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Initial amount of S4          |$1.5$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |second^-1^                |\r\n|Value of parameter k2         |$0.15$  |second^-1^                |\r\n|Value of parameter kf         |$0.9$  |second^-1^                |\r\n|Value of parameter kr         |$0.075$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 [event2]= 0.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, };\r\nreaction1 := C * (kf * S1 + (-1) * kr * S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S4, };\r\nreaction2 := C * (k1 * S3 + (-1) * k2 * S4);\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.15;\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * t$ |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C * s$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C * s$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C * s$     |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$2.0$  |mole                       |\r\n|Initial amount of S2                |$2.0$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$1.0$   |litre mole^-1^ second^-2^  |\r\n|Value of parameter k2               |$0.9$            |second^-2^                 |\r\n|Value of parameter k3               |$0.7$            |second^-2^                 |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time passed to a functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, CSymbolTime\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k1, S1, t) * C$ |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe reaction uses one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1 \\x 10^-1$  |mole           |\r\n|Initial amount of S2                |$0.1 \\x 10^-1$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.01 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * multiply(k1, S1, t);\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time passed to a functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, CSymbolTime\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * multiply(S1, C, time)$  |\r\n| S2 -> S3 | $k2 * multiply(S2, C, time)$  |\r\n| S3 -> S4 | $k3 * multiply(S3, C, time)$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y, z | $x * y * z$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y, z], math: x * y * z, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * multiply(S1, C, t);\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := k2 * multiply(S2, C, t);\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := k3 * multiply(S3, C, t);\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment\r\nusing csymbol time passed to a functionDefinition.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition, CSymbolTime\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C * s$  |\r\n| S3 -> S1 + S2 | $multiply(multiply(k2, S3), multiply(C, s))$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C * s$     |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$2.0$  |mole                       |\r\n|Initial amount of S2                |$2.0$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$1.0$   |litre mole^-1^ second^-2^  |\r\n|Value of parameter k2               |$0.9$            |second^-2^                 |\r\n|Value of parameter k3               |$0.7$            |second^-2^                 |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := multiply(multiply(k2, S3), multiply(C, t));\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime\r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * t$ |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-2^     |\r\n|Volume of compartment C |$0.57$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.57;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$2.45$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.45;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C * s$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C * s$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C * s$     |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$2.0$  |mole                       |\r\n|Initial amount of S2                |$2.0$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$1.0$   |litre mole^-1^ second^-2^  |\r\n|Value of parameter k2               |$0.9$            |second^-2^                 |\r\n|Value of parameter k3               |$0.7$            |second^-2^                 |\r\n|Volume of compartment C |$0.98$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.98;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * t$ |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial concentration of S1                |$1.5 \\x 10^-3$  |mole litre^-1^           |\r\n|Initial concentration of S2                |$0$              |mole litre^-1^           |\r\n|Value of parameter k1               |$1$              |second^-2^     |\r\n|Volume of compartment C |$0.9$              |litre          |]\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.9;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime\r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$1.0 \\x 10^-1$  |mole litre^-1^           |\r\n|Initial concentration of S2                |$0$              |mole litre^-1^           |\r\n|Initial concentration of S3                |$0$              |mole litre^-1^           |\r\n|Initial concentration of S4                |$0$              |mole litre^-1^           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1.78$              |litre          |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1.78;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime\r\ntestTags:      Concentration, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C * s$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C * s$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C * s$     |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial concentration of S1                |$2.0$  |mole litre^-1^                       |\r\n|Initial concentration of S2                |$2.0$  |mole litre^-1^                       |\r\n|Initial concentration of S3                |$0$              |mole litre^-1^                       |\r\n|Initial concentration of S4                |$0$              |mole litre^-1^                       |\r\n|Value of parameter k1               |$1.0$   |litre mole^-1^ second^-2^  |\r\n|Value of parameter k2               |$0.9$            |second^-2^                 |\r\n|Value of parameter k3               |$0.7$            |second^-2^                 |\r\n|Volume of compartment C |$0.002$              |litre                      |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.002;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  Species S1\r\nis labeled as an SBML boundary species.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * t$ |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 0.15 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.  \r\nSpecies S1 is labeled as an SBML boundary species.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.  \r\nSpecies S1 is labeled as an SBML boundary species.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C * s$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C * s$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C * s$     |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$2.0$  |mole                       |\r\n|Initial amount of S2                |$2.0$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$1.0$   |litre mole^-1^ second^-2^  |\r\n|Value of parameter k2               |$0.9$            |second^-2^                 |\r\n|Value of parameter k3               |$0.7$            |second^-2^                 |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 2 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  Species S2\r\nis labeled as an SBML boundary species.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * t$ |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime\r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.  \r\nSpecies S2 is labeled as an SBML boundary species.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.001 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.  \r\nSpecies S3 is labeled as an SBML boundary species.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C * s$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C * s$     |\r\n| S3 -> S1 + S4 | $k3 * S3 * C * s$     |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$2.0$  |mole                       |\r\n|Initial amount of S2                |$2.0$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$1.0$   |litre mole^-1^ second^-2^  |\r\n|Value of parameter k2               |$0.9$            |second^-2^                 |\r\n|Value of parameter k3               |$0.7$            |second^-2^                 |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0.9;\r\nk3 @Const 'k3' { } = 0.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      BoundaryCondition, Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and three parameters called k1, k2 and k3.  \r\nSpecies S3 is labeled as an SBML boundary species.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within an initialAssignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and p1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$ |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S2       | $p1 * S1 * time$  |]\r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nNote: SBML's InitialAssignment take effect at time t < 0 and continue to have effect \r\nup to and including time t = 0, overriding any initial values.  In this model, the \r\ninitial value for the species S1 has not been explicitly declared and must be \r\ncalculated using the InitialAssignment at time = 0. \r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$  |mole           |\r\n|Initial amount of S2                |$undeclared$     |mole           |\r\n|Value of parameter p1               |$-0.5$           |second^-1^     |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.0015 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= p1 * S1 * t;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\r\np1 @Const 'p1' { } = -0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within an initialAssignment.\r\ncomponentTags: Compartment, Species, CSymbolTime, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and two parameters called k1 and p1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$ |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S2       | $p1 * S1 * time$  |]\r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nNote: SBML's InitialAssignment take effect at time t < 0 and continue to have effect \r\nup to and including time t = 0, overriding any initial values.  In this model, the \r\ninitial value for the species S1 is inconsistent with the value calculated using \r\nthe InitialAssignment at time = 0; the calculated value should be used. \r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-2$  |mole           |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$     |mole           |\r\n|Value of parameter p1               |$-0.5$           |second^-1^     |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.015 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= p1 * S1 * t;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\r\np1 @Const 'p1' { } = -0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within an initialAssignment.\r\ncomponentTags: Compartment, Species, CSymbolTime, Reaction, Parameter, InitialAssignment \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |\r\n| S2 -> S3 | $k2 * S2 * C$  |\r\n| S3 -> S4 | $k3 * S3 * C$  |] \r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1       | $0.2 + k2* exp(t)$  |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nNote: SBML's InitialAssignment take effect at time t < 0 and continue to have effect \r\nup to and including time t = 0, overriding any initial values.  In this model, the \r\ninitial value for the parameter k1 has not been explicitly declared and must be \r\ncalculated using the InitialAssignment at time = 0. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$undeclared$     |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment 'C' { units: volume, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: substance/volume, compartment: C, } .= 1e-4 / C;\r\nS2 @Species 'S2' { units: substance/volume, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: substance/volume, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: substance/volume, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3;\n\r\nk1 @Record 'k1' { } .= k2 * exp(t) + 0.2;\r\nk2 @Record 'k2' { } .= 0.5;\r\nk3 @Record 'k3' { } .= 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule with csymbol time to vary one species.\r\ncomponentTags: Compartment, Species, CSymbolTime, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2 * t$  |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nIn this case the initial value for species S3 must be calculated by the\r\nassignmentRule.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$           5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-15 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, };\r\nS3 := k1 * S2 * t;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\ncompartment using an assignmentRule with csymbol time to vary one species.\r\ncomponentTags: Compartment, Species, CSymbolTime, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S and two parameters called k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $C * k2 * S1$  |]\r\n\r\nThe model contains one rule which assigns value to species S3:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3 | $k1 * S2 * t$  |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nIn this case the initial value for species S3 is inconsistent with the\r\nvalue calculated by the assignmentRule; the calculated value should be\r\nused.  Note that since this assignmentRule must always remain\r\ntrue, it should be considered during simulation.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$            1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-15$ |mole                      |\r\n|Initial amount of S3                |$   1$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$          2.5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 1.5e-15 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS3 := k1 * S2 * t;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2 * S1;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 2.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, ConstantSpecies, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nSpecies S1 is labeled as constant and a boundaryCondition and therefore \r\ncannot be changed.  The model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.4$            |second^-2^     |\r\n|Value of parameter k2               |$0.3$            |second^-2^     |\r\n|Value of parameter k3               |$0.2$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.4;\r\nk2 @Const 'k2' { } = 0.3;\r\nk3 @Const 'k3' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\nand one event that assigns value to a species using csymbol time.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and three parameters called k1, k2 and k3.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains one event that assigns a value to species S2:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.5$ | $-$   | $S2 = k3 * t$    |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$1$           |mole litre^-1^ second^-1^                |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= k3 * t;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 1;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with three species in one compartment\r\nand two events that assigns value to a species using csymbol time.\r\ncomponentTags: Compartment, Species, Reaction, CSymbolTime, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and three parameters called k1, k2 and k3.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$     |]\r\n\r\nThe model contains two events that assign values to species S2 and S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S1 < 0.75$ | $-$   | $S2 = k3 * s$    |\r\n | Event2 | $S3 > 1.4$ | $-$   | $S1 = 0.25 * s$    |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0$  |mole                      |\r\n|Initial amount of S2    |$2.0$  |mole                      |\r\n|Initial amount of S3    |$1.0$  |mole                      |\r\n|Value of parameter k1   |$0.75$           |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2   |$0.25$           |second^-1^                |\r\n|Value of parameter k3   |$4$           |mole litre^-1^ second^-1^                |\r\n|Volume of compartment C |$1$              |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS1 [event2]= 0.25 * t;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= k3 * t;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\r\nk3 @Const 'k3' { } = 4;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 > 1.4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in one compartment\r\nand an event that assigns value to two species using csymbol time.\r\ncomponentTags: Compartment, Species, Reaction, CSymbolTime, Parameter, EventNoDelay \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four species called\r\nS1, S2, S3 and S4 and four parameters called k1, k2, k3 and k4.  The model contains\r\ntwo reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2 * C$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4 * C$  |]\r\n\r\nThe model contains one event that assigns values to both species S1 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $S2 > S3$ | $-$   | $S1 -> k3 * time$    |]\r\n |  |  |   | $S4 -> k4 * S1 * time$    |]\r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1    |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S2    |$1.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S3    |$2.0 \\x 10^-2$  |mole                       |\r\n|Initial amount of S4    |$1.0 \\x 10^-2$  |mole                       |\r\n|Value of parameter k1   |$0.075 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k2   |$0.25 \\x 10^2$  |litre mole^-1^ second^-1^  |\r\n|Value of parameter k3   |$2 \\x 10^-2$  |mole litre^-1^ second^-1^  |\r\n|Value of parameter k4   |$2 \\x 10^-2$  |second^-1^  |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS1 [event1]= k3 * t;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.012 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0.02 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS4 [event1]= k4 * S1 * t;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 25;\r\nk3 @Const 'k3' { } = 0.02;\r\nk4 @Const 'k4' { } = 0.02;\n\r\nevent1 @DSwitcher 'event1' { trigger: S2 > S3, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a compartment\r\nwhere rate rule uses csymbol time. \r\ncomponentTags: Compartment, Species, CSymbolTime, Reaction, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are three\r\nspecies called S1, S2 and S3 and one parameter called k1.  The model contains\r\none reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $0.15 / exp(time)$  |]\r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Initial amount of S3                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 1.5 * pow(exp(t), (-1));\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a compartment\r\nwhere rate rule uses csymbol time. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime, RateRule\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C$  |\r\n| S3 -> S1 + S2 | $k2 * S3 * C$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-5 * t$  |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-4$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^4$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-2$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2e-4 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5e-4 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1e-4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := t * pow(1e+5, (-1));\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 0.0025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a compartment\r\nwhere rate rule uses csymbol time. \r\ncomponentTags: Compartment, Species, Reaction, CSymbolTime, Parameter, RateRule \r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and two parameters called k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$  |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1  *  0.5 * abs(1 - s)$  |\r\n | Rate | S4 | $-k2  *  0.5$  |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.5$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Initial amount of S4                |$            4$ |mole                      |\r\n|Value of parameter k1               |$         0.75$ |second^-1^ |\r\n|Value of parameter k2               |$         0.25$ |second^-1^ |\r\n|Volume of compartment C |$            1$ |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 0.5 * k1 * abs(1 + (-1) * t);\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-0.5) * k2;\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only, with csymbol time.\r\ncomponentTags: Parameter, RateRule, CSymbolTime\r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called k1 and k2 and one constant\r\nparameter called k3.  \r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate                                 | k1           | $-k1 * k3 * t$  |\r\n | Rate                                 | k2           | $k1 * k3 * t$   |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*    |\r\n|Value of parameter k1         |$1.5 \\x 10^-4$ |any        |\r\n|Value of parameter k2         |$            0$ |same as k1 |\r\n|Value of parameter k3         |$            1$ |second^-2^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nk1_proc @Process { actors:  = k1, aux: {metaid: \"rule1\"}, };\r\nk1_proc := (-1) * k1 * k3 * t;\r\nk2_proc @Process { actors:  = k2, aux: {metaid: \"rule2\"}, };\r\nk2_proc := k1 * k3 * t;\n\r\nk1 @Record 'k1' { } .= 1.5e-4;\r\nk2 @Record 'k2' { } .= 0;\n\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model using parameters and rules only, with csymbol time.\r\ncomponentTags: Parameter, RateRule, CSymbolTime\r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains two varying parameters called P1 and P2 and two constant\r\nparameters called k1 and k2.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | P1           | $P2 * k2 / exp(time)$  |\r\n | Rate                                 | P2           | $P1 * k1 / exp(time)$  |]\r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Value of parameter P1         |$1.5 \\x 10^-15$ |any        |\r\n|Value of parameter P2         |$            0$ |same as P1 |\r\n|Value of parameter k1         |$            1$ |second^-1^ |\r\n|Value of parameter k2         |$          0.75$ |second^-1^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nP1_proc @Process { actors:  = P1, aux: {metaid: \"rule1\"}, };\r\nP1_proc := pow(e, (-1) * t) * k2 * P2;\r\nP2_proc @Process { actors:  = P2, aux: {metaid: \"rule2\"}, };\r\nP2_proc := pow(e, (-1) * t) * k1 * P1;\n\r\nP1 @Record 'P1' { } .= 1.5;\r\nP2 @Record 'P2' { } .= 0;\n\r\nk1 @Const 'k1' { } = 1;\r\nk2 @Const 'k2' { } = 0.75;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and rules only, with csymbol time.\r\ncomponentTags: Parameter, RateRule, CSymbolTime\r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains three varying parameters called P1, P2 and P3 and one\r\nconstant parameter called k1.\r\n \r\nThe model contains three rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | P3       | $k1 * s$  |\r\n | Rate | P1       | $-(P3 * P1)$  |\r\n | Rate | P2       | $P3 * P1$  |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter P1 |$1.5 \\x 10^-3$ |any |\r\n|Value of parameter P2 |$            0$ |same as P1 |\r\n|Value of parameter P3 |$  1 \\x 10^-3$ |second^-1^ |\r\n|Value of parameter k1 |$  0.5$ |second^-3^ |]\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nP3_proc @Process { actors:  = P3, aux: {metaid: \"rule1\"}, };\r\nP3_proc := k1 * t;\r\nP1_proc @Process { actors:  = P1, aux: {metaid: \"rule2\"}, };\r\nP1_proc := (-1) * P1 * P3;\r\nP2_proc @Process { actors:  = P2, aux: {metaid: \"rule3\"}, };\r\nP2_proc := P1 * P3;\n\r\nP1 @Record 'P1' { } .= 0.0015;\r\nP2 @Record 'P2' { } .= 0;\r\nP3 @Record 'P3' { } .= 0.001;\n\r\nk1 @Const 'k1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called C.  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> 2S2 | $k1 * S1 * C * t$ |]\r\nwhere the symbol 't' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.15 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = 2*S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C * time$  |\r\n| 2S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k3 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k1               |$0.7$            |second^-2^     |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of parameter k3               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0.01 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: 2*S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k3 * S3 * t;\n\r\nk1 @Const 'k1' { } = 0.7;\r\nk2 @Const 'k2' { } = 0.5;\r\nk3 @Const 'k3' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three reactions with four species in one compartment\r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime \r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and one parameter called k1.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2 * C * s$  |\r\n| S3 -> S1 + S2 | $k1 * S3 * C * s$     |\r\n| S3 -> S1 + S4 | $k1 * S3 * C * s$     |]\r\nwhere the symbol 's' denotes the current simulation time.\r\n\r\nBoth reactions S3 -> S1 + S2 and S3 -> S1 + S4 define a local parameters k1 which has a\r\nscope local to the defining reaction and are different from each other and the global parameter k1\r\nused in the reaction S1 + S2 -> S3.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$2.0$  |mole                       |\r\n|Initial amount of S2                |$2.0$  |mole                       |\r\n|Initial amount of S3                |$0$              |mole                       |\r\n|Initial amount of S4                |$0$              |mole                       |\r\n|Value of parameter k1               |$1.0$   |litre mole^-1^ second^-2^  |\r\n|Value of local parameter k1 (R2)               |$0.9$            |second^-2^                 |\r\n|Value of local parameter k1 (R3)               |$0.7$            |second^-2^                 |\r\n|Volume of compartment C |$1$              |litre                      |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := C * k1 * S1 * S2 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := C * k1__reaction2_local * S3 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S1 + S4, reversible: false, };\r\nreaction3 := C * k1__reaction3_local * S3 * t;\n\r\nk1__reaction2_local @Const { } = 0.9;\r\nk1__reaction3_local @Const { } = 0.7;\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Linear chain of reactions in one compartment \r\nusing csymbol time within a math expression.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, CSymbolTime\r\ntestTags:      Amount, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There are four\r\nspecies called S1, S2, S3 and S4 and one parameter called k2.\r\nThe model contains three reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k2 * S1 * C * time$  |\r\n| S2 -> S3 | $k2 * S2 * C * time$  |\r\n| S3 -> S4 | $k2 * S3 * C * time$  |] \r\nwhere the symbol 'time' denotes the current simulation time.\r\n\r\nBoth reactions S1 -> S2 and S3 -> S4 define a local parameters k2 which has a\r\nscope local to the defining reaction and are different from each other and the \r\nglobal parameter k2 used in the reaction S2 -> S3.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S3                |$0$              |mole           |\r\n|Initial amount of S4                |$0$              |mole           |\r\n|Value of parameter k2               |$0.5$            |second^-2^     |\r\n|Value of local parameter k2 (R1)               |$0.7$            |second^-2^     |\r\n|Value of local parameter k2 (R3)               |$1$              |second^-2^     |\r\n|Volume of compartment C |$1$              |litre          |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k2__reaction1_local * S1 * t;\r\nreaction2 @Reaction 'reaction2' { actors: S2 = S3, reversible: false, };\r\nreaction2 := C * k2 * S2 * t;\r\nreaction3 @Reaction 'reaction3' { actors: S3 = S4, reversible: false, };\r\nreaction3 := C * k2__reaction3_local * S3 * t;\n\r\nk2__reaction1_local @Const { } = 0.7;\r\nk2__reaction3_local @Const { } = 1;\r\nk2 @Const 'k2' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, Parameter, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying compartment called c and one constant\r\nparameter called k1.  (Note that indeed c is a compartment and not \r\nspecies in this model.)\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate                                 | c           | $-c * k1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*    |\r\n|Size of compartment c         |$            5$ |litre        |\r\n|Value of parameter k1         |$            1$ |second^-1^ |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: litre, } .= 5;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := (-1) * c * k1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying compartment called c.  (Note that \r\nindeed c is a compartment and not species in this model.)\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.5 * c$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$1.5 \\x 10^-2$ |litre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: litre, } .= 0.015;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.5 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, MultiCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two varying compartments called C1 and C2.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C1       | $C2 * 0.5 - C1 * 0.2$  |\r\n | Rate | C2       | $C1 * 0.75-C2 * 2.1$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*   |*Units*  |\r\n|Size of compartment C1        |$1.5$     |litre        |\r\n|Size of compartment C2        |$1.5$     |litre |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC1 @Compartment 'C1' { units: litre, } .= 1.5;\r\nC2 @Compartment 'C2' { units: litre, } .= 1.5;\n\r\nC1_proc @Process { actors:  = C1, aux: {metaid: \"rule1\"}, };\r\nC1_proc := 0.5 * C2 - (0.2 * C1);\r\nC2_proc @Process { actors:  = C2, aux: {metaid: \"rule2\"}, };\r\nC2_proc := 0.75 * C1 - (2.1 * C2);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 2-dimensional compartment called c.  \r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.25 * c$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$3.2$ |metre^2        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre^2, } .= 3.2;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.25 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 1-dimensional compartment called c.  \r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.1 * c$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$1.5 \\x 10^-4$ |metre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre, } .= 1.5e-4;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.1 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, Parameter, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 2-dimensional compartment called c and one constant\r\nparameter called k1.  (Note that indeed c is a compartment and not \r\nspecies in this model.)\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate                                 | c           | $-c * k1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*    |\r\n|Size of compartment c         |$            0.002$ |metre^2^        |\r\n|Value of parameter k1         |$            1.1$ |second^-1^ |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre^2, } .= 0.002;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := (-1) * c * k1;\n\r\nk1 @Const 'k1' { } = 1.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, Parameter, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 1-dimensional compartment called c and one constant\r\nparameter called k1.  (Note that indeed c is a compartment and not \r\nspecies in this model.)\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate                                 | c           | $-c / k1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*    |\r\n|Size of compartment c         |$            22.5$ |metre        |\r\n|Value of parameter k1         |$            0.175$ |second |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre, } .= 22.5;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := (-1) * c / k1;\n\r\nk1 @Const 'k1' { } = 0.175;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, MultiCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two varying compartments called C1 and C2, where C2 \r\nis 2-dimensional.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C1       | $C2 * 0.15 - C1 * 0.2$  |\r\n | Rate | C2       | $C1 * 0.3 - C2 * 0.1$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*   |*Units*  |\r\n|Size of compartment C1        |$1.5$     |litre        |\r\n|Size of compartment C2        |$0.75$     |metre^2^ |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC1 @Compartment 'C1' { units: litre, } .= 1.5;\r\nC2 @Compartment 'C2' { units: metre^2, } .= 0.75;\n\r\nC1_proc @Process { actors:  = C1, aux: {metaid: \"rule1\"}, };\r\nC1_proc := 0.15 * C2 - (0.2 * C1);\r\nC2_proc @Process { actors:  = C2, aux: {metaid: \"rule2\"}, };\r\nC2_proc := 0.3 * C1 - (0.1 * C2);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, MultiCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two varying compartments called C1 and C2, where C2 \r\nis 1-dimensional.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C1       | $C2 * 0.25 + C1 * 0.4$  |\r\n | Rate | C2       | $C1 * 0.15 + C2 * 0.2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*   |*Units*  |\r\n|Size of compartment C1        |$1.5 x 10^-2^$     |litre        |\r\n|Size of compartment C2        |$1.0 x 10^-2^$     |metre |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC1 @Compartment 'C1' { units: litre, } .= 0.015;\r\nC2 @Compartment 'C2' { units: metre, } .= 0.01;\n\r\nC1_proc @Process { actors:  = C1, aux: {metaid: \"rule1\"}, };\r\nC1_proc := 0.4 * C1 + 0.25 * C2;\r\nC2_proc @Process { actors:  = C2, aux: {metaid: \"rule2\"}, };\r\nC2_proc := 0.15 * C1 + 0.2 * C2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, MultiCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two varying compartments called C1 and C2, where C1 \r\nis 1-dimensional and C2 is 2-dimensional.\r\n\r\nThe model contains two rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | C1       | $C2 * 0.5 + C1 * 0.3$  |\r\n | Rate | C2       | $C1 * 0.1 + C2 * 0.2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*   |*Units*  |\r\n|Size of compartment C1        |$1.5 x 10^-2^$     |metre        |\r\n|Size of compartment C2        |$1.0 x 10^-2^$     |metre^2^ |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC1 @Compartment 'C1' { units: metre, } .= 0.015;\r\nC2 @Compartment 'C2' { units: metre^2, } .= 0.01;\n\r\nC1_proc @Process { actors:  = C1, aux: {metaid: \"rule1\"}, };\r\nC1_proc := 0.3 * C1 + 0.5 * C2;\r\nC2_proc @Process { actors:  = C2, aux: {metaid: \"rule2\"}, };\r\nC2_proc := 0.1 * C1 + 0.2 * C2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, FunctionDefinition \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $multiply(0.5, c)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$1.5$ |litre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: litre, } .= 1.5;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := multiply(c, 0.5);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, InitialAssignment \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.25 * c$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | c       | $3 / 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment c has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$undeclared$ |litre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: litre, } .= 3 / 2;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.25 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, InitialAssignment \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.25 * c$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | c       | $3 / 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment c is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$2$ |litre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: litre, } .= 3 / 2;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.25 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, FunctionDefinition \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 2-dimensional compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $multiply(0.5, c)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$0.5$ |metre^2^        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre^2, } .= 0.5;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := multiply(c, 0.5);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, FunctionDefinition \r\ntestTags:      NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 1-dimensional compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $multiply(0.15, c)$  |]\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$0.5$ |metre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre, } .= 0.5;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := multiply(c, 0.15);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, InitialAssignment \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 2-dimensional compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.5 * c$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | c       | $3 / 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment c has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$undeclared$ |metre^2^        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre^2, } .= 2 / 3;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.5 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, InitialAssignment \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 1-dimensional compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.5 * c$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | c       | $3 / 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment c has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$undeclared$ |metre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre, } .= 2.2 / 3;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.5 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, InitialAssignment \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 2-dimensional compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $1.25 * c$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | c       | $3 / 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment c is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$2$ |metre^2^        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre^2, } .= 3.3 / 2;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 1.25 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, RateRule, InitialAssignment \r\ntestTags:      NonConstantCompartment, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying 1-dimensional compartment called c.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $1.25 * c$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | c       | $3 / 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this model, the initial value for the compartment c is\r\ninconsistent with the value returned by the InitialAssignment.\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Size of compartment c         |$2$ |metre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: metre, } .= 2.1 / 4;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 1.25 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and initialAssignments only.\r\ncomponentTags: Parameter, InitialAssignment \r\ntestTags:      InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two constant\r\nparameters called k1 and k2.\r\n\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 * 2.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this\r\ncase, the initial value of k1 has not been explicitly declared and must be\r\ncalculated using the initialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter k1 |$   undeclared$ |any |\r\n|Value of parameter k2 |$0.3$ |same as k1 |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nk1 @Record 'k1' { } .= 2.5 * k2;\r\nk2 @Record 'k2' { } .= 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and initialAssignments only.\r\ncomponentTags: Parameter, InitialAssignment \r\ntestTags:      InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two constant\r\nparameters called k1 and k2.\r\n\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 * 1.5$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this\r\ncase, the initial value of k1 is inconsistent with the value \r\ncalculated using the initialAssignment.  The calculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter k1 |$   0.5$ |any |\r\n|Value of parameter k2 |$0.3$ |same as k1 |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nk1 @Const 'k1' { } = 0.5;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and initialAssignments only.\r\ncomponentTags: Parameter, InitialAssignment \r\ntestTags:      \r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two constant\r\nparameters called k1 and k2.\r\n\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | k1 | $k2 * 2.0$  |]\r\n\r\nNote: InitialAssignments override any declared initial values.  In this\r\ncase, the initial value of k1 is consistent with the value \r\ncalculated using the initialAssignment. \r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter k1 |$   0.6$ |any |\r\n|Value of parameter k2 |$0.3$ |same as k1 |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nk1 @Const 'k1' { } = 0.6;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and assignmentRule only.\r\ncomponentTags: Parameter, AssignmentRule \r\ntestTags:      InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two constant\r\nparameters called k1 and k2.\r\n\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| assignmentRule | k1 | $k2 * 4$  |]\r\n\r\n\r\nNote: AssignmentRules override any declared initial values.  In this\r\ncase, the initial value of k1 has not been explicitly declared and must be\r\ncalculated using the AssignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter k1 |$   undeclared$ |any |\r\n|Value of parameter k2 |$0.3$ |same as k1 |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nk1 @Record 'k1' { };\r\nk1 := 4 * k2;\n\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and assignmentRule only.\r\ncomponentTags: Parameter, AssignmentRule \r\ntestTags:      InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two constant\r\nparameters called k1 and k2.\r\n\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| assignmentRule | k1 | $k2 * 3$  |]\r\n\r\n\r\nNote: AssignmentRules override any declared initial values.  In this\r\ncase, the initial value of k1 is inconsistent with the value \r\ncalculated using the assignmentRule.  The calculated value should be used.\r\n.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter k1 |$   1.0$ |any |\r\n|Value of parameter k2 |$0.3$ |same as k1 |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nk1 @Record 'k1' { } .= 1;\r\nk1 := 3 * k2;\n\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model with parameters and assignmentRule only.\r\ncomponentTags: Parameter, AssignmentRule \r\ntestTags:      \r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two constant\r\nparameters called k1 and k2.\r\n\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| assignmentRule | k1 | $k2 * 3$  |]\r\n\r\n\r\nNote: AssignmentRules override any declared initial values.  In this\r\ncase, the initial value of k1 is consistent with the value \r\ncalculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Value of parameter k1 |$   0.6$ |any |\r\n|Value of parameter k2 |$0.2$ |same as k1 |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nk1 @Record 'k1' { } .= 0.6;\r\nk1 := 3 * k2;\n\r\nk2 @Const 'k2' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, Species, RateRule \r\ntestTags:      Concentration, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying compartment called c and a species\r\ns.  The species is not directly affected by anything but the concentration\r\nwill change as a result of the varying compartment size.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.5 * c$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of s    |$2$  |mole litre^-1          |\r\n|Size of compartment c         |$1$ |litre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: litre, } .= 1;\n\r\ns @Species 's' { units: mole/litre, compartment: c, } .= 2;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.5 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Model varying compartment using rules only.\r\ncomponentTags: Compartment, Species, RateRule \r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one varying compartment called c and a species\r\ns.  The species is not directly affected by anything but the concentration\r\nwill change as a result of the varying compartment size.  However the\r\namount of the species will remain constant.\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*         |\r\n | Rate                                 | c           | $0.5 * c$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*         |*Units*  |\r\n|Initial concentration of s    |$2$  |mole          |\r\n|Size of compartment c         |$1$ |litre        |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nc @Compartment 'c' { units: litre, } .= 1;\n\r\ns @Species 's' { units: mole/litre, compartment: c, } .= 2 / c;\n\r\nc_proc @Process { actors:  = c, aux: {metaid: \"rule1\"}, };\r\nc_proc := 0.5 * c;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single forward reaction with two species in one compartment and an event\r\ncomponentTags: Compartment, CSymbolTime, Species, Reaction, Parameter, EventNoDelay\r\ntestTags:      Amount, EventT0Firing\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"C\".  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$ |]\r\n\r\nThe model contains one event that assigns value to species S1 defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $t >= 0$ | $-$   | $S1 = 1.5 \\x 10^-4$    |]\r\n \r\nThe initialValue of the Trigger is set to 'false'.  Thus at t = 0 the Trigger\r\ntransitions from 'false' to 'true' and thus the event is fired.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$0$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Volume of compartment \"C\" |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS1 [evt0]= 1.5e-4 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\nevt0 @DSwitcher { trigger: t >= 0, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single forward reaction with two species in one compartment and an event\r\ncomponentTags: Compartment, CSymbolTime, Species, Reaction, Parameter, EventNoDelay\r\ntestTags:      Amount, EventT0Firing\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"C\".  There are two\r\nspecies called S1 and S2 and one parameter called k1.  The model contains\r\none reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1 * C$ |]\r\n\r\nThe model contains one event that assigns value to species S1 defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Delay* | *Assignments* |\r\n | Event1 | $t >= 0$ | $-$   | $S1 = 1$    |]\r\n \r\nThe initialValue of the Trigger is set to 'true'.  Thus at t = 0 the Trigger\r\ndoes not transition from 'false' to 'true' and thus the event is not fired.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$1.5 \\x 10^-4$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Value of parameter k1               |$1$              |second^-1^     |\r\n|Volume of compartment \"C\" |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1.5e-4 / C;\r\nS1 [evt0]= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := C * k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\nevt0 @DSwitcher { trigger: t >= 0, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single forward reaction with two species in one compartment and an event\r\ncomponentTags: Compartment, CSymbolTime, Species, EventNoDelay, EventPriority\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"C\".  There are two\r\nspecies called S1 and S2. \r\n\r\n\r\nThe model contains two events that assign value to species S1, S2 and S3 defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Priority* | *Delay* | *Assignments* |\r\n | Event1 | $t >= 0.99$ | $1$  | $-$   | $S1 = 4$    |\r\n |        |          |      |       | $S2 = 5$    |\r\n |        |          |      |       | $S3 = 6$    |\r\n | Event2 | $t >= 0.99$ | $0$  | $-$   | $S1 = 1$    |\r\n |        |          |      |       | $S2 = 2$    |\r\n |        |          |      |       | $S3 = 3$    |]\r\n \r\nThe Events will fire simultaneously and must be executed in order determined by\r\nthe Priority. Thus the assignments of Event1 will be executed followed by the \r\nassignments for Event2.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$0$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Volume of compartment \"C\" |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0 / C;\r\nS1 [_E0]= 4;\r\nS1 [_E1]= 1;\r\nS2 @Species { compartment: C, } .= 0 / C;\r\nS2 [_E0]= 5;\r\nS2 [_E1]= 2;\r\nS3 @Species { compartment: C, } .= 0 / C;\r\nS3 [_E0]= 6;\r\nS3 [_E1]= 3;\n\r\n_E0 @DSwitcher { trigger: t >= 0.99, };\r\n_E1 @DSwitcher { trigger: t >= 0.99, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single forward reaction with two species in one compartment and an event\r\ncomponentTags: Compartment, CSymbolTime, Species, EventNoDelay, EventPriority\r\ntestTags:      Amount\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one compartment called \"C\".  There are two\r\nspecies called S1 and S2. \r\n\r\n\r\nThe model contains two events that assign value to species S1, S2 and S3 defined as:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*    | *Priority* | *Delay* | *Assignments* |\r\n | Event1 | $t >= 1$ | $-1$  | $-$   | $S1 = 4$    |\r\n |        |          |      |       | $S2 = 5$    |\r\n |        |          |      |       | $S3 = 6$    |\r\n | Event2 | $t >= 1$ | $0$  | $-$   | $S1 = 1$    |\r\n |        |          |      |       | $S2 = 2$    |\r\n |        |          |      |       | $S3 = 3$    |]\r\n \r\nThe Events will fire simultaneously and must be executed in order determined by\r\nthe Priority. Thus the assignments of Event2 will be executed followed by the \r\nassignments for Event1.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*          |*Units*        |\r\n|Initial amount of S1                |$0$  |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Initial amount of S2                |$0$              |mole           |\r\n|Volume of compartment \"C\" |$1$              |litre          |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but (as\r\nper usual SBML principles) their symbols represent their values in\r\nconcentration units where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0 / C;\r\nS1 [_E0]= 4;\r\nS1 [_E1]= 1;\r\nS2 @Species { compartment: C, } .= 0 / C;\r\nS2 [_E0]= 5;\r\nS2 [_E1]= 2;\r\nS3 @Species { compartment: C, } .= 0 / C;\r\nS3 [_E0]= 6;\r\nS3 [_E1]= 3;\n\r\n_E0 @DSwitcher { trigger: t >= 0.99, };\r\n_E1 @DSwitcher { trigger: t >= 0.99, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single forward reaction with two species in one compartment and an event\r\ncomponentTags: CSymbolTime, Compartment, EventNoDelay, EventPriority, Species\r\ntestTags:      Amount, EventIsPersistent\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe Events will execute simultaneously and must be executed in order determined by\r\nthe Priority. Since the priority of all remaining events must be re-calculated\r\nafter each event is executed, the order in which the events execute changes after\r\nEvent1.\r\n\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 compartment (C)\r\n\r\nThere are 3 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| A | $time &geq; 0.99$ | $10$ | $S1 = 1$ |\r\n|  |  |  | $S2 = 0$ |\r\n| B | $time &geq; 0.99$ | $2 * S2$ | $S1 = 2$ |\r\n|  |  |  | $S2 = 1$ |\r\n| C1 | $time &geq; 0.99$ | $2 * S1$ | $S1 = 3$ |\r\n|  |  |  | $S2 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $0$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0 / C;\r\nS1 [A]= 1;\r\nS1 [B]= 2;\r\nS1 [C1]= 3;\r\nS2 @Species { compartment: C, } .= 1 / C;\r\nS2 [A]= 0;\r\nS2 [B]= 1;\r\nS2 [C1]= 2;\n\r\nA @DSwitcher { trigger: t >= 0.99, };\r\nB @DSwitcher { trigger: t >= 0.99, };\r\nC1 @DSwitcher { trigger: t >= 0.99, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single forward reaction with two species in one compartment and three events\r\ncomponentTags: CSymbolTime, Compartment, EventNoDelay, EventPriority, Species\r\ntestTags:      Amount, EventIsNotPersistent, EventIsPersistent\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains three events that assign value to species S1 and S2 defined below.\r\n\r\nThe events will execute simultaneously and must be executed in order determined by\r\nthe Priority. However, since Event2 is not persistent, the execution of Event1\r\ncauses the Trigger of Event2 to return to 'false'. It must therefore be removed\r\nfrom the list of pending events.\r\n\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 compartment (C)\r\n\r\nThere are 3 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| A | $and(geq(time, 0.99), lt(S1, 0.5))$ | $10$ | true | $S1 = 1$ |\r\n|  |  |  |  | $S2 = 0$ |\r\n| B | $and(geq(time, 0.99), lt(S1, 0.5))$ | $8$ | false | $S1 = 2$ |\r\n|  |  |  |  | $S2 = 1$ |\r\n| C1 | $and(geq(time, 0.99), lt(S1, 0.5))$ | $9$ | true | $S1 = 3$ |\r\n|  |  |  |  | $S2 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $0$ | variable |\r\n| Initial amount of species S2 | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0 / C;\r\nS1 [A]= 1;\r\nS1 [B]= 2;\r\nS1 [C1]= 3;\r\nS2 @Species { compartment: C, } .= 1 / C;\r\nS2 [A]= 0;\r\nS2 [B]= 1;\r\nS2 [C1]= 2;\n\r\nA @DSwitcher { trigger: t >= 0.99 and S1 < 0.5, };\r\nB @DSwitcher { trigger: t >= 0.99 and S1 < 0.5, };\r\nC1 @DSwitcher { trigger: t >= 0.99 and S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic one reaction with one species in one compartment and one event, assigning to a parameter.\r\ncomponentTags: Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:      Amount, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThis model tests when an event changes a parameter involved in a kinetic law.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $C * k1 / S1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| event1 | $S1 > 2.1$ | $k1 = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial value of parameter k1 | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction { actors:  = S1, reversible: false, };\r\nreaction1 := (C * k1) / S1;\n\r\nk1 @Record { } .= 1;\r\nk1 [event1]= 10;\n\r\nevent1 @DSwitcher { trigger: S1 > 2.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic one reaction with one species in one compartment and one event that changes the size of the compartment.\r\ncomponentTags: Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:      Amount, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThis model tests that a reaction behaves properly when a compartment size is changed by an event.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $C * k1 / S1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| event1 | $S1 > 2.1$ | $C = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { } .= 1;\r\nC [event1]= 10;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction { actors:  = S1, reversible: false, };\r\nreaction1 := (C * k1) / S1;\n\r\nk1 @Const { } = 1;\n\r\nevent1 @DSwitcher { trigger: S1 > 2.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic one reaction with one species in one compartment and one event, assigning to a parameter.\r\ncomponentTags: AssignmentRule, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:      Amount, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There is one species called S1 and two parameters, k1 and fakeC.  It is identical in design and expected output to model 00945, except that instead of the event assigning to a compartment directly, it assigns to a temporary variable 'fakeC' which is then assigned to compartment C through an assignment rule.\r\n\r\nThe model contains one reaction defined as:\r\n\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 2 parameters (fakeC, k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $C * k1 / S1$ |]\r\n\r\n\r\nThe model contains one event that assigns a value to the temporary parameter fakeC:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| event1 | $S1 > 2.1$ | $fakeC = 10$ |]\r\n\r\n\r\nAnd the model contains one assignment rule that assigns the value of fakeC to compartment C:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | C | $fakeC$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial value of parameter fakeC | $1$ | variable |\r\n| Initial volume of compartment 'C' | $fakeC$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { };\r\nC := fakeC;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction { actors:  = S1, reversible: false, };\r\nreaction1 := (C * k1) / S1;\n\r\nfakeC @Record { } .= 1;\r\nfakeC [event1]= 10;\n\r\nk1 @Const { } = 1;\n\r\nevent1 @DSwitcher { trigger: S1 > 2.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic one reaction with one species in one compartment and one event, assigning to a parameter.\r\ncomponentTags: Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:      Concentration, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nTest of an event changing the size of a compartment.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $C * k1 / S1$ |]\r\n\r\n\r\nThe model contains one event that assigns a value to the compartment C:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| event1 | $S1 > 2.1$ | $C = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { } .= 1;\r\nC [event1]= 10;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction { actors:  = S1, reversible: false, };\r\nreaction1 := (C * k1) / S1;\n\r\nk1 @Const { } = 1;\n\r\nevent1 @DSwitcher { trigger: S1 > 2.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic one reaction with one species in one compartment and one event, assigning to a parameter.\r\ncomponentTags: AssignmentRule, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:      Concentration, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe model contains one compartment called C.  There is one species called S1 and two parameters, k1 and fakeC.  It is identical in design and expected output to model 00945, except that instead of the event assigning to a compartment directly, it assigns to a temporary variable 'fakeC' which is then assigned to compartment C through an assignment rule.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 2 parameters (fakeC, k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $C * k1 / S1$ |]\r\n\r\n\r\nThe model contains one event that assigns a value to the temporary parameter fakeC:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| event1 | $S1 > 2.1$ | $fakeC = 10$ |]\r\n\r\n\r\nAnd the model contains one assignment rule that assigns the value of fakeC to compartment C:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | C | $fakeC$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial value of parameter fakeC | $1$ | variable |\r\n| Initial volume of compartment 'C' | $fakeC$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { };\r\nC := fakeC;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\n\r\nreaction1 @Reaction { actors:  = S1, reversible: false, };\r\nreaction1 := (C * k1) / S1;\n\r\nfakeC @Record { } .= 1;\r\nfakeC [event1]= 10;\n\r\nk1 @Const { } = 1;\n\r\nevent1 @DSwitcher { trigger: S1 > 2.1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One constant parameter.\r\ncomponentTags: Parameter\r\ntestTags:      \r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains one parameter P. It doesn't change.\r\n\r\nThere are no rules, reactions or events.\r\n\r\nThe model contains:\r\n* 1 parameter (P)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P | $3.7$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP @Const { } = 3.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three constant parameters, with initialassignments to inf, -inf, and nan.\r\ncomponentTags: InitialAssignment, Parameter\r\ntestTags:      InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n This model tests the 'INF' and 'NaN' constructs with initial assignments.\r\n\r\nThe model contains:\r\n* 3 parameters (P, Q, R)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P | $INF$ | constant |\r\n| Initial value of parameter Q | $-INF$ | constant |\r\n| Initial value of parameter R | $NaN$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP @Const { } = 0;\r\nQ @Const { } = 0;\r\nR @Const { } = 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Competing events with the same priority, jointly causing a parameter to monotonically increase, checking to make sure one event doesn't severly out-compete the other.  NOTE:  STOCHASTIC TEST. This test is designed to fail only one time in a million, but it still may happen.\r\ncomponentTags: AssignmentRule, CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:      EventIsNotPersistent, NonConstantParameter, RandomEventExecution\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model contains two events with the same trigger, the same priority, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, at random, and increases the parameters Q or R, respectively.  A third parameter, S, is assigned the value of Q+R, meaning that it doesn't matter which one fires; S will increase monotonically.  A final parameter, 'error' checks to make sure neither Q nor R are chosen more frequently than the other--if the difference gets higher than 4, it triggers. In our simulations, this happened less often than one time in a million, so if you see it happen in your simulator more often than once, there's a good chance something is wrong.\r\n \r\nThe model contains:\r\n* 5 parameters (S, Q, R, reset, error)\r\n\r\nThere are 3 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| error_check | $geq(abs(Q - R), 4)$ | (unset) | true | $error = 1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S | $Q + R$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter S | $Q + R$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter error | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nS @Record { } .= 0;\r\nS := Q + R;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= t;\r\nreset [Rinc]= t;\r\nerror @Record { } .= 0;\r\nerror [error_check]= 1;\n\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nerror_check @DSwitcher { trigger: abs(Q - R) >= 4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Competing events without priorities, jointly causing a parameter to monotonically increase.\r\ncomponentTags: AssignmentRule, CSymbolTime, EventNoDelay, Parameter\r\ntestTags:      NonConstantParameter, EventIsNotPersistent, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model contains two events with the same trigger, no priority, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, at random, and increases the parameters Q or R, respectively.  A third parameter, S, is assigned the value of Q+R, meaning that it doesn't matter which one fires; S will increase monotonically.  This model is identical to 952, except that there are no priorities, so Qinc and Rinc do not have to be chosen between at random, but can be chosen in any ratio.\r\n\r\nThe model contains:\r\n* 5 parameters (S, Q, R, reset, error)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $geq(time - reset, 0.01)$ | false | $reset = time$ |\r\n|  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $geq(time - reset, 0.01)$ | false | $reset = time$ |\r\n|  |  |  | $R = R + 0.01$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S | $Q + R$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter S | $Q + R$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter error | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nS @Record { };\r\nS := Q + R;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= t;\r\nreset [Rinc]= t;\r\nerror @Record { } .= 0;\n\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Several parameters with assignment rules, testing various L1 built-in functions acting on constants.\r\ncomponentTags: AssignmentRule, Parameter\r\ntestTags:      InitialValueReassigned, UncommonMathML\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model tests the various mathematical constructs present in L1.\r\n\r\nThe model contains:\r\n* 40 parameters (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22, P23, P24, P25, P26, P27, P28, P29, P30, P31, P32, P33, P34, P35, P36, P37, P38, P39, P40)\r\n\r\nThere are 39 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | P2 | $abs(-1)$ |\r\n| Assignment | P3 | $abs(1)$ |\r\n| Assignment | P4 | $acos(-1)$ |\r\n| Assignment | P5 | $acos(0.5)$ |\r\n| Assignment | P6 | $asin(1)$ |\r\n| Assignment | P7 | $asin(-0.5)$ |\r\n| Assignment | P8 | $atan(2.8)$ |\r\n| Assignment | P9 | $atan(-7.09)$ |\r\n| Assignment | P10 | $ceil(0.5)$ |\r\n| Assignment | P11 | $ceil(3.55)$ |\r\n| Assignment | P12 | $ceil(-4.6)$ |\r\n| Assignment | P13 | $cos(9.1)$ |\r\n| Assignment | P14 | $cos(-0.22)$ |\r\n| Assignment | P15 | $exp(0)$ |\r\n| Assignment | P16 | $exp(1)$ |\r\n| Assignment | P17 | $exp(0.77)$ |\r\n| Assignment | P18 | $floor(-4.6)$ |\r\n| Assignment | P19 | $floor(9.1)$ |\r\n| Assignment | P20 | $log(0.2)$ |\r\n| Assignment | P21 | $log(1)$ |\r\n| Assignment | P22 | $log10(0.2)$ |\r\n| Assignment | P23 | $log10(1)$ |\r\n| Assignment | P24 | $pow(1, 2)$ |\r\n| Assignment | P25 | $pow(2, 2)$ |\r\n| Assignment | P26 | $pow(1.4, 5.1)$ |\r\n| Assignment | P27 | $pow(4, 2)$ |\r\n| Assignment | P28 | $pow(3.1, 2)$ |\r\n| Assignment | P29 | $sqrt(4)$ |\r\n| Assignment | P30 | $sqrt(7.4)$ |\r\n| Assignment | P31 | $sin(2.1)$ |\r\n| Assignment | P32 | $sin(0)$ |\r\n| Assignment | P33 | $sin(-5.9)$ |\r\n| Assignment | P34 | $tan(0)$ |\r\n| Assignment | P35 | $tan(1.11)$ |\r\n| Assignment | P36 | $tan(-6)$ |\r\n| Assignment | P37 | $1 + 2$ |\r\n| Assignment | P38 | $1 - 2$ |\r\n| Assignment | P39 | $5 / 2$ |\r\n| Assignment | P40 | $8 * 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $3.7$ | constant |\r\n| Initial value of parameter P2 | $abs(-1)$ | variable |\r\n| Initial value of parameter P3 | $abs(1)$ | variable |\r\n| Initial value of parameter P4 | $acos(-1)$ | variable |\r\n| Initial value of parameter P5 | $acos(0.5)$ | variable |\r\n| Initial value of parameter P6 | $asin(1)$ | variable |\r\n| Initial value of parameter P7 | $asin(-0.5)$ | variable |\r\n| Initial value of parameter P8 | $atan(2.8)$ | variable |\r\n| Initial value of parameter P9 | $atan(-7.09)$ | variable |\r\n| Initial value of parameter P10 | $ceil(0.5)$ | variable |\r\n| Initial value of parameter P11 | $ceil(3.55)$ | variable |\r\n| Initial value of parameter P12 | $ceil(-4.6)$ | variable |\r\n| Initial value of parameter P13 | $cos(9.1)$ | variable |\r\n| Initial value of parameter P14 | $cos(-0.22)$ | variable |\r\n| Initial value of parameter P15 | $exp(0)$ | variable |\r\n| Initial value of parameter P16 | $exp(1)$ | variable |\r\n| Initial value of parameter P17 | $exp(0.77)$ | variable |\r\n| Initial value of parameter P18 | $floor(-4.6)$ | variable |\r\n| Initial value of parameter P19 | $floor(9.1)$ | variable |\r\n| Initial value of parameter P20 | $log(0.2)$ | variable |\r\n| Initial value of parameter P21 | $log(1)$ | variable |\r\n| Initial value of parameter P22 | $log10(0.2)$ | variable |\r\n| Initial value of parameter P23 | $log10(1)$ | variable |\r\n| Initial value of parameter P24 | $pow(1, 2)$ | variable |\r\n| Initial value of parameter P25 | $pow(2, 2)$ | variable |\r\n| Initial value of parameter P26 | $pow(1.4, 5.1)$ | variable |\r\n| Initial value of parameter P27 | $pow(4, 2)$ | variable |\r\n| Initial value of parameter P28 | $pow(3.1, 2)$ | variable |\r\n| Initial value of parameter P29 | $sqrt(4)$ | variable |\r\n| Initial value of parameter P30 | $sqrt(7.4)$ | variable |\r\n| Initial value of parameter P31 | $sin(2.1)$ | variable |\r\n| Initial value of parameter P32 | $sin(0)$ | variable |\r\n| Initial value of parameter P33 | $sin(-5.9)$ | variable |\r\n| Initial value of parameter P34 | $tan(0)$ | variable |\r\n| Initial value of parameter P35 | $tan(1.11)$ | variable |\r\n| Initial value of parameter P36 | $tan(-6)$ | variable |\r\n| Initial value of parameter P37 | $1 + 2$ | variable |\r\n| Initial value of parameter P38 | $1 - 2$ | variable |\r\n| Initial value of parameter P39 | $5 / 2$ | variable |\r\n| Initial value of parameter P40 | $8 * 3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nP2 @Record { };\r\nP2 := abs((-1));\r\nP3 @Record { };\r\nP3 := abs(1);\r\nP4 @Record { };\r\nP4 := acos((-1));\r\nP5 @Record { };\r\nP5 := acos(0.5);\r\nP6 @Record { };\r\nP6 := asin(1);\r\nP7 @Record { };\r\nP7 := asin((-0.5));\r\nP8 @Record { };\r\nP8 := atan(2.8);\r\nP9 @Record { };\r\nP9 := atan((-7.09));\r\nP10 @Record { };\r\nP10 := ceil(0.5);\r\nP11 @Record { };\r\nP11 := ceil(3.55);\r\nP12 @Record { };\r\nP12 := ceil((-4.6));\r\nP13 @Record { };\r\nP13 := cos(9.1);\r\nP14 @Record { };\r\nP14 := cos((-0.22));\r\nP15 @Record { };\r\nP15 := exp(0);\r\nP16 @Record { };\r\nP16 := exp(1);\r\nP17 @Record { };\r\nP17 := exp(0.77);\r\nP18 @Record { };\r\nP18 := floor((-4.6));\r\nP19 @Record { };\r\nP19 := floor(9.1);\r\nP20 @Record { };\r\nP20 := ln(0.2);\r\nP21 @Record { };\r\nP21 := ln(1);\r\nP22 @Record { };\r\nP22 := logbase(0.2, 10);\r\nP23 @Record { };\r\nP23 := logbase(1, 10);\r\nP24 @Record { };\r\nP24 := pow(1, 2);\r\nP25 @Record { };\r\nP25 := pow(2, 2);\r\nP26 @Record { };\r\nP26 := pow(1.4, 5.1);\r\nP27 @Record { };\r\nP27 := pow(4, 2);\r\nP28 @Record { };\r\nP28 := pow(3.1, 2);\r\nP29 @Record { };\r\nP29 := pow(4, 1 / 2);\r\nP30 @Record { };\r\nP30 := pow(7.4, 1 / 2);\r\nP31 @Record { };\r\nP31 := sin(2.1);\r\nP32 @Record { };\r\nP32 := sin(0);\r\nP33 @Record { };\r\nP33 := sin((-5.9));\r\nP34 @Record { };\r\nP34 := tan(0);\r\nP35 @Record { };\r\nP35 := tan(1.11);\r\nP36 @Record { };\r\nP36 := tan((-6));\r\nP37 @Record { };\r\nP37 := 1 + 2;\r\nP38 @Record { };\r\nP38 := 1 - 2;\r\nP39 @Record { };\r\nP39 := 5 / 2;\r\nP40 @Record { };\r\nP40 := 8 * 3;\n\r\nP1 @Const { } = 3.7;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:      Several parameters with assignment rules involving time, testing various L1 built-in functions.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Parameter\r\ntestTags:        InitialValueReassigned, NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\npackagesPresent: \r\n\r\n The model tests the various mathematical constructs present in L1, as applied to the time variable.  Ironically, this doesn't work in L1, since time isn't present, but hey.\r\n\r\nThe model contains:\r\n* 35 parameters (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P13, P14, P15, P16, P18, P19, P20, P22, P24, P25, P26, P29, P31, P32, P34, P35, P37, P38, P39, P40, P41, P42, P43, P44)\r\n\r\nThere are 35 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | P1 | $time$ |\r\n| Assignment | P2 | $abs(time)$ |\r\n| Assignment | P3 | $abs(-time)$ |\r\n| Assignment | P4 | $acos(time)$ |\r\n| Assignment | P5 | $acos(-time)$ |\r\n| Assignment | P6 | $asin(time)$ |\r\n| Assignment | P7 | $asin(-time)$ |\r\n| Assignment | P8 | $atan(time)$ |\r\n| Assignment | P9 | $atan(-time)$ |\r\n| Assignment | P10 | $ceil(time - 0.001)$ |\r\n| Assignment | P11 | $ceil(-time - 0.001)$ |\r\n| Assignment | P13 | $cos(time)$ |\r\n| Assignment | P14 | $cos(-time)$ |\r\n| Assignment | P15 | $exp(time)$ |\r\n| Assignment | P16 | $exp(-time)$ |\r\n| Assignment | P18 | $floor(time + 0.001)$ |\r\n| Assignment | P19 | $floor(-time + 0.001)$ |\r\n| Assignment | P20 | $ln(time + 1)$ |\r\n| Assignment | P22 | $log10(time + 1)$ |\r\n| Assignment | P24 | $time^2$ |\r\n| Assignment | P25 | $2^time$ |\r\n| Assignment | P26 | $time^time$ |\r\n| Assignment | P29 | $sqrt(time)$ |\r\n| Assignment | P31 | $sin(time)$ |\r\n| Assignment | P32 | $sin(-time)$ |\r\n| Assignment | P34 | $tan(time)$ |\r\n| Assignment | P35 | $tan(-time)$ |\r\n| Assignment | P37 | $time + 2$ |\r\n| Assignment | P38 | $time - 2$ |\r\n| Assignment | P39 | $time / 2$ |\r\n| Assignment | P40 | $time * 3$ |\r\n| Assignment | P41 | $2 + time$ |\r\n| Assignment | P42 | $2 - time$ |\r\n| Assignment | P43 | $2 / (time + 1)$ |\r\n| Assignment | P44 | $3 * time$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $time$ | variable |\r\n| Initial value of parameter P2 | $abs(time)$ | variable |\r\n| Initial value of parameter P3 | $abs(-time)$ | variable |\r\n| Initial value of parameter P4 | $acos(time)$ | variable |\r\n| Initial value of parameter P5 | $acos(-time)$ | variable |\r\n| Initial value of parameter P6 | $asin(time)$ | variable |\r\n| Initial value of parameter P7 | $asin(-time)$ | variable |\r\n| Initial value of parameter P8 | $atan(time)$ | variable |\r\n| Initial value of parameter P9 | $atan(-time)$ | variable |\r\n| Initial value of parameter P10 | $ceil(time - 0.001)$ | variable |\r\n| Initial value of parameter P11 | $ceil(-time - 0.001)$ | variable |\r\n| Initial value of parameter P13 | $cos(time)$ | variable |\r\n| Initial value of parameter P14 | $cos(-time)$ | variable |\r\n| Initial value of parameter P15 | $exp(time)$ | variable |\r\n| Initial value of parameter P16 | $exp(-time)$ | variable |\r\n| Initial value of parameter P18 | $floor(time + 0.001)$ | variable |\r\n| Initial value of parameter P19 | $floor(-time + 0.001)$ | variable |\r\n| Initial value of parameter P20 | $ln(time + 1)$ | variable |\r\n| Initial value of parameter P22 | $log10(time + 1)$ | variable |\r\n| Initial value of parameter P24 | $time^2$ | variable |\r\n| Initial value of parameter P25 | $2^time$ | variable |\r\n| Initial value of parameter P26 | $time^time$ | variable |\r\n| Initial value of parameter P29 | $sqrt(time)$ | variable |\r\n| Initial value of parameter P31 | $sin(time)$ | variable |\r\n| Initial value of parameter P32 | $sin(-time)$ | variable |\r\n| Initial value of parameter P34 | $tan(time)$ | variable |\r\n| Initial value of parameter P35 | $tan(-time)$ | variable |\r\n| Initial value of parameter P37 | $time + 2$ | variable |\r\n| Initial value of parameter P38 | $time - 2$ | variable |\r\n| Initial value of parameter P39 | $time / 2$ | variable |\r\n| Initial value of parameter P40 | $time * 3$ | variable |\r\n| Initial value of parameter P41 | $2 + time$ | variable |\r\n| Initial value of parameter P42 | $2 - time$ | variable |\r\n| Initial value of parameter P43 | $2 / (time + 1)$ | variable |\r\n| Initial value of parameter P44 | $3 * time$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { };\r\nP1 := t;\r\nP2 @Record { };\r\nP2 := abs(t);\r\nP3 @Record { };\r\nP3 := abs((-t));\r\nP4 @Record { };\r\nP4 := acos(t);\r\nP5 @Record { };\r\nP5 := acos((-t));\r\nP6 @Record { };\r\nP6 := asin(t);\r\nP7 @Record { };\r\nP7 := asin((-t));\r\nP8 @Record { };\r\nP8 := atan(t);\r\nP9 @Record { };\r\nP9 := atan((-t));\r\nP10 @Record { };\r\nP10 := ceil(t - 0.001);\r\nP11 @Record { };\r\nP11 := ceil((-t) - 0.001);\r\nP13 @Record { };\r\nP13 := cos(t);\r\nP14 @Record { };\r\nP14 := cos((-t));\r\nP15 @Record { };\r\nP15 := exp(t);\r\nP16 @Record { };\r\nP16 := exp((-t));\r\nP18 @Record { };\r\nP18 := floor(t + 0.001);\r\nP19 @Record { };\r\nP19 := floor((-t) + 0.001);\r\nP20 @Record { };\r\nP20 := ln(t + 1);\r\nP22 @Record { };\r\nP22 := logbase(t + 1, 10);\r\nP24 @Record { };\r\nP24 := pow(t, 2);\r\nP25 @Record { };\r\nP25 := pow(2, t);\r\nP26 @Record { };\r\nP26 := pow(t, t);\r\nP29 @Record { };\r\nP29 := pow(t, 1 / 2);\r\nP31 @Record { };\r\nP31 := sin(t);\r\nP32 @Record { };\r\nP32 := sin((-t));\r\nP34 @Record { };\r\nP34 := tan(t);\r\nP35 @Record { };\r\nP35 := tan((-t));\r\nP37 @Record { };\r\nP37 := t + 2;\r\nP38 @Record { };\r\nP38 := t - 2;\r\nP39 @Record { };\r\nP39 := t / 2;\r\nP40 @Record { };\r\nP40 := t * 3;\r\nP41 @Record { };\r\nP41 := 2 + t;\r\nP42 @Record { };\r\nP42 := 2 - t;\r\nP43 @Record { };\r\nP43 := 2 / (t + 1);\r\nP44 @Record { };\r\nP44 := 3 * t;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Several parameters with initial assignment rules, testing various L1 built-in functions acting on constants.\r\ncomponentTags: InitialAssignment, Parameter\r\ntestTags:      InitialValueReassigned, UncommonMathML\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n The model tests the various mathematical constructs present in L1, used in InitialAssignments.\r\n\r\nThe model contains:\r\n* 40 parameters (P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22, P23, P24, P25, P26, P27, P28, P29, P30, P31, P32, P33, P34, P35, P36, P37, P38, P39, P40)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $3.7$ | constant |\r\n| Initial value of parameter P2 | $abs(-1)$ | constant |\r\n| Initial value of parameter P3 | $abs(1)$ | constant |\r\n| Initial value of parameter P4 | $acos(-1)$ | constant |\r\n| Initial value of parameter P5 | $acos(0.5)$ | constant |\r\n| Initial value of parameter P6 | $asin(1)$ | constant |\r\n| Initial value of parameter P7 | $asin(-0.5)$ | constant |\r\n| Initial value of parameter P8 | $atan(2.8)$ | constant |\r\n| Initial value of parameter P9 | $atan(-7.09)$ | constant |\r\n| Initial value of parameter P10 | $ceil(0.5)$ | constant |\r\n| Initial value of parameter P11 | $ceil(3.55)$ | constant |\r\n| Initial value of parameter P12 | $ceil(-4.6)$ | constant |\r\n| Initial value of parameter P13 | $cos(9.1)$ | constant |\r\n| Initial value of parameter P14 | $cos(-0.22)$ | constant |\r\n| Initial value of parameter P15 | $exp(0)$ | constant |\r\n| Initial value of parameter P16 | $exp(1)$ | constant |\r\n| Initial value of parameter P17 | $exp(0.77)$ | constant |\r\n| Initial value of parameter P18 | $floor(-4.6)$ | constant |\r\n| Initial value of parameter P19 | $floor(9.1)$ | constant |\r\n| Initial value of parameter P20 | $log(0.2)$ | constant |\r\n| Initial value of parameter P21 | $log(1)$ | constant |\r\n| Initial value of parameter P22 | $log10(0.2)$ | constant |\r\n| Initial value of parameter P23 | $log10(1)$ | constant |\r\n| Initial value of parameter P24 | $pow(1, 2)$ | constant |\r\n| Initial value of parameter P25 | $pow(2, 2)$ | constant |\r\n| Initial value of parameter P26 | $pow(1.4, 5.1)$ | constant |\r\n| Initial value of parameter P27 | $pow(4, 2)$ | constant |\r\n| Initial value of parameter P28 | $pow(3.1, 2)$ | constant |\r\n| Initial value of parameter P29 | $sqrt(4)$ | constant |\r\n| Initial value of parameter P30 | $sqrt(7.4)$ | constant |\r\n| Initial value of parameter P31 | $sin(2.1)$ | constant |\r\n| Initial value of parameter P32 | $sin(0)$ | constant |\r\n| Initial value of parameter P33 | $sin(-5.9)$ | constant |\r\n| Initial value of parameter P34 | $tan(0)$ | constant |\r\n| Initial value of parameter P35 | $tan(1.11)$ | constant |\r\n| Initial value of parameter P36 | $tan(-6)$ | constant |\r\n| Initial value of parameter P37 | $1 + 2$ | constant |\r\n| Initial value of parameter P38 | $1 - 2$ | constant |\r\n| Initial value of parameter P39 | $5 / 2$ | constant |\r\n| Initial value of parameter P40 | $8 * 3$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 3.7;\r\nP2 @Record { } .= abs((-1));\r\nP3 @Record { } .= abs(1);\r\nP4 @Record { } .= acos((-1));\r\nP5 @Record { } .= acos(0.5);\r\nP6 @Record { } .= asin(1);\r\nP7 @Record { } .= asin((-0.5));\r\nP8 @Record { } .= atan(2.8);\r\nP9 @Record { } .= atan((-7.09));\r\nP10 @Record { } .= ceil(0.5);\r\nP11 @Record { } .= ceil(3.55);\r\nP12 @Record { } .= ceil((-4.6));\r\nP13 @Record { } .= cos(9.1);\r\nP14 @Record { } .= cos((-0.22));\r\nP15 @Record { } .= exp(0);\r\nP16 @Record { } .= exp(1);\r\nP17 @Record { } .= exp(0.77);\r\nP18 @Record { } .= floor((-4.6));\r\nP19 @Record { } .= floor(9.1);\r\nP20 @Record { } .= ln(0.2);\r\nP21 @Record { } .= ln(1);\r\nP22 @Record { } .= logbase(0.2, 10);\r\nP23 @Record { } .= logbase(1, 10);\r\nP24 @Record { } .= pow(1, 2);\r\nP25 @Record { } .= pow(2, 2);\r\nP26 @Record { } .= pow(1.4, 5.1);\r\nP27 @Record { } .= pow(4, 2);\r\nP28 @Record { } .= pow(3.1, 2);\r\nP29 @Record { } .= pow(4, 1 / 2);\r\nP30 @Record { } .= pow(7.4, 1 / 2);\r\nP31 @Record { } .= sin(2.1);\r\nP32 @Record { } .= sin(0);\r\nP33 @Record { } .= sin((-5.9));\r\nP34 @Record { } .= tan(0);\r\nP35 @Record { } .= tan(1.11);\r\nP36 @Record { } .= tan((-6));\r\nP37 @Record { } .= 1 + 2;\r\nP38 @Record { } .= 1 - 2;\r\nP39 @Record { } .= 5 / 2;\r\nP40 @Record { } .= 8 * 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Four different ways of writing the avogadro number in an assignment rule.\r\ncomponentTags: AssignmentRule, CSymbolAvogadro, Parameter\r\ntestTags:      InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model assigns avogadro's number as a csymbol to four parameters in an assignment rule.  It tries to fool you by calling two of them 'time' and 'delay', and by not giving one a name at all.\r\n\r\nTo test that the value of avogadro is the same as is in the specification without requiring that you write out all 9 digits of precision, a fifth parameter is added with the value (avogadro - 6.0221e+23).\r\n\r\nThe model contains:\r\n* 5 parameters (P1, P2, P3, P4, P5)\r\n\r\nThere are 5 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | P1 | $avogadro$ |\r\n| Assignment | P2 | $time$ |\r\n| Assignment | P3 | $delay$ |\r\n| Assignment | P4 | $$ |\r\n| Assignment | P5 | $avogadro - 6.022100e+023$ |]\r\n\r\n Note:  All parameters actually assigned the CSymbol 'avogadro', but the text is different for the first four cases.\r\n \r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $avogadro$ | variable |\r\n| Initial value of parameter P2 | $time$ | variable |\r\n| Initial value of parameter P3 | $delay$ | variable |\r\n| Initial value of parameter P4 | $$ | variable |\r\n| Initial value of parameter P5 | $avogadro - 6.022100e+023$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { };\r\nP1 := 6.02214076e+23;\r\nP2 @Record { };\r\nP2 := 6.02214076e+23;\r\nP3 @Record { };\r\nP3 := 6.02214076e+23;\r\nP4 @Record { };\r\nP4 := 6.02214076e+23;\r\nP5 @Record { };\r\nP5 := 6.02214076e+23 - (6.0221e+23);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Competing events with the same priority, jointly causing a parameter to monotonically increase, checking to make sure the two events are not exactly evenly distributed.  NOTE:  STOCHASTIC TEST. Your software may fail periodically; it is only supposed to succeed in the majority of cases.\r\ncomponentTags: AssignmentRule, CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:      EventIsNotPersistent, NonConstantParameter, RandomEventExecution\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model contains two events with the same trigger, the same priority, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, at random, and increases the parameters Q or R, respectively.  A third parameter, S, is assigned the value of Q+R, meaning that it doesn't matter which one fires; S will increase monotonically.  A final parameter, 'error' checks to make sure neither Q nor R are chosen more frequently than the other--if the difference gets higher than 0.2, it triggers. \r\n\r\n Note:  The 'error' parameter is a stochastic test, and may not always remain at '0' for all runs.  If your software fails, try running it again with a new random number seed, and it may succeed.  The value of '0.2' was chosen to be reasonable in the vast majority of cases, but still high enough to reveal problems in software that tends to pick both events exactly evenly.\r\n\r\nThe model contains:\r\n* 6 parameters (S, Q, R, reset, maxdiff, error)\r\n\r\nThere are 4 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| maxcheck | $gt(abs(Q - R), maxdiff)$ | (unset) | true | $maxdiff = abs(Q - R)$ |\r\n| error_check | $and(geq(time, 99), lt(maxdiff, 0.2))$ | (unset) | true | $error = 1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S | $Q + R$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter S | $Q + R$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter maxdiff | $0$ | variable |\r\n| Initial value of parameter error | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nS @Record { } .= 0;\r\nS := Q + R;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= t;\r\nreset [Rinc]= t;\r\nmaxdiff @Record { } .= 0;\r\nmaxdiff [maxcheck]= abs(Q - R);\r\nerror @Record { } .= 0;\r\nerror [error_check]= 1;\n\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nmaxcheck @DSwitcher { trigger: abs(Q - R) > maxdiff, };\r\nerror_check @DSwitcher { trigger: t >= 99 and maxdiff < 0.2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Competing events with different priorities, meaning one always fires and the other does not.\r\ncomponentTags: CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:      EventIsNotPersistent, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n This model contains two pairs of events with the same two triggers and different priorities, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, and the higher-priority event is the one that always wins.  Just to make sure that simulators don't accidentally do what was designed to happen here, the two pairs of events come in the same order alphabetically and within the file, but the priorities are reversed, so if you always pick the first event instead of looking at the priority, you will fail one of the tests.\r\n\r\nThe model contains:\r\n* 6 parameters (Q, R, reset, Q2, R2, reset2)\r\n\r\nThere are 4 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $geq(time - reset, 0.01)$ | $-1$ | false | $reset = time$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| Qinc2 | $geq(time - reset2, 0.01)$ | $-1$ | false | $reset2 = time$ |\r\n|  |  |  |  | $Q2 = Q2 + 0.01$ |\r\n| Rinc2 | $geq(time - reset2, 0.01)$ | $1$ | false | $reset2 = time$ |\r\n|  |  |  |  | $R2 = R2 + 0.01$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter Q2 | $0$ | variable |\r\n| Initial value of parameter R2 | $0$ | variable |\r\n| Initial value of parameter reset2 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= t;\r\nreset [Rinc]= t;\r\nQ2 @Record { } .= 0;\r\nQ2 [Qinc2]= Q2 + 0.01;\r\nR2 @Record { } .= 0;\r\nR2 [Rinc2]= R2 + 0.01;\r\nreset2 @Record { } .= 0;\r\nreset2 [Qinc2]= t;\r\nreset2 [Rinc2]= t;\n\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nQinc2 @DSwitcher { trigger: (t - reset2) >= 0.01, };\r\nRinc2 @DSwitcher { trigger: (t - reset2) >= 0.01, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Three competing events with the same priority, jointly causing a parameter to monotonically increase, checking to make sure one event doesn't severely out-compete the other two.   NOTE:  STOCHASTIC TEST. This test is designed to fail only one time in a million, but it still may happen.\r\ncomponentTags: AssignmentRule, CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:      EventIsNotPersistent, NonConstantParameter, RandomEventExecution\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model contains three events with the same trigger, the same priority, and all set 'persistent=false', and all of which disable the trigger of the others.  This means that every .01 seconds, one fires and the others do not, at random, and increases the parameters Q, R, and T, respectively.  A fourth parameter, S, is assigned the value of Q+R+T, meaning that it doesn't matter which one fires; S will increase monotonically.  A final parameter, 'error' checks to make sure none of the three parameters are chosen more frequently than the other two--if the difference gets higher than 5, it triggers.  From our simulations, this should happen less often than one time in a million, so if you see it happen in your simulator more often than once, there's a good chance something is wrong.\r\n \r\n\r\nThe model contains:\r\n* 7 parameters (S, Q, R, T, reset, tolerance, error)\r\n\r\nThere are 4 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| Tinc | $geq(time - reset, 0.01)$ | $1$ | false | $reset = time$ |\r\n|  |  |  |  | $T = T + 0.01$ |\r\n| error_check | $or(geq(abs(Q - R), tolerance), geq(abs(Q - T), tolerance), geq(abs(T - R), tolerance))$ | (unset) | true | $error = 1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S | $Q + R + T$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter tolerance | $5$ | constant |\r\n| Initial value of parameter S | $Q + R + T$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter T | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter error | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nS @Record { } .= 0;\r\nS := Q + R + T;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nT @Record { } .= 0;\r\nT [Tinc]= T + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= t;\r\nreset [Rinc]= t;\r\nreset [Tinc]= t;\r\nerror @Record { } .= 0;\r\nerror [error_check]= 1;\n\r\ntolerance @Const { } = 5;\n\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nTinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nerror_check @DSwitcher { trigger: abs(Q - R) >= tolerance or abs(Q - T) >= tolerance or abs(T - R) >= tolerance, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Competing events with the same priority, jointly causing a parameter to monotonically increase, checking to make sure one event doesn't happen too many times in a row.  NOTE:  STOCHASTIC TEST. This test is designed to fail only one time in a million, but it still may happen.\r\ncomponentTags: AssignmentRule, CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:      EventIsNotPersistent, EventIsPersistent, EventUsesTriggerTimeValues, NonConstantParameter, RandomEventExecution\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model (the same basic model as 952) contains two events with the same trigger, the same priority, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, at random, and increases the parameters Q or R, respectively.  A third parameter, S, is assigned the value of Q+R, meaning that it doesn't matter which one fires; S will increase monotonically.\r\n\r\nIn this test, we also keep track of how many times in a row either Q or R have been chosen, through the parameters Qrun and Rrun.  Another parameter, maxrun, is set by its own events to be max(maxrun, Qrun, Rrun).  A final event checks to see if maxrun has exceeded 20; if so, it is set to 1.  In our simulations, in 1,000,000 runs, maxrun had an average of 13.25, and never exceeded 15 at all, so exceeding 300 is an occurrence that should happen much less than one time in a million.  While this doesn't mean that your simulator will never have a run where maxrun exceeds 300, it does mean that this is a very rare event, and almost certainly means that something is wrong with your simulator:  it may be that the same random number is being chosen multiple times.\r\n\r\nThe model contains:\r\n* 8 parameters (S, Q, R, reset, Qrun, Rrun, maxrun, error)\r\n\r\nThere are 5 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $(time - reset) &geq; 0.01$ | $10$ | false | $reset = time$ |\r\n|  |  |  |  | $Rrun = 0$ |\r\n|  |  |  |  | $Qrun = Qrun + 1$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $(time - reset) &geq; 0.01$ | $10$ | false | $reset = time$ |\r\n|  |  |  |  | $Qrun = 0$ |\r\n|  |  |  |  | $Rrun = Rrun + 1$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| maxrun_check1 | $Qrun > maxrun$ | $9$ | true | $maxrun = Qrun$ |\r\n| maxrun_check2 | $Rrun > maxrun$ | $8$ | true | $maxrun = Rrun$ |\r\n| error_check | $maxrun > 300$ | $7$ | true | $error = 1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S | $Q + R$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter S | $Q + R$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter Qrun | $0$ | variable |\r\n| Initial value of parameter Rrun | $0$ | variable |\r\n| Initial value of parameter maxrun | $0$ | variable |\r\n| Initial value of parameter error | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n*)\r\n(* \r\n\r\ncategory:      Test\r\ncomponentTags: Parameter, EventNoDelay, EventPriority, AssignmentRule, CSymbolTime\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe events are:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Qinc | $time - reset >= 0.01$ | $-$   | $Q = Q + 0.01, Qrun = Qrun + 1, Rrun = 0, reset = time$      |\r\n | Rinc | $time - reset >= 0.01$ | $-$   | $R = R + 0.01, Rrun = Rrun + 1, Qrun = 0, reset = time$      |\r\n | maxrun_check1 | $Qrun > maxrun$ | $-$ | $maxrun = Qrun$ |\r\n | maxrun_check2 | $Rrun > maxrun$ | $-$ | $maxrun = Rrun$ |\r\n | error_check | $maxrun > 300$ | $-$ | $error = 1$      |]\r\n\r\n\r\n The initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*|\r\n|Value of parameter Q          |$0$  |\r\n|Value of parameter R          |$0$  |\r\n|Value of parameter S          |$0$  |\r\n|Value of parameter reset      |$0$  |\r\n|Value of parameter Qrun       |$0$  |\r\n|Value of parameter Rrun       |$0$  |\r\n|Value of parameter maxrun     |$0$  |\r\n|Value of parameter error      |$0$  |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nS @Record { } .= 0;\r\nS := Q + R;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= t;\r\nreset [Rinc]= t;\r\nQrun @Record { } .= 0;\r\nQrun [Qinc]= Qrun + 1;\r\nQrun [Rinc]= 0;\r\nRrun @Record { } .= 0;\r\nRrun [Qinc]= 0;\r\nRrun [Rinc]= Rrun + 1;\r\nmaxrun @Record { } .= 0;\r\nmaxrun [maxrun_check1]= Qrun;\r\nmaxrun [maxrun_check2]= Rrun;\r\nerror @Record { } .= 0;\r\nerror [error_check]= 1;\n\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nmaxrun_check1 @DSwitcher { trigger: Qrun > maxrun, };\r\nmaxrun_check2 @DSwitcher { trigger: Rrun > maxrun, };\r\nerror_check @DSwitcher { trigger: maxrun > 300, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Competing events with the same priority, jointly causing a parameter to monotonically increase, calculating a chi-squared statistic to ensure randomness.  NOTE:  STOCHASTIC TEST. This test is designed to fail with a frequency of 0.00002, but it still may happen.\r\ncomponentTags: AssignmentRule, CSymbolTime, EventNoDelay, EventPriority, FunctionDefinition, Parameter\r\ntestTags:      EventIsNotPersistent, EventIsPersistent, EventUsesTriggerTimeValues, NonConstantParameter, RandomEventExecution\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model (the same basic model as 952) contains two events with the same trigger, the same priority, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, at random, and increases the parameters Q or R, respectively.  A third parameter, S, is assigned the value of Q+R, meaning that it doesn't matter which one fires; S will increase monotonically.\r\n\r\nIn this test, we also keep track of each run of 16 tests in a row, calculating the sum of Q during that run, and incrementing the appropriate frequency (chi0 -> chi16).  At the end of 6,420 tests, the chi-square value is calculated from the observed and the pre-calculated expected frequencies of the 17 possible values.  If this value is greater than 50, an error is triggered.  The liklihood of the error being triggered is 0.00002, so it is quite unlikely (though possible) that a simulator would trigger it with a working random number generator, and almost impossible for this to happen twice in a row.\r\n\r\nThis model has a number of events, so it's probably best to look at the antimony file for more details:  00966-antimony.txt\r\n\r\n\r\nThe model contains:\r\n* 27 parameters (S, Q, R, reset, chicount, chitest, assemble, chi0, chi1, chi2, chi3, chi4, chi5, chi6, chi7, chi8, chi9, chi10, chi11, chi12, chi13, chi14, chi15, chi16, tests, finalchi, error)\r\n\r\nIt also contains 1 function definition(s):\r\n; calculateerror: $pow(x0 - 0.0952, 2) / 0.0952 + pow(x1 - 1.523, 2) / 1.523 + pow(x2 - 11.428, 2) / 11.428 + pow(x3 - 53.32, 2) / 53.32 + pow(x4 - 173.29, 2) / 173.29 + pow(x5 - 415.898, 2) / 415.898 + pow(x6 - 762.48, 2) / 762.48 + pow(x7 - 1089.26, 2) / 1089.26 + pow(x8 - 1225.415, 2) / 1225.415 + pow(x9 - 1089.26, 2) / 1089.26 + pow(x10 - 762.48, 2) / 762.48 + pow(x11 - 415.898, 2) / 415.898 + pow(x12 - 173.29, 2) / 173.29 + pow(x13 - 53.32, 2) / 53.32 + pow(x14 - 11.428, 2) / 11.428 + pow(x15 - 1.523, 2) / 1.523 + pow(x16 - 0.0952, 2) / 0.0952$\r\n\r\nThere are 23 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Rinc | $geq(time - reset, 0.01)$ | $10$ | false | $reset = time$ |\r\n|  |  |  |  | $chicount = chicount + 1$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| Qinc | $geq(time - reset, 0.01)$ | $10$ | false | $reset = time$ |\r\n|  |  |  |  | $chitest = chitest + 1$ |\r\n|  |  |  |  | $chicount = chicount + 1$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| repeat | $geq(floor(chicount / 16), 1)$ | $5$ | true | $assemble = 1.5$ |\r\n|  |  |  |  | $chicount = 0$ |\r\n| _E0 | $and(geq(assemble, 1), eq(chitest, 0))$ | $3$ | true | $chi0 = chi0 + 1$ |\r\n| _E1 | $and(geq(assemble, 1), eq(chitest, 1))$ | $3$ | true | $chi1 = chi1 + 1$ |\r\n| _E2 | $and(geq(assemble, 1), eq(chitest, 2))$ | $3$ | true | $chi2 = chi2 + 1$ |\r\n| _E3 | $and(geq(assemble, 1), eq(chitest, 3))$ | $3$ | true | $chi3 = chi3 + 1$ |\r\n| _E4 | $and(geq(assemble, 1), eq(chitest, 4))$ | $3$ | true | $chi4 = chi4 + 1$ |\r\n| _E5 | $and(geq(assemble, 1), eq(chitest, 5))$ | $3$ | true | $chi5 = chi5 + 1$ |\r\n| _E6 | $and(geq(assemble, 1), eq(chitest, 6))$ | $3$ | true | $chi6 = chi6 + 1$ |\r\n| _E7 | $and(geq(assemble, 1), eq(chitest, 7))$ | $3$ | true | $chi7 = chi7 + 1$ |\r\n| _E8 | $and(geq(assemble, 1), eq(chitest, 8))$ | $3$ | true | $chi8 = chi8 + 1$ |\r\n| _E9 | $and(geq(assemble, 1), eq(chitest, 9))$ | $3$ | true | $chi9 = chi9 + 1$ |\r\n| _E10 | $and(geq(assemble, 1), eq(chitest, 10))$ | $3$ | true | $chi10 = chi10 + 1$ |\r\n| _E11 | $and(geq(assemble, 1), eq(chitest, 11))$ | $3$ | true | $chi11 = chi11 + 1$ |\r\n| _E12 | $and(geq(assemble, 1), eq(chitest, 12))$ | $3$ | true | $chi12 = chi12 + 1$ |\r\n| _E13 | $and(geq(assemble, 1), eq(chitest, 13))$ | $3$ | true | $chi13 = chi13 + 1$ |\r\n| _E14 | $and(geq(assemble, 1), eq(chitest, 14))$ | $3$ | true | $chi14 = chi14 + 1$ |\r\n| _E15 | $and(geq(assemble, 1), eq(chitest, 15))$ | $3$ | true | $chi15 = chi15 + 1$ |\r\n| _E16 | $and(geq(assemble, 1), eq(chitest, 16))$ | $3$ | true | $chi16 = chi16 + 1$ |\r\n| _E17 | $geq(assemble, 1)$ | $1$ | true | $tests = tests + 1$ |\r\n|  |  |  |  | $chitest = 0$ |\r\n|  |  |  |  | $assemble = 0$ |\r\n| _E18 | $and(geq(tests, 6240), eq(finalchi, 0))$ | $0$ | true | $finalchi = calculateerror(chi0, chi1, chi2, chi3, chi4, chi5, chi6, chi7, chi8, chi9, chi10, chi11, chi12, chi13, chi14, chi15, chi16)$ |\r\n| error_check | $gt(finalchi, 50)$ | $-1$ | true | $error = 1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S | $Q + R$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter S | $Q + R$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter chicount | $0$ | variable |\r\n| Initial value of parameter chitest | $0$ | variable |\r\n| Initial value of parameter assemble | $0$ | variable |\r\n| Initial value of parameter chi0 | $0$ | variable |\r\n| Initial value of parameter chi1 | $0$ | variable |\r\n| Initial value of parameter chi2 | $0$ | variable |\r\n| Initial value of parameter chi3 | $0$ | variable |\r\n| Initial value of parameter chi4 | $0$ | variable |\r\n| Initial value of parameter chi5 | $0$ | variable |\r\n| Initial value of parameter chi6 | $0$ | variable |\r\n| Initial value of parameter chi7 | $0$ | variable |\r\n| Initial value of parameter chi8 | $0$ | variable |\r\n| Initial value of parameter chi9 | $0$ | variable |\r\n| Initial value of parameter chi10 | $0$ | variable |\r\n| Initial value of parameter chi11 | $0$ | variable |\r\n| Initial value of parameter chi12 | $0$ | variable |\r\n| Initial value of parameter chi13 | $0$ | variable |\r\n| Initial value of parameter chi14 | $0$ | variable |\r\n| Initial value of parameter chi15 | $0$ | variable |\r\n| Initial value of parameter chi16 | $0$ | variable |\r\n| Initial value of parameter tests | $0$ | variable |\r\n| Initial value of parameter finalchi | $0$ | variable |\r\n| Initial value of parameter error | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\ncalculateerror #defineFunction { arguments: [x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16], math: pow(x0 - 0.0952, 2) / 0.0952 + pow(x1 - 1.523, 2) / 1.523 + pow(x2 - 11.428, 2) / 11.428 + pow(x3 - 53.32, 2) / 53.32 + pow(x4 - 173.29, 2) / 173.29 + pow(x5 - 415.898, 2) / 415.898 + pow(x6 - 762.48, 2) / 762.48 + pow(x7 - 1089.26, 2) / 1089.26 + pow(x8 - 1225.415, 2) / 1225.415 + pow(x9 - 1089.26, 2) / 1089.26 + pow(x10 - 762.48, 2) / 762.48 + pow(x11 - 415.898, 2) / 415.898 + pow(x12 - 173.29, 2) / 173.29 + pow(x13 - 53.32, 2) / 53.32 + pow(x14 - 11.428, 2) / 11.428 + pow(x15 - 1.523, 2) / 1.523 + pow(x16 - 0.0952, 2) / 0.0952, };\r\n\r\nt @TimeScale { };\n\r\nS @Record { } .= 0;\r\nS := Q + R;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Rinc]= t;\r\nreset [Qinc]= t;\r\nchicount @Record { } .= 0;\r\nchicount [Rinc]= chicount + 1;\r\nchicount [Qinc]= chicount + 1;\r\nchicount [repeat]= 0;\r\nchitest @Record { } .= 0;\r\nchitest [Qinc]= chitest + 1;\r\nchitest [_E17]= 0;\r\nassemble @Record { } .= 0;\r\nassemble [repeat]= 1.5;\r\nassemble [_E17]= 0;\r\nchi0 @Record { } .= 0;\r\nchi0 [_E0]= chi0 + 1;\r\nchi1 @Record { } .= 0;\r\nchi1 [_E1]= chi1 + 1;\r\nchi2 @Record { } .= 0;\r\nchi2 [_E2]= chi2 + 1;\r\nchi3 @Record { } .= 0;\r\nchi3 [_E3]= chi3 + 1;\r\nchi4 @Record { } .= 0;\r\nchi4 [_E4]= chi4 + 1;\r\nchi5 @Record { } .= 0;\r\nchi5 [_E5]= chi5 + 1;\r\nchi6 @Record { } .= 0;\r\nchi6 [_E6]= chi6 + 1;\r\nchi7 @Record { } .= 0;\r\nchi7 [_E7]= chi7 + 1;\r\nchi8 @Record { } .= 0;\r\nchi8 [_E8]= chi8 + 1;\r\nchi9 @Record { } .= 0;\r\nchi9 [_E9]= chi9 + 1;\r\nchi10 @Record { } .= 0;\r\nchi10 [_E10]= chi10 + 1;\r\nchi11 @Record { } .= 0;\r\nchi11 [_E11]= chi11 + 1;\r\nchi12 @Record { } .= 0;\r\nchi12 [_E12]= chi12 + 1;\r\nchi13 @Record { } .= 0;\r\nchi13 [_E13]= chi13 + 1;\r\nchi14 @Record { } .= 0;\r\nchi14 [_E14]= chi14 + 1;\r\nchi15 @Record { } .= 0;\r\nchi15 [_E15]= chi15 + 1;\r\nchi16 @Record { } .= 0;\r\nchi16 [_E16]= chi16 + 1;\r\ntests @Record { } .= 0;\r\ntests [_E17]= tests + 1;\r\nfinalchi @Record { } .= 0;\r\nfinalchi [_E18]= calculateerror(chi0, chi1, chi2, chi3, chi4, chi5, chi6, chi7, chi8, chi9, chi10, chi11, chi12, chi13, chi14, chi15, chi16);\r\nerror @Record { } .= 0;\r\nerror [error_check]= 1;\n\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nrepeat @DSwitcher { trigger: floor(chicount / 16) >= 1, };\r\n_E0 @DSwitcher { trigger: assemble >= 1 and chitest == 0, };\r\n_E1 @DSwitcher { trigger: assemble >= 1 and chitest == 1, };\r\n_E2 @DSwitcher { trigger: assemble >= 1 and chitest == 2, };\r\n_E3 @DSwitcher { trigger: assemble >= 1 and chitest == 3, };\r\n_E4 @DSwitcher { trigger: assemble >= 1 and chitest == 4, };\r\n_E5 @DSwitcher { trigger: assemble >= 1 and chitest == 5, };\r\n_E6 @DSwitcher { trigger: assemble >= 1 and chitest == 6, };\r\n_E7 @DSwitcher { trigger: assemble >= 1 and chitest == 7, };\r\n_E8 @DSwitcher { trigger: assemble >= 1 and chitest == 8, };\r\n_E9 @DSwitcher { trigger: assemble >= 1 and chitest == 9, };\r\n_E10 @DSwitcher { trigger: assemble >= 1 and chitest == 10, };\r\n_E11 @DSwitcher { trigger: assemble >= 1 and chitest == 11, };\r\n_E12 @DSwitcher { trigger: assemble >= 1 and chitest == 12, };\r\n_E13 @DSwitcher { trigger: assemble >= 1 and chitest == 13, };\r\n_E14 @DSwitcher { trigger: assemble >= 1 and chitest == 14, };\r\n_E15 @DSwitcher { trigger: assemble >= 1 and chitest == 15, };\r\n_E16 @DSwitcher { trigger: assemble >= 1 and chitest == 16, };\r\n_E17 @DSwitcher { trigger: assemble >= 1, };\r\n_E18 @DSwitcher { trigger: tests >= 6240 and finalchi == 0, };\r\nerror_check @DSwitcher { trigger: finalchi > 50, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Competing events with alternating priorities, so one fires for 5 seconds, then the other fires for the next 5 seconds.\r\ncomponentTags: CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:      NonConstantParameter, EventIsNotPersistent\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model contains two events with the same trigger, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not.  One has the priority 'time' and the other the priority '5.001', meaning that for the first 5 seconds, one fires, and for the next 5 seconds, the other fires.\r\n \r\n\r\nThe model contains:\r\n* 3 parameters (reset, Q, R)\r\n\r\nThere are 2 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $(time - reset) &geq; 0.01$ | $time$ | false | $reset = time$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $(time - reset) &geq; 0.01$ | $5.001$ | false | $reset = time$ |\r\n|  |  |  |  | $R = R + 0.01$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nreset @Record { } .= 0;\r\nreset [Qinc]= t;\r\nreset [Rinc]= t;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\n\r\nQinc @DSwitcher { trigger: (t - reset) >= 0.01, };\r\nRinc @DSwitcher { trigger: (t - reset) >= 0.01, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      A three-step reaction scheme with a model conversion factor.\r\ncomponentTags: Compartment, Parameter, Reaction, Species\r\ntestTags:      Amount, ConversionFactors, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThis model tests conversion factors through a system of three reactions.  There is a conversion factor ('modelconv') on the model of 4.  This changes how S1 and S2 change in time, but not how S1 and S2 are interpreted in the reaction rates.\r\n \r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 5 parameters (k1, k2, k3, S1conv, modelconv)\r\n* 1 compartment (default_compartment)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $k1$ |\r\n| 2S1 -> 3S2 | $k2 * S1 / S2$ |\r\n| S2 -> | $k3 * S2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $0$ | variable |\r\n| Initial amount of species S2 | $0.001$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial value of parameter k2 | $3$ | constant |\r\n| Initial value of parameter k3 | $1.4$ | constant |\r\n| Initial value of parameter S1conv | $3$ | constant |\r\n| Initial value of parameter modelconv | $4$ | constant |\r\n| Initial volume of compartment 'default_compartment' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ndefault_compartment @Compartment { boundary: true, aux: {sboTerm: \"SBO:0000410\"}, } .= 1;\n\r\nS1 @Species { compartment: default_compartment, } .= 0 / default_compartment;\r\nS2 @Species { compartment: default_compartment, } .= 0.001 / default_compartment;\n\r\n_J0 @Reaction { actors:  = S1, };\r\n_J0 := k1;\r\n_J1 @Reaction { actors: 2*S1 = 3*S2, };\r\n_J1 := (k2 * S1) / S2;\r\n_J2 @Reaction { actors: S2 = , };\r\n_J2 := k3 * S2;\n\r\nk1 @Const { } = 1;\r\nk2 @Const { } = 3;\r\nk3 @Const { } = 1.4;\r\nS1conv @Const { } = 3;\r\nmodelconv @Const { } = 4;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      A three-step reaction scheme with a model conversion factor and a species conversion factor.\r\ncomponentTags: Compartment, Parameter, Reaction, Species\r\ntestTags:      Amount, ConversionFactors, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThis model tests conversion factors through a system of three reactions.  There is a conversion factor ('modelconv') on the model of 4, and a second conversion factor ('S1conv') on species S1.  This means that S1 is converted according to S1conv, and S2 is converted according to modelconv.  Together, this changes how S1 and S2 change in time, but not how S1 and S2 are interpreted in the reaction rates.\r\n\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 5 parameters (k1, k2, k3, S1conv, modelconv)\r\n* 1 compartment (default_compartment)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $k1$ |\r\n| 2S1 -> 3S2 | $k2 * S1 / S2$ |\r\n| S2 -> | $k3 * S2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial concentration of species S2 | $0.001$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial value of parameter k2 | $3$ | constant |\r\n| Initial value of parameter k3 | $1.4$ | constant |\r\n| Initial value of parameter S1conv | $3$ | constant |\r\n| Initial value of parameter modelconv | $4$ | constant |\r\n| Initial volume of compartment 'default_compartment' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ndefault_compartment @Compartment { boundary: true, aux: {sboTerm: \"SBO:0000410\"}, } .= 1;\n\r\nS1 @Species { compartment: default_compartment, } .= 0;\r\nS2 @Species { compartment: default_compartment, } .= 0.001;\n\r\n_J0 @Reaction { actors:  = S1, };\r\n_J0 := k1;\r\n_J1 @Reaction { actors: 2*S1 = 3*S2, };\r\n_J1 := (k2 * S1) / S2;\r\n_J2 @Reaction { actors: S2 = , };\r\n_J2 := k3 * S2;\n\r\nk1 @Const { } = 1;\r\nk2 @Const { } = 3;\r\nk3 @Const { } = 1.4;\r\nS1conv @Const { } = 3;\r\nmodelconv @Const { } = 4;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      A three-step reaction scheme with a species conversion factor.\r\ncomponentTags: Compartment, Parameter, Reaction, Species\r\ntestTags:      Amount, ConversionFactors, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThis model tests conversion factors through a system of three reactions.  There is a conversion factor ('S1conv') on species S1.  This means that S1 is converted according to S1conv, and S2 is not converted.  This changes how S1 change in time, but not how S1 is interpreted in the reaction rates.\r\n\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 5 parameters (k1, k2, k3, S1conv, modelconv)\r\n* 1 compartment (default_compartment)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $k1$ |\r\n| 2S1 -> 3S2 | $k2 * S1 / S2$ |\r\n| S2 -> | $k3 * S2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial concentration of species S2 | $0.001$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial value of parameter k2 | $3$ | constant |\r\n| Initial value of parameter k3 | $1.4$ | constant |\r\n| Initial value of parameter S1conv | $3$ | constant |\r\n| Initial value of parameter modelconv | $4$ | constant |\r\n| Initial volume of compartment 'default_compartment' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ndefault_compartment @Compartment { boundary: true, aux: {sboTerm: \"SBO:0000410\"}, } .= 1;\n\r\nS1 @Species { compartment: default_compartment, } .= 0;\r\nS2 @Species { compartment: default_compartment, } .= 0.001;\n\r\n_J0 @Reaction { actors:  = S1, };\r\n_J0 := k1;\r\n_J1 @Reaction { actors: 2*S1 = 3*S2, };\r\n_J1 := (k2 * S1) / S2;\r\n_J2 @Reaction { actors: S2 = , };\r\n_J2 := k3 * S2;\n\r\nk1 @Const { } = 1;\r\nk2 @Const { } = 3;\r\nk3 @Const { } = 1.4;\r\nS1conv @Const { } = 3;\r\nmodelconv @Const { } = 4;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Several events conspire within the same time step to trigger three events multiple times, with different outcomes.\r\ncomponentTags: CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:      EventIsNotPersistent, EventIsPersistent, EventUsesAssignmentTimeValues, EventUsesTriggerTimeValues, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThis model contains two events that trigger when the parameter multitrig increases to \r\nabove 1.  The first is set 'persistent=true' and 'useValuesFromTriggerTime=false', and sets x=x+1, meaning that every time\r\nit triggers, it ends up increasing x by one.  \r\n\r\nThe second is set 'persistent=true' but 'useValuesFromTriggerTime=true', meaning that it executes\r\nmultiple times, but each time uses the value of y from the time it first triggered, meaning\r\nthat y gets reset to one four times.\r\n\r\nThe third is set 'persistent=false' and 'useValuesFromTriggerTime=false',\r\nand sets z=z+3, meaning that every time it triggers, it has the potential to increase z\r\nby three, but if multitrig drops below 1 again, it will not actually do so.  In the end,\r\nit only executes a single time.\r\n\r\nThe model also contains nine events with the same trigger and with decreasing priorities \r\nthat alternate setting the value of the parameter 'multitrig' from zero to 2, then to \r\nzero, then back again, etc.  The priorities of all these events are higher than the first \r\ntwo, meaning that at a single time point, the first two events are triggered five times,\r\nand 'de-triggered' four times.  Since the first event was persistent, x should increase\r\nfrom zero to five, and since the second event was not persistent, y should increase from\r\nzero to one.\r\n\r\nFor a different view of this model, see 00978-antimony.txt\r\n\r\nThe model contains:\r\n* 4 parameters (multitrig, x, y, z)\r\n\r\nThere are 12 events:\r\n\r\n[{width:45em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  |  *Use values from:*  | *Event Assignments* |\r\n| _E0 | $time &geq; 0.99$ | $10$ | true | Trigger time | $multitrig = 2$ |\r\n| _E1 | $time &geq; 0.99$ | $9$ | true | Trigger time | $multitrig = 0$ |\r\n| _E2 | $time &geq; 0.99$ | $8$ | true | Trigger time | $multitrig = 2$ |\r\n| _E3 | $time &geq; 0.99$ | $7$ | true | Trigger time | $multitrig = 0$ |\r\n| _E4 | $time &geq; 0.99$ | $6$ | true | Trigger time | $multitrig = 2$ |\r\n| _E5 | $time &geq; 0.99$ | $5$ | true | Trigger time | $multitrig = 0$ |\r\n| _E6 | $time &geq; 0.99$ | $4$ | true | Trigger time | $multitrig = 2$ |\r\n| _E7 | $time &geq; 0.99$ | $3$ | true | Trigger time | $multitrig = 0$ |\r\n| _E8 | $time &geq; 0.99$ | $2$ | true | Trigger time | $multitrig = 2$ |\r\n| _E9 | $multitrig > 1$ | $1$ | true | Assignment time | $x = x + 1$ |\r\n| _E10 | $multitrig > 1$ | $1$ | true | Trigger time | $y = y + 1$ |\r\n| _E11 | $multitrig > 1$ | $1$ | false | Assignment time | $z = z + 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter multitrig | $0$ | variable |\r\n| Initial value of parameter x | $0$ | variable |\r\n| Initial value of parameter y | $0$ | variable |\r\n| Initial value of parameter z | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nmultitrig @Record { } .= 0;\r\nmultitrig [_E0]= 2;\r\nmultitrig [_E1]= 0;\r\nmultitrig [_E2]= 2;\r\nmultitrig [_E3]= 0;\r\nmultitrig [_E4]= 2;\r\nmultitrig [_E5]= 0;\r\nmultitrig [_E6]= 2;\r\nmultitrig [_E7]= 0;\r\nmultitrig [_E8]= 2;\r\nx @Record { } .= 0;\r\nx [_E9]= x + 1;\r\ny @Record { } .= 0;\r\ny [_E10]= y + 1;\r\nz @Record { } .= 0;\r\nz [_E11]= z + 3;\n\r\n_E0 @DSwitcher { trigger: t >= 0.99, };\r\n_E1 @DSwitcher { trigger: t >= 0.99, };\r\n_E2 @DSwitcher { trigger: t >= 0.99, };\r\n_E3 @DSwitcher { trigger: t >= 0.99, };\r\n_E4 @DSwitcher { trigger: t >= 0.99, };\r\n_E5 @DSwitcher { trigger: t >= 0.99, };\r\n_E6 @DSwitcher { trigger: t >= 0.99, };\r\n_E7 @DSwitcher { trigger: t >= 0.99, };\r\n_E8 @DSwitcher { trigger: t >= 0.99, };\r\n_E9 @DSwitcher { trigger: multitrig > 1, };\r\n_E10 @DSwitcher { trigger: multitrig > 1, };\r\n_E11 @DSwitcher { trigger: multitrig > 1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two event where the two event assignments should not interfere with each other. \r\ncomponentTags: CSymbolTime, EventNoDelay, Parameter\r\ntestTags:      NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n This model contains two events that trigger when time > 0.98 and 0.99.  In each, there is on event assignment that changes the value of a parameter, and a second event assignment that uses that parameter to change the value of a second parameter.  However, the second event assignment should not use the changed value from the first parameter, but rather the value it had at the beginning of event assignment.  (This is true regardless of the value of 'useValuesFromTriggerTime', but the value of that flag here happens to be true.)\r\n\r\nThe model contains:\r\n* 4 parameters (x, y, p, q)\r\n\r\nThere are 2 events:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time &geq; 0.98$ | $y = y + x$ |\r\n|  |  | $x = 2$ |\r\n| _E1 | $time &geq; 0.99$ | $p = 3$ |\r\n|  |  | $q = p + 1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $0$ | variable |\r\n| Initial value of parameter y | $0$ | variable |\r\n| Initial value of parameter p | $0$ | variable |\r\n| Initial value of parameter q | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 0;\r\nx [_E0]= 2;\r\ny @Record { } .= 0;\r\ny [_E0]= y + x;\r\np @Record { } .= 0;\r\np [_E1]= 3;\r\nq @Record { } .= 0;\r\nq [_E1]= p + 1;\n\r\n_E0 @DSwitcher { trigger: t >= 0.98, };\r\n_E1 @DSwitcher { trigger: t >= 0.99, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two events with different 'initialValue's, causing one to fire and one to not fire.\r\ncomponentTags: EventNoDelay, Parameter\r\ntestTags:      EventT0Firing, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two events, one that assigns '1' to parameter p2, and one that assigns '1' to parameter p3.  Both have the same trigger, p1>0, which is true the entire time, but the first trigger is set 'initialValue=\"false\"' and the second 'initialValue=\"true\"'.  This causes the first to trigger at t0 and the second to not trigger.\r\n\r\nThe model contains:\r\n* 3 parameters (p1, p2, p3)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $p1 > 0$ | false | $p2 = 1$ |\r\n| E1 | $p1 > 0$ | true | $p3 = 1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | constant |\r\n| Initial value of parameter p2 | $0$ | variable |\r\n| Initial value of parameter p3 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np2 @Record { } .= 0;\r\np2 [E0]= 1;\r\np3 @Record { } .= 0;\r\np3 [E1]= 1;\n\r\np1 @Const { } = 1;\n\r\nE0 @DSwitcher { trigger: p1 > 0, };\r\nE1 @DSwitcher { trigger: p1 > 0, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two events with different 'initialValue's, causing one to fire and one to not fire.\r\ncomponentTags: EventNoDelay, Parameter, RateRule\r\ntestTags:      EventT0Firing, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nThe model contains two events, one that assigns '1' to parameter p2, and one that assigns '1' to parameter p3.  Both have the same trigger, p1>=1, which is true at t0, but is false thereafter due to a rate rule.  The first trigger is set 'initialValue=\"false\"' and the second 'initialValue=\"true\"'.  This causes the first to trigger at t0 and the second to not trigger.\r\n \r\nThe model contains:\r\n* 3 parameters (p1, p2, p3)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $p1 &geq; 1$ | false | $p2 = 1$ |\r\n| E1 | $p1 &geq; 1$ | true | $p3 = 1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p1 | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $-1$ | variable |\r\n| Initial value of parameter p2 | $0$ | variable |\r\n| Initial value of parameter p3 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1_proc @Process { actors:  = p1, };\r\np1_proc := (-1);\n\r\np1 @Record { } .= 1;\r\np2 @Record { } .= 0;\r\np2 [E0]= 1;\r\np3 @Record { } .= 0;\r\np3 [E1]= 1;\n\r\nE0 @DSwitcher { trigger: p1 >= 1, };\r\nE1 @DSwitcher { trigger: p1 >= 1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two events with different 'initialValue's, causing one to fire and one to not fire.\r\ncomponentTags: EventNoDelay, EventPriority, Parameter\r\ntestTags:      EventT0Firing, NonConstantParameter\r\ntestType:      TimeCourse\r\nlevels:        3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n The model contains two events, one that assigns '1' to parameter p2, and one that assigns '1' to parameter p3.  Both have the same trigger, p1>=1, which is true at t0, but is false thereafter due to a third event.  The first trigger is set 'initialValue=\"false\"' and the second 'initialValue=\"true\"'.  This causes the first to trigger at t0 and the second to not trigger.\r\n\r\nThe model contains:\r\n* 3 parameters (p1, p2, p3)\r\n\r\nThere are 3 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $p1 &geq; 1$ | $2$ | false | $p2 = 1$ |\r\n| E1 | $p1 &geq; 1$ | $2$ | true | $p3 = 1$ |\r\n| E2 | $p1 &geq; 1$ | $1$ | false | $p1 = 0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | variable |\r\n| Initial value of parameter p2 | $0$ | variable |\r\n| Initial value of parameter p3 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= 1;\r\np1 [E2]= 0;\r\np2 @Record { } .= 0;\r\np2 [E0]= 1;\r\np3 @Record { } .= 0;\r\np3 [E1]= 1;\n\r\nE0 @DSwitcher { trigger: p1 >= 1, };\r\nE1 @DSwitcher { trigger: p1 >= 1, };\r\nE2 @DSwitcher { trigger: p1 >= 1, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Species with an initialConcentration but hasOnlySubstanceUnits=\"true\".\r\ncomponentTags: Compartment, Reaction, Species\r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nThe single species in this model has an initial concentration of '1', but lives in a compartment of size 5, giving it an initial amount of 5. Since 'hasOnlySubstanceUnits' is 'true', this amount is what is used for the rate rule of the reaction (10/S1).\r\n\r\nFor comparison, if the initialConcentration of the species is changed to an initialAmount of '5', the same numerical results should be obtained.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (comp)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> S1 | $10 / S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $5$ | variable |\r\n| Initial volume of compartment 'comp' | $5$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { boundary: true, } .= 5;\n\r\nS1 @Species { compartment: comp, isAmount: true, } .= 1 * comp;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := 10 / S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Testing different versions of initialAmount vs. initialConcentration with hasOnlySubstanceUnits=true/false, in a constant and varying compartment.\r\ncomponentTags: AssignmentRule, Compartment, Parameter, RateRule, Species\r\ntestTags:      Amount, HasOnlySubstanceUnits, MultiCompartment, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n This model has four species in a constant (non-unity) compartment with the four different combinations of being set by initialAmount or initialConcentration, and being set 'hasOnlySubstanceUnits' equal to true or false.  It also has another four species with the same spread, in a different compartment whose volume changes over time.  Each of these eight species is assigned to a parameter, to catch the 'hasOnlySubstanceUnits' differences (every other parameter has units of amount or concentration, respectively).\r\n\r\nThe model contains:\r\n* 8 species (S1, S2, S3, S4, S5, S6, S7, S8)\r\n* 8 parameters (p1, p2, p3, p4, p5, p6, p7, p8)\r\n* 2 compartments (comp1, comp2)\r\n\r\nThere are 9 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | comp2 | $1$ |\r\n| Assignment | p1 | $S1$ |\r\n| Assignment | p2 | $S2$ |\r\n| Assignment | p3 | $S3$ |\r\n| Assignment | p4 | $S4$ |\r\n| Assignment | p5 | $S5$ |\r\n| Assignment | p6 | $S6$ |\r\n| Assignment | p7 | $S7$ |\r\n| Assignment | p8 | $S8$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial concentration of species S2 | $2$ | variable |\r\n| Initial amount of species S3 | $3$ | variable |\r\n| Initial amount of species S4 | $4$ | variable |\r\n| Initial concentration of species S5 | $5$ | variable |\r\n| Initial concentration of species S6 | $6$ | variable |\r\n| Initial amount of species S7 | $7$ | variable |\r\n| Initial amount of species S8 | $8$ | variable |\r\n| Initial value of parameter p1 | $S1$ | variable |\r\n| Initial value of parameter p2 | $S2$ | variable |\r\n| Initial value of parameter p3 | $S3$ | variable |\r\n| Initial value of parameter p4 | $S4$ | variable |\r\n| Initial value of parameter p5 | $S5$ | variable |\r\n| Initial value of parameter p6 | $S6$ | variable |\r\n| Initial value of parameter p7 | $S7$ | variable |\r\n| Initial value of parameter p8 | $S8$ | variable |\r\n| Initial volume of compartment 'comp1' | $10$ | constant |\r\n| Initial volume of compartment 'comp2' | $10$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp1 @Compartment { boundary: true, } .= 10;\r\ncomp2 @Compartment { } .= 10;\n\r\nS1 @Species { compartment: comp1, } .= 1;\r\nS2 @Species { compartment: comp1, isAmount: true, } .= 2 * comp1;\r\nS3 @Species { compartment: comp1, } .= 3 / comp1;\r\nS4 @Species { compartment: comp1, isAmount: true, } .= 4;\r\nS5 @Species { compartment: comp2, } .= 5;\r\nS6 @Species { compartment: comp2, isAmount: true, } .= 6 * comp2;\r\nS7 @Species { compartment: comp2, } .= 7 / comp2;\r\nS8 @Species { compartment: comp2, isAmount: true, } .= 8;\n\r\ncomp2_proc @Process { actors:  = comp2, };\r\ncomp2_proc := 1;\n\r\np1 @Record { };\r\np1 := S1;\r\np2 @Record { };\r\np2 := S2;\r\np3 @Record { };\r\np3 := S3;\r\np4 @Record { };\r\np4 := S4;\r\np5 @Record { };\r\np5 := S5;\r\np6 @Record { };\r\np6 := S6;\r\np7 @Record { };\r\np7 := S7;\r\np8 @Record { };\r\np8 := S8;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a size-10 compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nNote:  This test is a direct copy of test 00060, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$           10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a size-10 compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00061, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 1.7 \\x 10^1$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$           10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.002;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 17;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a size-10 compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00062, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|        |*Value*         |*Units*  |\r\n|Initial amount of S1                 |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                 |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                 |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                 |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1                |$  1.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2                |$  0.3 \\x 10^6$ |litre mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\"  |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 5e-7;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 300000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction using functionDefinitions with two \r\nspecies in a size-10 compartment where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nNote:  This test is a direct copy of test 00113, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  The model contains one\r\nreaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $multiply(k1,S1)$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$            0$ |mole                      |\r\n|Value of parameter k1               |$          1.5$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.15;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := multiply(k1, S1);\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reactions using functionDefinitions with three species in a size-10 compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00114, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * multiply(S1,S2)$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-2$ |mole                      |\r\n|Value of parameter k1               |$ 1.7 $ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they\r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.02;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * multiply(S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 1.7;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions using functiondefinitions with four species in a size-10 compartment \r\n               where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00115, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * multiply(S1,S2)$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\n\r\nThe model contains one functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y | $x * y$ |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|       |*Value*         |*Units*  |\r\n|Initial amount of S1                |$ 1.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$ 2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$ 0.5 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$  1.3 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$  0.3 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Volume of compartment \"compartment\" |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 5e-7;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * multiply(S1, S2);\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 1300000;\r\nk2 @Const 'k2' { } = 300000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 2-dimensional\r\nsize-10 compartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00208, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is two-dimensional.  Species S1 and S2 are declared to have\r\nonly substance units.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|     |*Value*         |*Units*  |\r\n|Initial amount of S1              |$1.5 \\x 10^-4$ |mole                      |\r\n|Initial amount of S2              |$  1 \\x 10^-4$ |mole                      |\r\n|Value of parameter k1             |$            1$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            10$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only.  Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-4;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1e-4;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reactions and two rate rules with four species in a size-10 compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nNote:  This test is a direct copy of test 00333, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains one reaction defined as:\r\n\r\n[{width:25em,=}|  *Reaction*  |  *Rate*               |\r\n|              S1 -> S2     | $k1 * S1$ |]\r\n\r\nThe model contains two rules:\r\n\r\n[{width:25em,=}|  *Type*  |  *Variable*  |  *Formula*          |\r\n|                  Rate | S3         | $k1  *  0.5 10^-3$  |\r\n|                  Rate | S4         | $-k2  *  0.5 10^-3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,=}|                         |*Value*           |*Units*       |\r\n|Initial amount of S1                |$ 1.5 \\x 10^-3$ |mole         |\r\n|Initial amount of S2                |$ 2.0 \\x 10^-3$ |mole         |\r\n|Initial amount of S3                |$ 1.5 \\x 10^-3$ |mole         |\r\n|Initial amount of S4                |$   4 \\x 10^-3$ |mole         |\r\n|Value of parameter k1               |$        0.693$ |second^-1^   |\r\n|Value of parameter k2               |$         0.25$ |second^-1^   |\r\n|Volume of compartment \"compartment\" |$            10$ |litre        |]\r\n\r\nThe species have been declared as having substance units only (meaning that\r\nthe attribute %hasOnlySubstanceUnits% is set to true). Thus, they must be\r\ntreated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.002;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.004;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := 5e-4 * k1;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule2\"}, };\r\nS4_proc := (-5e-4) * k2;\n\r\nk1 @Const 'k1' { } = 0.693;\r\nk2 @Const 'k2' { } = 0.25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 2-dimensional\r\nsize-10 compartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00209, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  Species S1, S2 and S3 are\r\ndeclared to have only substance units.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2              |$2.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3              |$1.0 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1             |$           75$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$           25$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            10$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only.  Thus, they\r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.2;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 75;\r\nk2 @Const 'k2' { } = 25;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 2-dimensional\r\ncompartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00210, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 2-dimensional.  All four species are declared\r\nto have only substance units.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1              |$1.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S2              |$1.5 \\x 10^-3$ |mole                      |\r\n|Initial amount of S3              |$2.0 \\x 10^-3$ |mole                      |\r\n|Initial amount of S4              |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1             |$ 7.5 \\x 10^3$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2             |$0.25 \\x 10^3$ |mole^-1^ second^-1^ |\r\n|Area of compartment \"compartment\" |$            10$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only.  Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre^2, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.0015;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.002;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 7500;\r\nk2 @Const 'k2' { } = 250;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with two species in a 1-dimensional\r\nsize-10 compartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nNote:  This test is a direct copy of test 00223, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are two\r\nspecies named S1 and S2 and one parameter named k1.  Compartment\r\n\"compartment\" is one-dimensional.  Species S1 and S2 are declared to have\r\nonly substance units.  The model contains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1              |$ 1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2              |$   1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1             |$          1.5$ |second^-1^ |\r\n|Area of compartment \"compartment\" |$            10$ |metre^2^                  |]\r\n\r\nThe species have been declared as having substance units only. Thus, they\r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\n\r\nk1 @Const 'k1' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction with two species in a 1-dimensional\r\n               size-10 compartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00224, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  Species S1, S2 and S3 are\r\ndeclared to have only substance units.  The model contains two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$          1.0$ |mole                      |\r\n|Initial amount of S2                |$          2.0$ |mole                      |\r\n|Initial amount of S3                |$          1.5$ |mole                      |\r\n|Value of parameter k1               |$          7.5$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$          0.3$ |second^-1^ |\r\n|Length of compartment \"compartment\" |$            10$ |metre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 2;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 7.5;\r\nk2 @Const 'k2' { } = 0.3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic two reactions with four species in a 1-dimensional\r\n               size-10 compartment, where the species have only substance units.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00225, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.\r\nCompartment \"compartment\" is 1-dimensional.  All four species are declared\r\nto have only substance units.  The model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 + S4 | $k1 * S1 * S2$  |\r\n| S3 + S4 -> S1 + S2 | $k2 * S3 * S4$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-2$ |mole                      |\r\n|Initial amount of S3                |$2.0 \\x 10^-2$ |mole                      |\r\n|Initial amount of S4                |$1.0 \\x 10^-3$ |mole                      |\r\n|Value of parameter k1               |$ 6.2 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$   5 \\x 10^2$ |mole^-1^ second^-1^ |\r\n|Length of compartment \"compartment\" |$            10$ |metre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: metre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.01;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.015;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.02;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 0.001;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3 + S4, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 + S4 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3 * S4;\n\r\nk1 @Const 'k1' { } = 620;\r\nk2 @Const 'k2' { } = 500;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic single forward reaction with three species in one\r\n               size-10 compartment using an AssignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, HasOnlySubstanceUnits, InitialValueReassigned, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00295, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k2 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S3       | $k1 * S2$  |]\r\n\r\nIn this case there is no initial value declared for species S3.  Thus the\r\ninitial value must be calculated by the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3                |$   undeclared$ |mole                      |\r\n|Value of parameter k1               |$         1.05$ |dimensionless             |\r\n|Value of parameter k2               |$         1.15$ |second^-1^                |\r\n|Volume of compartment \"compartment\" |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.15;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, };\r\nS3 := k1 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k2 * S1;\n\r\nk1 @Const 'k1' { } = 1.05;\r\nk2 @Const 'k2' { } = 1.15;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions with four species in one\r\n               size-10 compartment using an assignmentRule to vary one species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00296, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and three parameters named k1, k2 and k3.\r\nThe model contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $k3 * S2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S2                |$ 1.5 \\x 10^-5$ |mole                      |\r\n|Initial amount of S3                |$   1 \\x 10^-5$ |mole                      |\r\n|Initial amount of S4                |$2.25 \\x 10^-5$ |mole                      |\r\n|Value of parameter k1               |$  1.5 \\x 10^5$ |litre mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$           50$ |second^-1^ |\r\n|Value of parameter k3               |$          1.5$ |dimensionless |\r\n|Volume of compartment \"compartment\" |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1e-5;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-5;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1e-5;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 2.25e-5;\r\nS4 := k3 * S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\n\r\nk1 @Const 'k1' { } = 150000;\r\nk2 @Const 'k2' { } = 50;\r\nk3 @Const 'k3' { } = 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Basic reaction and rate rule with three species in a size-10 compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\nNote:  This test is a direct copy of test 00331, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are three\r\nspecies named S1, S2 and S3 and two parameters named k1 and k2.  The model\r\ncontains one reaction defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 -> S2 | $k1 * S1$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S3 | $k1 * k2$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-1$ |mole                      |\r\n|Initial amount of S2                |$1.0 \\x 10^-1$ |mole                      |\r\n|Initial amount of S3                |$1.0 \\x 10^-1$ |mole                      |\r\n|Value of parameter k1               |$         1.75$ |second^-1^ |\r\n|Value of parameter k2               |$1.5 \\x 10^-2$ |mole |\r\n|Volume of compartment \"compartment\" |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical solution\r\nof the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 0.15;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 0.1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 = S2, reversible: false, };\r\nreaction1 := k1 * S1;\r\nS3_proc @Process { actors:  = S3, aux: {metaid: \"rule1\"}, };\r\nS3_proc := k1 * k2;\n\r\nk1 @Const 'k1' { } = 1.75;\r\nk2 @Const 'k2' { } = 0.015;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reactions and a rate rule with four species in a size-10 compartment. \r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule\r\ntestTags:      Amount, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a direct copy of test 00332, but with a size-10 compartment, to test the 'hasOnlySubstanceUnits' attribute.  The model should have exactly the same results, as concentration should have never been used to calculate anything.\r\n \r\nThe model contains one compartment called \"compartment\".  There are four\r\nspecies named S1, S2, S3 and S4 and two parameters named k1 and k2.  The\r\nmodel contains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 -> S3 | $k1 * S1 * S2$  |\r\n| S3 -> S1 + S2 | $k2 * S3$  |]\r\n\r\nThe model contains one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $1 10^-7$  |]\r\n\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}|      |*Value*          |*Units*  |\r\n|Initial amount of S1                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S2                |$2.0 \\x 10^-6$ |mole                      |\r\n|Initial amount of S3                |$1.5 \\x 10^-6$ |mole                      |\r\n|Initial amount of S4                |$  1 \\x 10^-6$ |mole                      |\r\n|Value of parameter k1               |$0.75 \\x 10^6$ |mole^-1^ second^-1^ |\r\n|Value of parameter k2               |$0.25 \\x 10^-3$ |second^-1^ |\r\n|Volume of compartment \"compartment\" |$            10$ |litre                     |]\r\n\r\nThe species have been declared as having substance units only. Thus, they \r\nmust be treated as amounts where they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\ncompartment @Compartment 'compartment' { units: litre, boundary: true, } .= 10;\n\r\nS1 @Species 'S1' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS2 @Species 'S2' { units: mole, compartment: compartment, isAmount: true, } .= 2e-6;\r\nS3 @Species 'S3' { units: mole, compartment: compartment, isAmount: true, } .= 1.5e-6;\r\nS4 @Species 'S4' { units: mole, compartment: compartment, isAmount: true, } .= 1e-6;\n\r\nreaction1 @Reaction 'reaction1' { actors: S1 + S2 = S3, reversible: false, };\r\nreaction1 := k1 * S1 * S2;\r\nreaction2 @Reaction 'reaction2' { actors: S3 = S1 + S2, reversible: false, };\r\nreaction2 := k2 * S3;\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (1e-7);\n\r\nk1 @Const 'k1' { } = 750000;\r\nk2 @Const 'k2' { } = 0.00025;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 818, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  Species S1 is labeled as an \r\nSBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 819, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S1 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 820, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S1 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, boundary: true, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 821, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  Species S2 is labeled as an \r\nSBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 822, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S3 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0.4$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, boundary: true, compartment: C, } .= 0.4 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, BoundaryCondition\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 823, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  Species S2 is labeled as \r\nan SBML boundary species.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, boundary: true, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 824, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> 2S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: 2*S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 825, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + 2S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + 2*S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, NonUnityStoichiometry\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 826, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + 2S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + 2*S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with global and local parameters.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 830, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  two reactions\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(kf * S3 - kr * S4) * C$  |]\r\n\r\nReaction S1 <-> S2 defines two local parameters kf and kr which have a\r\nscope local to the defining reaction and are different from the global parameters kf\r\nand kr used in the Reaction S3 <-> S4.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Value of local parameter kf       |$0.8$          |second^-1^ |\r\n|Value of local parameter kr       |$0.06$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf__reaction1_local * S1 + (-1) * kr__reaction1_local * S2)));\r\nreaction2 @Reaction 'reaction2' { actors: S4 = S3, };\r\nreaction2 := (-(C * (kf * S3 + (-1) * kr * S4)));\n\r\nkf__reaction1_local @Const { } = 0.8;\r\nkr__reaction1_local @Const { } = 0.06;\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with local parameters.\r\ncomponentTags: Compartment, Species, Reaction \r\ntestTags:      Amount, ReversibleReaction, LocalParameters\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 831, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2.  The model contains  two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(kf * S3 - kr * S4) * C$  |]\r\n\r\nBoth reactions define two local parameters kf and kr which have a\r\nscope local to the defining reaction.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of local parameter kf (R1)       |$0.8$          |second^-1^ |\r\n|Value of local parameter kr (R1)      |$0.06$          |second^-1^ |\r\n|Value of local parameter kf (R1)      |$0.9$          |second^-1^ |\r\n|Value of local parameter kr (R2)      |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf__reaction1_local * S1 + (-1) * kr__reaction1_local * S2)));\r\nreaction2 @Reaction 'reaction2' { actors: S4 = S3, };\r\nreaction2 := (-(C * (kf__reaction2_local * S3 + (-1) * kr__reaction2_local * S4)));\n\r\nkf__reaction1_local @Const { } = 0.8;\r\nkr__reaction1_local @Const { } = 0.06;\r\nkf__reaction2_local @Const { } = 0.9;\r\nkr__reaction2_local @Const { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 832, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(multiply(kf, S1) - kr * S2) * C$  |]\r\n\r\nThe reaction applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.59$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (multiply(kf, S1) + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.59;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 833, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(multiply(multiply(kf, S1), S2) - kr * S3) * C$  |]\r\n\r\nThe reaction applies the functionDefinition defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.11$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (multiply(multiply(kf, S1), S2) + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.11;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, FunctionDefinition \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 834, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(minus(multiply(kf, S1), kr * S2 * S3)) * C$  |]\r\n\r\nThe reaction applies two functionDefinitions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | multiply | x, y      | $x * y$   |\r\n | minus | x, y      | $x - y$   |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\nmultiply #defineFunction { arguments: [x, y], math: x * y, };\r\nminus #defineFunction { arguments: [x, y], math: x + (-1) * y, };\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * minus(multiply(kf, S1), kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 1.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction with an initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment  \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 835, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called kf, kr and p1.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\nconsistent with the value returned by the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Value of parameter p1       |$0.5$           |mole                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction with an initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment  \r\ntestTags:      Amount, ReversibleReaction, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 836, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called kf, kr and p1.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.  In this case the initial value declared for species S1 is\r\ninconsistent with the value returned by the InitialAssignment.  The\r\ncalculated value should be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Value of parameter p1       |$0.5$           |mole                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction with an initial assignment.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, InitialAssignment  \r\ntestTags:      Amount, ReversibleReaction, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 837, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and three parameters called kf, kr and p1.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe model contains one initialAssignment:\r\n\r\n[{width:30em,margin: 1em auto}| Variable | Formula |\r\n | S1 | $p1 * 2$  |]\r\n\r\nNote: SBML's InitialAssignment construct override any declared initial\r\nvalues.   In this model, the initial value for the species S1 has not been\r\nexplicitly declared and must be calculated using the InitialAssignment.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$undeclared$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Value of parameter p1       |$0.5$           |mole                |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 2 * p1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\r\np1 @Const 'p1' { } = 0.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, ReversibleReaction, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 838, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which assigns value to parameter kf:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | kf | $2.5$  |]\r\n\r\nIn this case there is no initial value declared for parameter k1.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$undeclared$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Record 'kf' { };\r\nkf := 2.5;\n\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, ReversibleReaction, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 839, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $0.5 * S1$  |]\r\n\r\nIn this case there is no initial value declared for species S4.  Thus the\r\nvalue must be calculated using the assignmentRule.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$undeclared$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, };\r\nS4 := 0.5 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, AssignmentRule \r\ntestTags:      Amount, ReversibleReaction, InitialValueReassigned\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 840, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which assigns value to species S4:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Assignment | S4 | $0.5 * S1$  |]\r\n\r\nIn this case the initial value declared for species S4 is inconsistent\r\nwith the value calculated using the assignmentRule.  The calculated value\r\nshould be used.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 5 / C;\r\nS4 := 0.5 * S1;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 841, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which specifies the rate at which species \r\nS4 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $-0.5 * (kf * S1 - kr * S2 * S3)$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$0.5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (-0.5) * (kf * S1 + (-1) * kr * S2 * S3);\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 842, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which specifies the rate at which species \r\nS4 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $-0.5 * S1$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$0.5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := (-0.5) * S1;\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, RateRule \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 843, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are four species called \r\nS1, S2, S3 and S4 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe model contains one rule which specifies the rate at which species \r\nS4 is varying:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n | Rate | S4 | $0.15$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Initial amount of S4        |$0.5$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 0.5 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\r\nS4_proc @Process { actors:  = S4, aux: {metaid: \"rule1\"}, };\r\nS4_proc := 0.15;\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      One reversible reactions with two species in one compartment\r\n               and one event that assigns value to a species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 845, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species\r\ncalled S1, S2 and S3 and two parameters called k1 and k2.  The model\r\ncontains one reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe model contains one event that assigns values to species S1:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.75$ | $-$     | $S2 = 1.5$    |]\r\n \r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2         |$2.0$   |mole                      |\r\n|Value of parameter kf         |$0.9$  |second^-1^ |\r\n|Value of parameter kr         |$0.075$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with four species in one compartment\r\n               and one event that assigns value to two species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 846, with the products and reactants reversed, \r\nand a negative kinetic law.  This gives the same results, but during the simulation, \r\nthe kinetic law actually goes negative (a requirement for reversibe reactions).  \r\nThe reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are four species\r\ncalled S1, S2, S3 and S4 and four parameters called k1, k2, kf and kr.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(k1 * S3 - k2 * S4) * C$  |]\r\n\r\nThe model contains one event that assigns values to both species S2 and S4:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.5$ | $-$     | $S2 = 1.5$    |\r\n |                             |             |         | $S4 = S2$     |]\r\n \r\nNote that the event assignments should happen simultaneously, not\r\nsequentially; i.e., the value of S2 assigned to S4 is the value at the\r\npoint at which the event was triggered.\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Initial amount of S4          |$1.5$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |second^-1^                |\r\n|Value of parameter k2         |$0.15$  |second^-1^                |\r\n|Value of parameter kf         |$0.9$  |second^-1^                |\r\n|Value of parameter kr         |$0.075$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 [event1]= S2;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\r\nreaction2 @Reaction 'reaction2' { actors: S4 = S3, };\r\nreaction2 := (-(C * (k1 * S3 + (-1) * k2 * S4)));\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.15;\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Two reversible reactions with four species in one compartment\r\n               and two events that assigns value to species.\r\ncomponentTags: Compartment, Species, Reaction, Parameter, EventNoDelay \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 847, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are four species\r\ncalled S1, S2, S3 and S4 and four parameters called k1, k2, kf and kr.  The model\r\ncontains two reactions defined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |\r\n| S3 <-> S4 | $(k1 * S3 - k2 * S4) * C$  |]\r\n\r\nThe model contains two event that assigns values to species S2 and S4 respectively:\r\n\r\n[{width:30em,margin: 1em auto}| | *Trigger*   | *Delay* | *Assignments* |\r\n | Event1                      | $S1 < 0.5$  | $-$     | $S2 = 1.5$    |\r\n | Event2                      | $S3 < 0.75$ | $-$     | $S4 = 0.5$     |]\r\n \r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value* |*Units*  |\r\n|Initial amount of S1          |$1.0$   |mole                      |\r\n|Initial amount of S2          |$2.0$   |mole                      |\r\n|Initial amount of S3          |$1.0$   |mole                      |\r\n|Initial amount of S4          |$1.5$   |mole                      |\r\n|Value of parameter k1         |$0.75$  |second^-1^                |\r\n|Value of parameter k2         |$0.15$  |second^-1^                |\r\n|Value of parameter kf         |$0.9$  |second^-1^                |\r\n|Value of parameter kr         |$0.075$  |second^-1^                |\r\n|Volume of compartment C       |$1$     |litre                     |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 2 / C;\r\nS2 [event1]= 1.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS4 @Species 'S4' { units: mole/litre, compartment: C, } .= 1.5 / C;\r\nS4 [event2]= 0.5;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\r\nreaction2 @Reaction 'reaction2' { actors: S4 = S3, };\r\nreaction2 := (-(C * (k1 * S3 + (-1) * k2 * S4)));\n\r\nk1 @Const 'k1' { } = 0.75;\r\nk2 @Const 'k2' { } = 0.15;\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\nevent1 @DSwitcher 'event1' { trigger: S1 < 0.5, };\r\nevent2 @DSwitcher 'event2' { trigger: S3 < 0.75, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 809, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 810, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\nNote:  This test is a copy of model 811, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$1$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 1;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\n Note:  This test is a copy of model 812, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0$ |mole                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$0.5$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\n Note:  This test is a copy of model 813, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$2.3$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Amount, ReversibleReaction, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\n Note:  This test is a copy of model 814, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial amount of S1        |$1.0$ |mole                      |\r\n|Initial amount of S2        |$0.5$ |mole                      |\r\n|Initial amount of S3        |$0$ |mole                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$0.95$             |litre                  |]\r\n\r\nThe species values are given as amounts of substance to make it easier to\r\nuse the model in a discrete stochastic simulator, but (as per usual SBML\r\nprinciples) their symbols represent their values in concentration units\r\nwhere they appear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.95;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1 / C;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5 / C;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0 / C;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, ReversibleReaction, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\n Note:  This test is a copy of model 815, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are two species called \r\nS1 and S2 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 | $(kf * S1 - kr * S2) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$0$ |mole litre^-1^                      |\r\n|Value of parameter kf       |$0.9$          |second^-1^ |\r\n|Value of parameter kr       |$0.075$          |second^-1^ |\r\n|Volume of compartment C     |$0.5$             |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.5;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2)));\n\r\nkf @Const 'kf' { } = 0.9;\r\nkr @Const 'kr' { } = 0.075;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, ReversibleReaction, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\n Note:  This test is a copy of model 816, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 + S2 <-> S3 | $(kf * S1 * S2 - kr * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$0.5$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$0$ |mole litre^-1^                      |\r\n|Value of parameter kf       |$1.1$          |litre mole^-1^ second^-1^ |\r\n|Value of parameter kr       |$0.09$          |second^-1^ |\r\n|Volume of compartment C     |$2.3$             |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 2.3;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S3 = S1 + S2, };\r\nreaction1 := (-(C * (kf * S1 * S2 + (-1) * kr * S3)));\n\r\nkf @Const 'kf' { } = 1.1;\r\nkr @Const 'kr' { } = 0.09;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Single reversible reaction.\r\ncomponentTags: Compartment, Species, Reaction, Parameter \r\ntestTags:      Concentration, ReversibleReaction, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Numeric\r\n\r\n Note:  This test is a copy of model 817, with the products and reactants reversed, and a negative kinetic law.  This gives the same results, but during the simulation, the kinetic law actually goes negative (a requirement for reversibe reactions).  The reaction listed below is therfore equivalent to the one in the file, but reversed from it.\r\n\r\nThe model contains one compartment called C.  There are three species called \r\nS1, S2 and S3 and two parameters called kf and kr.  The model contains  one reaction\r\ndefined as:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S1 <-> S2 + S3 | $(kf * S1 - kr * S2 * S3) * C$  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:30em,margin: 1em auto}| |*Value*       |*Units*  |\r\n|Initial concentration of S1        |$1.0$ |mole litre^-1^                      |\r\n|Initial concentration of S2        |$0.5$ |mole litre^-1^                      |\r\n|Initial concentration of S3        |$0$ |mole litre^-1^                      |\r\n|Value of parameter kf       |$2.5$          |second^-1^ |\r\n|Value of parameter kr       |$0.2$          |litre mole^-1^ second^-1^ |\r\n|Volume of compartment C     |$0.95$             |litre                  |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { units: second, };\n\r\nC @Compartment 'C' { units: litre, boundary: true, } .= 0.95;\n\r\nS1 @Species 'S1' { units: mole/litre, compartment: C, } .= 1;\r\nS2 @Species 'S2' { units: mole/litre, compartment: C, } .= 0.5;\r\nS3 @Species 'S3' { units: mole/litre, compartment: C, } .= 0;\n\r\nreaction1 @Reaction 'reaction1' { actors: S2 + S3 = S1, };\r\nreaction1 := (-(C * (kf * S1 + (-1) * kr * S2 * S3)));\n\r\nkf @Const 'kf' { } = 2.5;\r\nkr @Const 'kr' { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Testing 'piecewise' without 'otherwise'.\r\ncomponentTags: InitialAssignment, Parameter\r\ntestTags:      InitialValueReassigned, UncommonMathML\r\ntestType:      TimeCourse\r\nlevels:        2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n MathML allows the construction of 'piecwise' functions without 'otherwise'.  When all cases are accounted for, this shouldn't make a difference in the output of the model.\r\n\r\nThe model contains:\r\n* 2 parameters (a, b)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter a | $piecewise(1, true)$ | constant |\r\n| Initial value of parameter b | $piecewise(1, gt(a, 0), 2, leq(a, 0))$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\na @Record { } .= piecewise(1, true);\r\nb @Record { } .= piecewise(1, a > 0, 2, a <= 0);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      Testing that the species amount does not change, even in a changing compartment.\r\ncomponentTags: Compartment, RateRule, Species\r\ntestTags:      Amount, ConstantSpecies, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n This model tests that the simulator should, by default, assume that a species set boundaryCondition=false and hasOnlySubstanceUnits=false, residing in a compartment that changes over time, should keep its *amount* constant, not its concentration.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | C | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { } .= 1;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 1;\n\r\nC_proc @Process { actors:  = C, };\r\nC_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:      Test\r\nsynopsis:      A model that tests how not to vary a species.\r\ncomponentTags: Compartment, RateRule, Species\r\ntestTags:      Amount, BoundaryCondition, ConstantSpecies, NonConstantCompartment, NonUnityCompartment\r\ntestType:      TimeCourse\r\nlevels:        1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:   Analytic\r\n\r\n This model tests that the simulator should, by default, assume that a species set boundaryCondition=true and hasOnlySubstanceUnits=false, residing in a compartment that changes over time, should keep its *amount* constant, not its concentration.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | C | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { } .= 1;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 1;\n\r\nC_proc @Process { actors:  = C, };\r\nC_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Test of proper interpretation of a boundary species set hasOnlySubstanceUnits=false in a reaction rate.\r\ncomponentTags:   Compartment, RateRule, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, NonConstantCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n This model is a further simplification of test 1000/1121 that only test the use of a boundary species, used in the model in terms of concentrations, from a compartment that varies in time, used in a reaction rate, with hasOnlySubstanceUnits = false.\r\n\r\nThe model contains:\r\n* 2 species (S1, S3)\r\n* 1 compartment (comp)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| _J0: S1 -> | $S3 / 10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | comp | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S3 | $4$ | variable |\r\n| Initial volume of compartment 'comp' | $5$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { } .= 5;\n\r\nS1 @Species { compartment: comp, } .= 1 / comp;\r\nS3 @Species { boundary: true, compartment: comp, } .= 4 / comp;\n\r\n_J0 @Reaction { actors: S1 = , modifiers: [S3], };\r\n_J0 := S3 / 10;\r\ncomp_proc @Process { actors:  = comp, };\r\ncomp_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Test of proper interpretation of a boundary species set hasOnlySubstanceUnits=true in a reaction rate.\r\ncomponentTags:   Compartment, RateRule, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, NonConstantCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n This model is a further simplification of test 1000/1121 that only test the use of a boundary species, used in the model in terms of concentrations, from a compartment that varies in time, used in a reaction rate, with hasOnlySubstanceUnits = true.\r\n\r\nThe model contains:\r\n* 2 species (S1, S3)\r\n* 1 compartment (comp)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| _J0: S1 -> | $S3 / 10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | comp | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S3 | $4$ | variable |\r\n| Initial volume of compartment 'comp' | $5$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { } .= 5;\n\r\nS1 @Species { compartment: comp, } .= 1 / comp;\r\nS3 @Species { boundary: true, compartment: comp, isAmount: true, } .= 4;\n\r\n_J0 @Reaction { actors: S1 = , modifiers: [S3], };\r\n_J0 := S3 / 10;\r\ncomp_proc @Process { actors:  = comp, };\r\ncomp_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Simple non-required comp model.\r\ncomponentTags:   Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This hierarchical model replaces the single parameter in the submodel, and therefore behaves as if the submodel did not exist.  The comp package 'required' attribute is therefore 'false', meaning that the mathematical meaning of the model is not changed by the presence of 'comp' elements.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (param1)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter param1 | $10.42$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nparam1 @Const { } = 10.42;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Simple non-required comp model\r\ncomponentTags:   Parameter, comp:ModelDefinition, comp:Port, comp:ReplacedElement, comp:Submodel\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis hierarchical model replaces the single parameter in the submodel, and therefore behaves as if the submodel did not exist.  The comp package 'required' attribute is therefore 'false', meaning that the mathematical meaning of the model is not changed by the presence of 'comp' elements.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (param1)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter param1 | $10.42$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nparam1 @Const { } = 10.42;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple hierarchical model with a submodel parameter\r\ncomponentTags:   Parameter, comp:ModelDefinition, comp:Port, comp:ReplacedElement, comp:Submodel\r\ntestTags:        comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThere are two parameters in this model, one in the parent model which replaces a paramter in the submodel, and a second parameter from the submodel that remains unreplaced.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (param1, submod1__subparam2)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter param1 | $10.42$ | constant |\r\n| Initial value of parameter submod1__subparam2 | $6$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nparam1 @Const { } = 10.42;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a submodel initial assignment and rate rule.\r\ncomponentTags:   InitialAssignment, Parameter, RateRule, comp:ModelDefinition, comp:Port, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The parent model contains a parameter that replaces a paramter of the submodel. That submodel has an initial assignment and a rate rule that both affect that replaced parameter, and should continue to affect the replacement parameter.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (param1, submod1__subparam2)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | param1 | $8 * submod1__subparam2 + param1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter submod1__subparam2 | $6$ | constant |\r\n| Initial value of parameter param1 | $submod1__subparam2 + 6$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nparam1 @Record { } .= 10.42;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An aggregate model with species.\r\ncomponentTags:   Compartment, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, ConstantSpecies, MultiCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nA simple multi-level aggregate model with species and compartments.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 species (S1, sub1__S1, sub2__S1, sub2__sub1__S1)\r\n* 4 compartments (C, sub1__C, sub2__C, sub2__sub1__C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $5$ | constant |\r\n| Initial amount of species sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub2__S1 | $9$ | constant |\r\n| Initial amount of species sub2__sub1__S1 | $7$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub2__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub2__sub1__C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 5 / C;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a sub-submodel compartment replacement.\r\ncomponentTags:   Compartment, Species, comp:ModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Concentration, ConstantSpecies, NonUnityCompartment, MultiCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model tests replacing a compartment in a sub-submodel with a comparment from the parent model, changing the concentration of the species in that submodel.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 species (S1, sub1__S1, sub2__S1, sub2__sub1__S1)\r\n* 3 compartments (C, sub1__C, sub2__C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $5$ | constant |\r\n| Initial amount of species sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub2__S1 | $9$ | constant |\r\n| Initial amount of species sub2__sub1__S1 | $7$ | constant |\r\n| Initial volume of compartment 'C' | $10$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub2__C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 10;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 5 / C;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A three-level-deep hierarchical model.\r\ncomponentTags:   Compartment, Species, comp:ModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Concentration, ConstantSpecies, MultiCompartment, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model contains submodels three levels deep.  A compartment replacement changes the concentration of a species.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 8 species (S1, sub1__S1, sub2__S1, sub2__sub1__S1, sub3__S1, sub3__sub1__S1, sub3__sub2__S1, sub3__sub2__sub1__S1)\r\n* 7 compartments (C, sub1__C, sub2__C, sub3__C, sub3__sub1__C, sub3__sub2__C, sub3__sub2__sub1__C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $5$ | constant |\r\n| Initial amount of species sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub2__S1 | $9$ | constant |\r\n| Initial amount of species sub2__sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub3__S1 | $11$ | constant |\r\n| Initial amount of species sub3__sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub3__sub2__S1 | $9$ | constant |\r\n| Initial amount of species sub3__sub2__sub1__S1 | $7$ | constant |\r\n| Initial volume of compartment 'C' | $10$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub2__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub2__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub2__sub1__C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 10;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 5 / C;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a three-level-deep replacement.\r\ncomponentTags:   Compartment, Species, comp:ModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Concentration, ConstantSpecies, MultiCompartment, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model contains submodels three levels deep, with the top model replacing the species at the deepest level, and the compartment at a level two down.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 7 species (S1, sub1__S1, sub2__S1, sub2__sub1__S1, sub3__S1, sub3__sub1__S1, sub3__sub2__S1)\r\n* 7 compartments (C, sub1__C, sub2__C, sub3__C, sub3__sub1__C, sub3__sub2__C, sub3__sub2__sub1__C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $5$ | constant |\r\n| Initial amount of species sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub2__S1 | $9$ | constant |\r\n| Initial amount of species sub2__sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub3__S1 | $11$ | constant |\r\n| Initial amount of species sub3__sub1__S1 | $7$ | constant |\r\n| Initial amount of species sub3__sub2__S1 | $9$ | constant |\r\n| Initial volume of compartment 'C' | $10$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub2__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub2__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub2__sub1__C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 10;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 5 / C;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species replacing one thing and replaced by something else.\r\ncomponentTags:   Compartment, Species, comp:ModelDefinition, comp:ReplacedBy, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Concentration, ConstantSpecies, MultiCompartment, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n A three-level deep hierarchical model with a replaced compartment, and a top-level species that replaces a three-deep speces, and is replaced in turn by a two-deep species.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 6 species (sub1__S1, sub2__S1, S1, sub3__S1, sub3__sub1__S1, sub3__sub2__S1)\r\n* 7 compartments (C, sub1__C, sub2__C, sub3__C, sub3__sub1__C, sub3__sub2__C, sub3__sub2__sub1__C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species sub1__S1 | $2.5$ | constant |\r\n| Initial amount of species sub2__S1 | $9$ | constant |\r\n| Initial concentration of species S1 | $2.5$ | constant |\r\n| Initial amount of species sub3__S1 | $11$ | constant |\r\n| Initial concentration of species sub3__sub1__S1 | $2.5$ | constant |\r\n| Initial amount of species sub3__sub2__S1 | $9$ | constant |\r\n| Initial volume of compartment 'C' | $10$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub2__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub1__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub2__C' | $1$ | constant |\r\n| Initial volume of compartment 'sub3__sub2__sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 10;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 5 / C;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species replacing one thing and replaced by something else, with ports.\r\ncomponentTags:   Compartment, Species, comp:ModelDefinition, comp:Port, comp:ReplacedBy, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Concentration, MultiCompartment, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model is exactly the same as model 01133, but additionally contains ports in the parent model. They are (obviously) unused, so this is simply a test to ensure that their presence doesn't confuse the simulator.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 6 species (sub1__S1, sub2__S1, S1, sub3__S1, sub3__sub1__S1, sub3__sub2__S1)\r\n* 7 compartments (C, sub1__C, sub2__C, sub3__C, sub3__sub1__C, sub3__sub2__C, sub3__sub2__sub1__C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species sub1__S1 | $2.5$ | variable |\r\n| Initial amount of species sub2__S1 | $9$ | variable |\r\n| Initial concentration of species S1 | $2.5$ | variable |\r\n| Initial amount of species sub3__S1 | $11$ | variable |\r\n| Initial concentration of species sub3__sub1__S1 | $2.5$ | variable |\r\n| Initial amount of species sub3__sub2__S1 | $9$ | variable |\r\n| Initial volume of compartment 'C' | $10$ | variable |\r\n| Initial volume of compartment 'sub1__C' | $1$ | variable |\r\n| Initial volume of compartment 'sub2__C' | $1$ | variable |\r\n| Initial volume of compartment 'sub3__C' | $1$ | variable |\r\n| Initial volume of compartment 'sub3__sub1__C' | $1$ | variable |\r\n| Initial volume of compartment 'sub3__sub2__C' | $1$ | variable |\r\n| Initial volume of compartment 'sub3__sub2__sub1__C' | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { } .= 10;\n\r\nS1 @Species { compartment: C, } .= 5 / C;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Hierarchical model with chained replacedBys.\r\ncomponentTags:   Parameter, comp:ModelDefinition, comp:ReplacedBy, comp:SBaseRef, comp:Submodel\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The parameter in the parent model is replaced by a parameter in the submodel, which in turn is replaced by a parameter in *its* submodel.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (p2)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p2 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np2 @Record { } .= 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Chained replaced/replacedBy elements.\r\ncomponentTags:   Parameter, comp:ModelDefinition, comp:ReplacedBy, comp:SBaseRef, comp:ReplacedElement, comp:Submodel\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n Despite starting off with five parameters at three levels, all aggregate parameters collapse down to a single parameter, as one set is replaced by parameters in models above them, and the other is replaced by parameters below them.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (p2)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p2 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np2 @Record { } .= 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a conversion factor\r\ncomponentTags:   AssignmentRule, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonConstantParameter, comp:ConversionFactor, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model is a simple test of a replacement with a conversion factor that affects the assignment rule of another parameter.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 3 parameters (p8, conv, sub1__prel)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__prel | $p8 / conv / 8$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter conv | $0.1$ | constant |\r\n| Initial value of parameter p8 | $8$ | variable |\r\n| Initial value of parameter sub1__prel | $p8 / conv / 8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8 @Record { } .= 8;\n\r\nconv @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a conversion factor.\r\ncomponentTags:   Parameter, RateRule, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:ConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis model is a simple test of a replacement with a conversion factor that affects the rate rule of the replaced parameter.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (p8, conv)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p8 | $(4 * (p8 / conv) + 3) * conv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter conv | $0.1$ | constant |\r\n| Initial value of parameter p8 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8 @Record { } .= 8;\n\r\nconv @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a conversion factor on a species.\r\ncomponentTags:   Compartment, Parameter, RateRule, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, MultiCompartment, comp:ConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis model is a simple test of a replacement with a conversion factor that affects the rate rule of the replaced species.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s8)\r\n* 1 parameter (conv)\r\n* 2 compartments (C, sub1__C)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | s8 | $(4 * (s8 / conv) + 3) * conv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s8 | $8$ | variable |\r\n| Initial value of parameter conv | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns8 @Species { compartment: C, isAmount: true, } .= 8;\n\r\nconv @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a conversion factor on a compartment.\r\ncomponentTags:   Compartment, Parameter, RateRule, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantCompartment, NonUnityCompartment, comp:ConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model is a simple test of a replacement with a conversion factor that affects the rate rule of the replaced compartment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (conv)\r\n* 1 compartment (C8)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | C8 | $(4 * (C8 / conv) + 3) * conv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter conv | $0.1$ | constant |\r\n| Initial volume of compartment 'C8' | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC8 @Compartment { } .= 8;\n\r\nconv @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor affecting many components.\r\ncomponentTags:   AlgebraicRule, AssignmentRule, CSymbolDelay, CSymbolTime, Compartment, EventWithDelay, InitialAssignment, Parameter, RateRule, Reaction, Species, comp:ModelDefinition, comp:ReplacedBy, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, InitialValueReassigned, NonConstantParameter, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n This model contains a submodel with various time-based constructs in it, contained in a model with a time conversion factor.  For broken-down versions of this model that test only one construct at a time, see tests 01170-01177.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 6 parameters (timeconv, t1, t2, t3, t4, t5)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub1__J0: -> s1 | $1 / timeconv * (t3 * (time / timeconv) / (s1 * delay(t5, timeconv * 2.000000e-001)))$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Delay*  | *Event Assignments* |\r\n| event_0 | $gt(time / timeconv, 3)$ | $timeconv * (1 / (time / timeconv))$ | $t5 = time / timeconv$ |]\r\n\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | t1 | $(time / timeconv / t1 + 3) / timeconv$ |\r\n| Assignment | t3 | $delay(t1, timeconv * 3)$ |\r\n| Algebraic | $0$ | $t4 - delay(t3, timeconv * (time / timeconv / 2))$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $0.001$ | variable |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t1 | $1$ | variable |\r\n| Initial value of parameter t2 | $time / timeconv + 3$ | variable |\r\n| Initial value of parameter t3 | $delay(t1, timeconv * 3)$ | variable |\r\n| Initial value of parameter t4 | $1$ | variable |\r\n| Initial value of parameter t5 | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, isAmount: true, } .= 0.001;\n\r\nt1 @Record { } .= 1;\r\nt2 @Record { } .= 1;\r\nt3 @Record { } .= 1;\r\nt4 @Record { } .= 1;\r\nt5 @Record { } .= 1;\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a reaction modified by an extent conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:ExtentConversionFactor, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\nThe reaction in the submodel must be converted by the extent conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 1 parameter (extentconv)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $extentconv * 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $0$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nextentconv @Const { } = 1000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a submodel reaction modified by time and extent conversion factors.\r\ncomponentTags:   CSymbolTime, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:ExtentConversionFactor, comp:SubmodelOutput, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThe kinetic law of the reaction in the submodel in this model must be modified by both the time conversion factor and the extent conversion factor of the parent model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 3 parameters (timeconv, extentconv, t3)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $extentconv / timeconv * sub1__s1 * t3 * (time / timeconv)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $1$ | variable |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial value of parameter t3 | $0.2$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ntimeconv @Const { } = 60;\r\nextentconv @Const { } = 1000;\r\nt3 @Const { } = 0.2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with an extent conversion factor affecting a sub-submodel.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:ExtentConversionFactor, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The extent conversion factor in the parent model must affect the reaction in the sub-submodel.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__sub1__s1)\r\n* 1 parameter (extentconv)\r\n* 1 compartment (sub1__sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__sub1__s1 | $extentconv * sub1__sub1__s1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__sub1__s1 | $0.01$ | variable |\r\n| Initial value of parameter extentconv | $10$ | constant |\r\n| Initial volume of compartment 'sub1__sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nextentconv @Const { } = 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor affecting an assignment rule in a sub-submodel.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Parameter, comp:ModelDefinition, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonConstantParameter, comp:SubmodelOutput, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The assignment rule in the sub-submodel has 'time' in it, which must be converted by the time conversion factor of the original submodel.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (timeconv, sub1__sub1__t1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__sub1__t1 | $time / timeconv + 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__sub1__t1 | $time / timeconv + 3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with two levels of time conversion factors.\r\ncomponentTags:   AssignmentRule, CSymbolTime, InitialAssignment, Parameter, comp:ModelDefinition, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonConstantParameter, comp:SubmodelOutput, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The assignment rule in the sub-submodel must be converted by time conversion factors at both levels of submodel creation.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 parameters (timeconv, sub1__timeconv, sub1__timeconv_times_timeconv, sub1__sub1__t1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__sub1__t1 | $time / sub1__timeconv_times_timeconv + 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__timeconv_times_timeconv | $sub1__timeconv * timeconv$ | constant |\r\n| Initial value of parameter sub1__sub1__t1 | $time / sub1__timeconv_times_timeconv + 3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with three levels of time and extent conversion factors.\r\ncomponentTags:   CSymbolTime, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:ExtentConversionFactor, comp:SubmodelOutput, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The reaction in the sub-submodel is affected by time and extent conversion factors three levels deep.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__sub1__sub1__s1)\r\n* 10 parameters (timeconv, extentconv, sub1__timeconv, sub1__extentconv, sub1__timeconv_times_timeconv, sub1__extentconv_times_extentconv, sub1__sub1__timeconv, sub1__sub1__extentconv, sub1__sub1__timeconv_times_sub1__timeconv_times_timeconv, sub1__sub1__extentconv_times_sub1__extentconv_times_extentconv)\r\n* 1 compartment (sub1__sub1__sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__sub1__sub1__s1 | $sub1__sub1__extentconv_times_sub1__extentconv_times_extentconv / sub1__sub1__timeconv_times_sub1__timeconv_times_timeconv * 1000000000 * sub1__sub1__sub1__s1 * (time / sub1__sub1__timeconv_times_sub1__timeconv_times_timeconv)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__sub1__sub1__s1 | $0.001$ | variable |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter extentconv | $10$ | constant |\r\n| Initial value of parameter sub1__timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__extentconv | $10$ | constant |\r\n| Initial value of parameter sub1__timeconv_times_timeconv | $sub1__timeconv * timeconv$ | constant |\r\n| Initial value of parameter sub1__extentconv_times_extentconv | $sub1__extentconv * extentconv$ | constant |\r\n| Initial value of parameter sub1__sub1__timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__sub1__extentconv | $10$ | constant |\r\n| Initial value of parameter sub1__sub1__timeconv_times_sub1__timeconv_times_timeconv | $sub1__sub1__timeconv * sub1__timeconv_times_timeconv$ | constant |\r\n| Initial value of parameter sub1__sub1__extentconv_times_sub1__extentconv_times_extentconv | $sub1__sub1__extentconv * sub1__extentconv_times_extentconv$ | constant |\r\n| Initial volume of compartment 'sub1__sub1__sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ntimeconv @Const { } = 60;\r\nextentconv @Const { } = 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a deleted rate rule.\r\ncomponentTags:   Parameter, comp:Deletion, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The rate rule in the submodel is deleted, and should not affect the parameter.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (p8)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p8 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8 @Record { } .= 8;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a replaced rate rule.\r\ncomponentTags:   Parameter, RateRule, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model contains a rate rule in the parent that replaces a rate rule in the submodel.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (p8)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p8 | $3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p8 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8_proc @Process { actors:  = p8, aux: {metaid: \"p8_raterule\"}, };\r\np8_proc := 3;\n\r\np8 @Record { } .= 8;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a deleted rate rule.\r\ncomponentTags:   Parameter, RateRule, comp:Deletion, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n Flattened, this model is functionally identical to model 01150, but instead of having the parent rate rule replace the submodel rate rule, the submodel rate rule is simply deleted.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (p8)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p8 | $3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p8 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8_proc @Process { actors:  = p8, aux: {metaid: \"p8_raterule\"}, };\r\np8_proc := 3;\n\r\np8 @Record { } .= 8;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a conversion factor affecting an event assignment.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:ConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The replaced parameter in the submodel is assigned a value by an event.  The replacement contains a conversion factor, affecting the value given by the event.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (conv, p8)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| sub1__E1 | $gt(time, 0.31)$ | $p8 = (800 + p8 / conv) * conv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter conv | $0.1$ | constant |\r\n| Initial value of parameter p8 | $8$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8 @Record { } .= 8;\n\r\nconv @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a deleted rate rule and initial assignment\r\ncomponentTags:   InitialAssignment, Parameter, comp:Deletion, comp:ModelDefinition, comp:Port, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The parent model in this document contains deletions that remove an initial assignment and a rate rule two levels down.  The parent model contains only an initial assignment for that parameter, leaving it constant.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 parameters (z, i, A__A__y, A__A__Q)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter i | $2$ | constant |\r\n| Initial value of parameter A__A__y | $7$ | constant |\r\n| Initial value of parameter A__A__Q | $2$ | constant |\r\n| Initial value of parameter z | $34 * i$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nz @Record { } .= 34 * i;\n\r\ni @Const { } = 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        This hierarchical model contains a deleted event.\r\ncomponentTags:   Parameter, comp:Deletion, comp:ModelDefinition, comp:Submodel\r\ntestTags:        comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The event that would change the values of the two parameters in this model is deleted, causing the parameters to remain unchanged.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (sub1__t1, sub1__t2)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter sub1__t1 | $1$ | variable |\r\n| Initial value of parameter sub1__t2 | $1$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        This hierarchical model deletes the delay of an event.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, comp:Deletion, comp:ModelDefinition, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The event in the submodel contains a delay, but this delay is deleted when the submodel is imported into the parent model, causing the event to fire instantly.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (sub1__t1, sub1__t2)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| sub1__E0 | $gt(time, 3)$ | $sub1__t1 = 3.3$ |\r\n|  |  |  | $sub1__t2 = 5.5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter sub1__t1 | $1$ | variable |\r\n| Initial value of parameter sub1__t2 | $1$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a deleted event priority.\r\ncomponentTags:   CSymbolTime, EventWithDelay, Parameter, comp:Deletion, comp:ModelDefinition, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n This model contains an event with a priority which is deleted when imported as part of a submodel.  It is actually impossible to test the behavior of a model that deletes a priority, because the behavior of an event without a priority has fewer restrictions on its behavior in a simulator than that same event with a priority, and allowing the event to behave as if it had any arbitrary priority (including the one deleted) is actually perfectly legal.  As a result, this test merely checks to ensure that the simulation occurred at all, despite containing that deletion construct.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (sub1__t1, sub1__t2)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Delay*  | *Event Assignments* |\r\n| sub1__E0 | $gt(time, 3)$ | $1 / time$ | $sub1__t1 = 3.3$ |\r\n|  |  |  | $sub1__t2 = 5.5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter sub1__t1 | $1$ | variable |\r\n| Initial value of parameter sub1__t2 | $1$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model that deletes an event assignment.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, comp:Deletion, comp:ModelDefinition, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The original event in the submodel contains two event assignments, one of which is deleted when the event's submodel is imported into the parent model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (sub1__t1, sub1__t2)\r\n\r\nThere is one event:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Delay*  | *Event Assignments* |\r\n| sub1__E0 | $gt(time, 3)$ | $10$ | $1 / time$ | $sub1__t2 = 5.5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter sub1__t1 | $1$ | variable |\r\n| Initial value of parameter sub1__t2 | $1$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\n synopsis:        A hierarchical model that deletes a priority, delay, and event assignment\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, comp:Deletion, comp:ModelDefinition, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n In this model, a submodel event is greatly changed through deletions:  its delay, priority, and one of its event assignements are all deleted.  As in model 01156, the fact that the priority has been deleted cannot be tested numerically, but the other deletions all directly affect the expected output of the model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (sub1__t1, sub1__t2)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| sub1__E0 | $gt(time, 3)$ | $sub1__t1 = 3.3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter sub1__t1 | $1$ | variable |\r\n| Initial value of parameter sub1__t2 | $1$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        This hieararchical model deletes a local parameter\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:Deletion, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In the original submodel, there is a local parameter whose value is used in the kinetic law of a reaction.  When it is imported as a submodel, the local parameter is deleted, causing the kinetic law to instead reference a global parameter with the same ID, but a different value.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 1 parameter (sub1__p1)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $sub1__p1 * sub1__s1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $0.001$ | variable |\r\n| Initial value of parameter sub1__p1 | $100$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a replacement of a local parameter.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nA local parameter in the submodel is replaced here by a global parameter.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 1 parameter (new_p1)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $new_p1 * sub1__s1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $0.001$ | variable |\r\n| Initial value of parameter new_p1 | $100$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nnew_p1 @Const { aux: {metaid: \"new_p1_metaid\"}, } = 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model whose submodel has a local parameter.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, LocalParameters, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n A quick test to make sure a submodel local parameter is left alone and not renamed without a commensurate renaming of its reference in the kinetic law as part of any flattening routine a simulator might use, especially when there is a 'shadow' parameter of the same name.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 1 parameter (sub1__p1)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $p1 * sub1__s1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $0.001$ | variable |\r\n| Initial value of parameter sub1__p1 | $100$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a rate rule deleted via a port.\r\ncomponentTags:   Parameter, comp:Deletion, comp:ModelDefinition, comp:Port, comp:ReplacedElement, comp:Submodel\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The rate rule for the parameter in the submodel is defined with a port, and the model that imports it sets the port as the target of a 'delete' construct.  This should, by proxy, delete the rate rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (p8)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p8 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8 @Record { } .= 8;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a replaced rate rule and parameter.\r\ncomponentTags:   Parameter, RateRule, comp:ModelDefinition, comp:Port, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n The submodel contains a parameter and rate rule, both of which are replaced by the parent model.  This means that it is not actually necessary to understand the 'comp' package to pass the test; a simulator should be able to note the 'required=\"false\"' line and attempt to simulate anyway.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (p8)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p8 | $3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p8 | $8$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np8_proc @Process { actors:  = p8, aux: {metaid: \"p8_raterule\"}, };\r\np8_proc := 3;\n\r\np8 @Record { } .= 8;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple aggregate hieararchical model.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, MultiCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n A submodel with a two-step reaction is imported twice into the parent model, creating parallel sets of species affected by parallel reactions.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 8 species (submod1__S, submod1__E, submod1__D, submod1__ES, submod2__S, submod2__E, submod2__D, submod2__ES)\r\n* 2 compartments (submod1__comp, submod2__comp)\r\n\r\nThere are 4 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| submod1__S + submod1__E -> submod1__ES | $(submod1__S + submod1__E) / submod1__ES$ |\r\n| submod1__ES -> submod1__E + submod1__D | $submod1__ES / (submod1__E + submod1__D)$ |\r\n| submod2__S + submod2__E -> submod2__ES | $(submod2__S + submod2__E) / submod2__ES$ |\r\n| submod2__ES -> submod2__E + submod2__D | $submod2__ES / (submod2__E + submod2__D)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species submod1__S | $1$ | variable |\r\n| Initial concentration of species submod1__E | $1$ | variable |\r\n| Initial concentration of species submod1__D | $1$ | variable |\r\n| Initial concentration of species submod1__ES | $1$ | variable |\r\n| Initial concentration of species submod2__S | $1$ | variable |\r\n| Initial concentration of species submod2__E | $1$ | variable |\r\n| Initial concentration of species submod2__D | $1$ | variable |\r\n| Initial concentration of species submod2__ES | $1$ | variable |\r\n| Initial volume of compartment 'submod1__comp' | $1$ | constant |\r\n| Initial volume of compartment 'submod2__comp' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model from the specification\r\ncomponentTags:   Compartment, Reaction, Species, comp:Deletion, comp:ExternalModelDefinition, comp:ModelDefinition, comp:Port, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n An example from the 'comp' specification:  two submodels, one simple, and one complex, are synchronized to match the complex version:  'S' converted to 'D' via an intermediate instead of via a single step.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 species (S, D, A__E, A__ES)\r\n* 1 compartment (comp)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| S + A__E -> A__ES | $(S + A__E) / A__ES$ |\r\n| A__ES -> A__E + D | $A__ES / (A__E + D)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S | $5$ | variable |\r\n| Initial concentration of species D | $10$ | variable |\r\n| Initial concentration of species A__E | $1$ | variable |\r\n| Initial concentration of species A__ES | $1$ | variable |\r\n| Initial volume of compartment 'comp' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { boundary: true, } .= 1;\n\r\nS @Species { compartment: comp, } .= 5;\r\nD @Species { compartment: comp, } .= 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with two levels of external model definitions.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ExternalModelDefinition, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The external model definition in the main model file references another external model definition in a second file, which in turn references an actual model in a third file.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 species (A__S, A__E, A__D, A__ES)\r\n* 1 compartment (A__comp)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| A__S + A__E -> A__ES | $(A__S + A__E) / A__ES$ |\r\n| A__ES -> A__E + A__D | $A__ES / (A__E + A__D)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A__S | $10$ | variable |\r\n| Initial concentration of species A__E | $5$ | variable |\r\n| Initial concentration of species A__D | $7$ | variable |\r\n| Initial concentration of species A__ES | $0.1$ | variable |\r\n| Initial volume of compartment 'A__comp' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        This hierarchical model references an external model definition with a submodel with an external model definition.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ExternalModelDefinition, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\nThis model tests multiple layers of external model definitions, where the model referenced by an external model definition contains a submodel which is itself defined in a third file via an external model definition in the second file.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 7 species (A__S, A__A__E, A__A__D, A__A__ES, A__B__E, A__B__D, A__B__ES)\r\n* 1 compartment (A__comp)\r\n\r\nThere are 4 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| A__S + A__A__E -> A__A__ES | $(A__S + A__A__E) / A__A__ES$ |\r\n| A__A__ES -> A__A__E + A__A__D | $A__A__ES / (A__A__E + A__A__D)$ |\r\n| A__S + A__B__E -> A__B__ES | $(A__S + A__B__E) / A__B__ES$ |\r\n| A__B__ES -> A__B__E + A__B__D | $A__B__ES / (A__B__E + A__B__D)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A__S | $11$ | variable |\r\n| Initial concentration of species A__A__E | $5$ | variable |\r\n| Initial concentration of species A__A__D | $7$ | variable |\r\n| Initial concentration of species A__A__ES | $0.1$ | variable |\r\n| Initial concentration of species A__B__E | $5$ | variable |\r\n| Initial concentration of species A__B__D | $7$ | variable |\r\n| Initial concentration of species A__B__ES | $0.1$ | variable |\r\n| Initial volume of compartment 'A__comp' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor.\r\ncomponentTags:   CSymbolTime, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedBy, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis model contains a submodel with a reaction in it, contained in a model with a time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 2 parameters (timeconv, t3)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> s1 | $1 / timeconv * t3 * (time / timeconv)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $0.001$ | variable |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t3 | $10$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, isAmount: true, } .= 0.001;\n\r\nt3 @Record { } .= 10;\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor and a rate rule.\r\ncomponentTags:   CSymbolTime, Parameter, RateRule, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis model contains a submodel with a rate rule in it, contained in a model with a time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (timeconv, t1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | t1 | $(time / timeconv / t1 + 3) / timeconv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nt1 @Record { } .= 1;\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor and delay.\r\ncomponentTags:   AssignmentRule, CSymbolDelay, CSymbolTime, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonConstantParameter, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis model contains a submodel with the csymbol delay, contained in a model with a time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 3 parameters (timeconv, t1, t3)\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | t1 | $time / timeconv$ |\r\n| Assignment | t3 | $delay(t1, timeconv * 3)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t1 | $time / timeconv$ | variable |\r\n| Initial value of parameter t3 | $delay(t1, timeconv * 3)$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nt1 @Record { } .= 1;\r\nt3 @Record { } .= 1;\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor and an algebraic rule.\r\ncomponentTags:   AlgebraicRule, CSymbolDelay, CSymbolTime, InitialAssignment, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonConstantParameter, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This model contains a submodel with an algebraic rule containing the csymbols 'time' and 'delay' , contained in a model with a time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 3 parameters (timeconv, t3, t4)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Algebraic | $0$ | $t4 - delay(t3, timeconv * (time / timeconv / 2))$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t3 | $time / timeconv + 3$ | constant |\r\n| Initial value of parameter t4 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nt4 @Record { } .= 1;\n\r\ntimeconv @Const { } = 60;\r\nt3 @Const { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor and reaction.\r\ncomponentTags:   CSymbolTime, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedBy, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis model contains a submodel with a reaction, contained in a model with a time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 2 parameters (timeconv, t5)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> s1 | $1 / timeconv * (t5 * (time / timeconv) / (s1 * t5))$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $0.001$ | variable |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t5 | $3.1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, isAmount: true, } .= 0.001;\n\r\nt5 @Record { } .= 3.1;\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor and a delay in a kinetic law.\r\ncomponentTags:   AssignmentRule, CSymbolDelay, CSymbolTime, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedBy, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, InitialValueReassigned, NonConstantParameter, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nThis model contains a submodel with a reaction whose kinetic law contains a delay, contained in a model with a time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 2 parameters (timeconv, t5)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> s1 | $1 / timeconv * delay(t5, timeconv * 0.2) * (time / timeconv)$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | t5 | $time / timeconv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $0.001$ | variable |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t5 | $time / timeconv$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, isAmount: true, } .= 0.001;\n\r\nt5 @Record { } .= 3.2;\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion factor.\r\ncomponentTags:   CSymbolTime, EventWithDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        EventUsesTriggerTimeValues, NonConstantParameter, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\nThis model contains a submodel with an event with various time-based constructs in it, contained in a model with a time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (timeconv, t5)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Delay*  | *Event Assignments* |\r\n|  | $gt(time / timeconv, 3)$ | $timeconv * (1 / (time / timeconv))$ | $t5 = time / timeconv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter t5 | $1$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nt5 @Record { } .= 1;\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with extent conversion and a reference to a modified reaction.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, InitialValueReassigned, comp:ExtentConversionFactor, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n In the submodel, there is a reference to a reaction's SId in an assignment rule math.  This reference must be modified by the extent conversion factor just as the kinetic law itself is modified by the extent conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 2 parameters (extentconv, sub1__p80)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $extentconv * 10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__p80 | $sub1__J0 / extentconv + 6$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial value of parameter sub1__p80 | $sub1__J0 / extentconv + 6$ | variable |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nextentconv @Const { } = 1000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a time conversion and a replacement conversion factor both affecting a rate rule.\r\ncomponentTags:   CSymbolTime, Parameter, RateRule, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:ConversionFactor, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The rate rule in the submodel affects a parameter that has been replaced with a conversion factor, necessitating a conversion of the rate rule.  In addition, the submodel as a whole has a time conversion factor, so the rate rule must additionally be affected by that.  Just to go whole hog, the parameter itself is used in its own rate rule, as is the csymbol 'time'.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 3 parameters (timeconv, paramconv, t1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | t1 | $(time / timeconv / (t1 / paramconv) + 3) * paramconv / timeconv$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter paramconv | $0.01$ | constant |\r\n| Initial value of parameter t1 | $1$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nt1 @Record { } .= 1;\n\r\ntimeconv @Const { } = 60;\r\nparamconv @Const { } = 0.01;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with time conversion and a reference to a modified reaction.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, InitialValueReassigned, comp:SubmodelOutput, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\nIn the submodel, there is a reference to a reaction's SId in an assignment rule math.  This reference must be modified by the time conversion factor just as the kinetic law itself is modified by the time conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 2 parameters (timeconv, sub1__p80)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $1 / timeconv * 10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__p80 | $sub1__J0 / (1 / timeconv) + 6$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $1$ | variable |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__p80 | $sub1__J0 / (1 / timeconv) + 6$ | variable |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with extent and time conversion and a reference to a modified reaction.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, InitialValueReassigned, comp:ExtentConversionFactor, comp:SubmodelOutput, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In the submodel, there is a reference to a reaction's SId in an assignment rule math.  This reference must be modified by the time and extent conversion factor just as the kinetic law itself is modified by the time and extent conversion factor.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub1__s1)\r\n* 3 parameters (extentconv, timeconv, sub1__p80)\r\n* 1 compartment (sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> sub1__s1 | $extentconv / timeconv * 10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__p80 | $sub1__J0 / (extentconv / timeconv) + 6$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub1__s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__p80 | $sub1__J0 / (extentconv / timeconv) + 6$ | variable |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nextentconv @Const { } = 1000;\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with time and extent conversion and a reference to a modified replaced reaction.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, InitialValueReassigned, MultiCompartment, comp:ExtentConversionFactor, comp:SubmodelOutput, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In the submodel, there is a reference to a reaction's SId in an assignment rule math.  This reference would normally be modified by the time and extent conversion factors, however, the reaction is replaced, meaning that the only conversion factor to be applied is the conversion factor on the replacement.  Since there is no such factor, the assignment rule should pass through unmolested, and point to the new reaction.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 species (s1, sub1__s1)\r\n* 3 parameters (extentconv, timeconv, sub1__p80)\r\n* 2 compartments (C, sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> s1 | $10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__p80 | $J0 + 6$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $1$ | variable |\r\n| Initial amount of species sub1__s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter sub1__p80 | $J0 + 6$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, isAmount: true, } .= 1;\n\r\nJ0 @Reaction { actors:  = s1, };\r\nJ0 := 10;\n\r\nextentconv @Const { } = 1000;\r\ntimeconv @Const { } = 60;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\n synopsis:        A hierarchical model with time and extent conversion and a reference to a modified replaced reaction, itself with a conversion factor.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, InitialValueReassigned, MultiCompartment, comp:ConversionFactor, comp:ExtentConversionFactor, comp:SubmodelOutput , comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In the submodel, there is a reference to a reaction's SId in an assignment rule math.  This reference would normally be modified by the time and extent conversion factors, however, the reaction is replaced, meaning that the only conversion factor to be applied is the conversion factor on the replacement (which, unlike test 1182, exists in this model).  \r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 species (s1, sub1__s1)\r\n* 4 parameters (extentconv, timeconv, extentpertimeconv, sub1__p80)\r\n* 2 compartments (C, sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| -> s1 | $10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | sub1__p80 | $J0 / extentpertimeconv + 6$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $1$ | variable |\r\n| Initial amount of species sub1__s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial value of parameter timeconv | $60$ | constant |\r\n| Initial value of parameter extentpertimeconv | $16.6667$ | constant |\r\n| Initial value of parameter sub1__p80 | $J0 / extentpertimeconv + 6$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'sub1__C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, isAmount: true, } .= 1;\n\r\nJ0 @Reaction { actors:  = s1, };\r\nJ0 := 10;\n\r\nextentconv @Const { } = 1000;\r\ntimeconv @Const { } = 60;\r\nextentpertimeconv @Const { } = 16.6666666666667;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A kinetic law set by a constant with an initial assignment.\r\ncomponentTags:   Compartment, InitialAssignment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In some software packages, constant kinetic laws are pre-processed to a single value.  This tests to ensure that if a kinetic law is constant but depends on an initial assignment to a variable, this processing is still accurate.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 2 parameters (k1, y)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| _J0: -> S1 | $k1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial value of parameter k1 | $y$ | constant |\r\n| Initial value of parameter y | $3$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\n\r\n_J0 @Reaction { actors:  = S1, };\r\n_J0 := k1;\n\r\nk1 @Record { } .= y;\r\ny @Record { } .= 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A kinetic law set by a constant with an initial assignment.\r\ncomponentTags:   Compartment, InitialAssignment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In some software packages, constant kinetic laws are pre-processed to a single value.  This tests to ensure that if a kinetic law is constant but depends on an initial assignment to a variable, this processing is still accurate, even when that value is given an (overridden) 'value' attribute.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 2 parameters (k1, y)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| _J0: -> S1 | $k1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial value of parameter k1 | $y$ | constant |\r\n| Initial value of parameter y | $3$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\n\r\n_J0 @Reaction { actors:  = S1, };\r\n_J0 := k1;\n\r\nk1 @Const { } = -2;\r\ny @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Compartment with spatial dimensions of 7.\r\ncomponentTags:   Compartment\r\ntestTags:        NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis model contains only a compartment, but it has a spatial dimension of 7.  The numerics are not affected at all; this simply tests that the existence of this dimensionality doesn't affect the simulation.\r\n\r\nThe model contains:\r\n* 1 compartment (c)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial volume of compartment 'c' | $4$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 4;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 0;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested piecewise in conditional.\r\ncomponentTags:   AssignmentRule, Parameter, RateRule\r\ntestTags:        InitialValueReassigned, NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n The assignment rule for parameter 'z' has a nested piecewise function in the conditional part of the piecewise function, that returns 'true' or 'false'.  It is functionally equivalent to simply having the nested conditional there directly, and is there merely to test the presence of the nesting itself.\r\n\r\nThe model contains:\r\n* 2 parameters (x, z)\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | x | $1$ |\r\n| Assignment | z | $piecewise(1, piecewise(true, x >= 0.49, false), 0)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $0$ | variable |\r\n| Initial value of parameter z | $piecewise(1, piecewise(true, geq(x, 0.49), false), 0)$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx_proc @Process { actors:  = x, };\r\nx_proc := 1;\n\r\nx @Record { } .= 0;\r\nz @Record { };\r\nz := (((x >= 0.49) ? true : false) ? 1 : 0);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested piecewise in return.\r\ncomponentTags:   AssignmentRule, Parameter, RateRule\r\ntestTags:        InitialValueReassigned, NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model has a nested 'piecewise' function, with the nested piecewise in the 'returned value' part of the function.\r\n\r\nThe model contains:\r\n* 3 parameters (z, y, x)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | z | $piecewise(piecewise(2, gt(y, 1.49), 1), leq(x, 0.49), 0)$ |\r\n| Rate | y | $-2$ |\r\n| Rate | x | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter z | $piecewise(piecewise(2, gt(y, 1.49), 1), leq(x, 0.49), 0)$ | variable |\r\n| Initial value of parameter y | $2$ | variable |\r\n| Initial value of parameter x | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ny_proc @Process { actors:  = y, };\r\ny_proc := (-2);\r\nx_proc @Process { actors:  = x, };\r\nx_proc := 1;\n\r\nz @Record { };\r\nz := ((x <= 0.49) ? ((y > 1.49) ? 2 : 1) : 0);\r\ny @Record { } .= 2;\r\nx @Record { } .= 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested piecewise in conditional and return\r\ncomponentTags:   AssignmentRule, Parameter, RateRule\r\ntestTags:        InitialValueReassigned, NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A combination of cases 01199 and 01200, with piecewise functions nested inside a piecewise function as both a conditional and as a return value.  Tests the combination of nesting piecewise functions.\r\n\r\nThe model contains:\r\n* 3 parameters (z, y, x)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | z | $piecewise(piecewise(2, y > 1.49, 1), piecewise(true, x <= 0.49, false), 0)$ |\r\n| Rate | y | $-2$ |\r\n| Rate | x | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter z | $piecewise(piecewise(2, y > 1.49, 1), piecewise(true, x <= 0.49, false), 0)$ | variable |\r\n| Initial value of parameter y | $2$ | variable |\r\n| Initial value of parameter x | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ny_proc @Process { actors:  = y, };\r\ny_proc := (-2);\r\nx_proc @Process { actors:  = x, };\r\nx_proc := 1;\n\r\nz @Record { };\r\nz := (((x <= 0.49) ? true : false) ? ((y > 1.49) ? 2 : 1) : 0);\r\ny @Record { } .= 2;\r\nx @Record { } .= 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested piecewise in otherwise.\r\ncomponentTags:   AssignmentRule, Parameter, RateRule\r\ntestTags:        InitialValueReassigned, NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n The assignment rule for parameter 'z' has a nested piecewise function in the 'otherwise' part of the piecewise function.\r\n\r\nThe model contains:\r\n* 3 parameters (z, x, y)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | z | $piecewise(2, x <= 0.49, piecewise(1, y > 0.49, 0))$ |\r\n| Rate | x | $1$ |\r\n| Rate | y | $-2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter z | $piecewise(2, x <= 0.49, piecewise(1, y > 0.49, 0))$ | variable |\r\n| Initial value of parameter x | $0$ | variable |\r\n| Initial value of parameter y | $2$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx_proc @Process { actors:  = x, };\r\nx_proc := 1;\r\ny_proc @Process { actors:  = y, };\r\ny_proc := (-2);\n\r\nz @Record { };\r\nz := ((x <= 0.49) ? 2 : ((y > 0.49) ? 1 : 0));\r\nx @Record { } .= 0;\r\ny @Record { } .= 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested piecewise in return and otherwise.\r\ncomponentTags:   AssignmentRule, Parameter, RateRule\r\ntestTags:        InitialValueReassigned, NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n The assignment rule for parameter 'z' has two nested piecewise functions in the return and otherwise parts of the containing piecewise function.  A combination of cases 01200 and 01202\r\n\r\nThe model contains:\r\n* 3 parameters (z, y, x)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | z | $piecewise(piecewise(2, y > 1.49, 1), x <= 0.49, piecewise(1, y > 0.49, 0))$ |\r\n| Rate | y | $-2$ |\r\n| Rate | x | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter z | $piecewise(piecewise(2, y > 1.49, 1), x <= 0.49, piecewise(1, y > 0.49, 0))$ | variable |\r\n| Initial value of parameter y | $2$ | variable |\r\n| Initial value of parameter x | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ny_proc @Process { actors:  = y, };\r\ny_proc := (-2);\r\nx_proc @Process { actors:  = x, };\r\nx_proc := 1;\n\r\nz @Record { };\r\nz := ((x <= 0.49) ? ((y > 1.49) ? 2 : 1) : ((y > 0.49) ? 1 : 0));\r\ny @Record { } .= 2;\r\nx @Record { } .= 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested piecewise in return, conditional, and otherwise.\r\ncomponentTags:   AssignmentRule, Parameter, RateRule\r\ntestTags:        InitialValueReassigned, NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n The assignment rule for parameter 'z' has three nested piecewise functions in the return, conditional, and otherwise parts of the containing piecewise function.  A combination of 01199, 01200, and 01202, and functionally equivalent to 01203.\r\n\r\nThe model contains:\r\n* 3 parameters (z, y, x)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | z | $piecewise(piecewise(2, y > 1.49, 1), piecewise(true, x <= 0.49, false), piecewise(1, y > 0.49, 0))$ |\r\n| Rate | y | $-2$ |\r\n| Rate | x | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter z | $piecewise(piecewise(2, y > 1.49, 1), piecewise(true, x <= 0.49, false), piecewise(1, y > 0.49, 0))$ | variable |\r\n| Initial value of parameter y | $2$ | variable |\r\n| Initial value of parameter x | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ny_proc @Process { actors:  = y, };\r\ny_proc := (-2);\r\nx_proc @Process { actors:  = x, };\r\nx_proc := 1;\n\r\nz @Record { };\r\nz := (((x <= 0.49) ? true : false) ? ((y > 1.49) ? 2 : 1) : ((y > 0.49) ? 1 : 0));\r\ny @Record { } .= 2;\r\nx @Record { } .= 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species concentration under control of a rate rule.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantParameter, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species is under control of a rate rule, and set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by this rate of change, but the volume of the compartment stays constant.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { boundary: true, } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 0;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\n\r\nx @Record { };\r\nx := S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Constant-amount species in variable compartment.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the compartment size varies, making the species concentration change (which is assigned to 'x'), but the species amount does not.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $3$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 3 / C1;\n\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Variable compartment with explicitly fixed species\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model is exactly the same as model 1206, but the species is interpreted as an amount, not a concentration, and that amount is explicitly set to change by zero, instead of that change being implied as in 1206.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1 / C1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $3$ | variable |\r\n| Initial value of parameter x | $S1 / C1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, isAmount: true, } .= 3;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1 / C1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Variable compartment with variable species concentration\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model ends up exactly the same as model 1206 and 1207, with a variable compartment, and an explicit rate of change of the species concentration that ends up with the species amount not changing.\r\n\r\nIf A is the amount of S1, and V is the volume:\r\nd(A/V)/dt = [V dA/dt - A dV/dt]/V^2\r\n          = -A/V^2 dV/dt\r\n          = -A/V * .2 / V\r\n          = -.2*A/V / V\r\n          = -.2*S1/V\r\n \r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $(-0.2 * S1) / C1$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $3$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 3 / C1;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := ((-0.2) * S1) / C1;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An initial assignment with an nary relational element.\r\ncomponentTags:   InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as less than.  This model checks to make sure interpreters notice the third argument, which changes the result of the 'piecewise' test.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $piecewise(1, lt(1, 2, 1), 3)$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= ((1 < 2) ? 1 : 3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An assignment rule with an nary relational element.\r\ncomponentTags:   AssignmentRule, Parameter\r\ntestTags:        InitialValueReassigned, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as greater than.  This model checks to make sure interpreters notice the third argument, which changes the result of the 'piecewise' test.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | x | $piecewise(1, gt(2, 1, 2), 3)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $piecewise(1, gt(2, 1, 2), 3)$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { };\r\nx := ((2 > 1) ? 1 : 3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A trigger with an nary relational element.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter\r\ntestTags:        NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nIn MathML, it is legal to have 3+ arguments to relational elements such as greater than.  This model checks to make sure interpreters notice the third argument, which changes the trigger such that it never fires.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > 0.21 && leq(5, 5, 2)$ | $x = 5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [_E0]= 5;\n\r\n_E0 @DSwitcher { trigger: t > 0.21 and 5 <= 5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Priorities with nary relational elements.\r\ncomponentTags:   CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:        NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as greater than.  This model checks to make sure interpreters notice the third argument, which changes the priorities on the competing events such that E0 should have the higher priority, firing first, and E1 has the lower priority, firing second, and assigning the value of '7' to x moving forward.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 0.01$ | $piecewise(1, leq(1, 2, 1), 10)$ | $x = 5$ |\r\n| E1 | $time > 0.01$ | $piecewise(10, leq(1, 2, 1), 1)$ | $x = 7$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E0]= 5;\r\nx [E1]= 7;\n\r\nE0 @DSwitcher { trigger: t > 0.01, };\r\nE1 @DSwitcher { trigger: t > 0.01, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A delay with an nary relational element.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as equals.  This model checks to make sure interpreters notice the third argument, which changes the event assignment to be 7, not 5.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time > 0.01$ | $x = piecewise(5, eq(1, 1, 2), 7)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E0]= ((1 == 1) ? 5 : 7);\n\r\nE0 @DSwitcher { trigger: t > 0.01, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A rate rule with an nary relational element.\r\ncomponentTags:   Parameter, RateRule\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as greater than.  This model checks to make sure interpreters notice the third argument, which changes the rate rule from 1 to 0.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | x | $piecewise(1, gt(2, 1, 2), 0)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx_proc @Process { actors:  = x, };\r\nx_proc := ((2 > 1) ? 1 : 0);\n\r\nx @Record { } .= 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A boundary substance-only species in non-unit compartment under control of a rate rule.\r\ncomponentTags:   Compartment, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nIn this model, a boundary species with 'hasOnlySubstanceUnits=true' is in a non-unity compartment, and changes according to a rate rule.  This test ensures that simulators apply the rate rule to the species amount, and not to the species concentration.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (c)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1.2$ | variable |\r\n| Initial volume of compartment 'c' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: c, isAmount: true, } .= 1.2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A boundary substance-only species in non-unit compartment under control of a rate rule.\r\ncomponentTags:   Compartment, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nIn this model, a boundary species with 'hasOnlySubstanceUnits=true' is in a non-unity compartment, and changes according to a rate rule.  This test ensures that simulators apply the rate rule to the species amount, and not to the species concentration.  This model is exactly the same as test 1219, but the Species initial value is set by its concentration, not its amount.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (c)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0.6$ | variable |\r\n| Initial volume of compartment 'c' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: c, isAmount: true, } .= 0.6 * c;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A boundary substance-only species in varying compartment under control of a rate rule.\r\ncomponentTags:   Compartment, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, NonConstantCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a boundary species with 'hasOnlySubstanceUnits=true' is changing according to a rate rule, and is in a compartment which itself is changing due to a rate rule.  However, since the species is always described in terms of amount, the fact that its compartment is changing does not affect it.  This test ensures that simulators apply the rate rule to the species amount, and not to the species concentration.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (c)\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $1$ |\r\n| Rate | c | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1.2$ | variable |\r\n| Initial volume of compartment 'c' | $2$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { } .= 2;\n\r\nS1 @Species { compartment: c, isAmount: true, } .= 1.2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 1;\r\nc_proc @Process { actors:  = c, };\r\nc_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A boundary substance-only species in varying compartment under control of a rate rule.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, NonConstantCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a boundary species with 'hasOnlySubstanceUnits=true' is changing according to a rate rule, and is in a compartment which itself changes due to an event.  However, since the species is always described in terms of amount, the fact that its compartment changes does not affect it.  This test ensures that simulators apply the rate rule to the species amount, and not to the species concentration.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (c)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > 5.5$ | $c = 4$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1.2$ | variable |\r\n| Initial volume of compartment 'c' | $2$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { } .= 2;\r\nc [_E0]= 4;\n\r\nS1 @Species { compartment: c, isAmount: true, } .= 1.2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 1;\n\r\n_E0 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A boundary substance-only species in varying compartment under control of a rate rule.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, InitialValueReassigned, NonConstantCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a boundary species with 'hasOnlySubstanceUnits=true' is changing according to a rate rule, and is in a compartment which itself changes due to an assignment rule.  However, since the species is always described in terms of amount, the fact that its compartment changes does not affect it.  This test ensures that simulators apply the rate rule to the species amount, and not to the species concentration.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (c)\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $1$ |\r\n| Assignment | c | $1 * time + 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1.2$ | variable |\r\n| Initial volume of compartment 'c' | $1 * time + 2$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { };\r\nc := 1 * t + 2;\n\r\nS1 @Species { compartment: c, isAmount: true, } .= 1.2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in an initial assignment.\r\ncomponentTags:   Compartment, InitialAssignment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in an initial assignment.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (p1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter p1 | $J0$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := 1;\n\r\np1 @Record { } .= J0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in an assignment rule.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in an assignment rule.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (p1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | p1 | $J0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter p1 | $J0$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := 1;\n\r\np1 @Record { };\r\np1 := J0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in a rate rule.\r\ncomponentTags:   Compartment, Parameter, RateRule, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in a rate rule.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (p1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p1 | $J0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter p1 | $0$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := 1;\r\np1_proc @Process { actors:  = p1, };\r\np1_proc := J0;\n\r\np1 @Record { } .= 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in a trigger.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in a trigger.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > J0$ | $k1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter k1 | $1.5$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := k1;\n\r\nk1 @Record { } .= 1.5;\r\nk1 [_E0]= 2;\n\r\n_E0 @DSwitcher { trigger: t > J0, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in an event assignment.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in an event assignment.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > 5.5$ | $k1 = 1 + J0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter k1 | $1$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := k1;\n\r\nk1 @Record { } .= 1;\r\nk1 [_E0]= 1 + J0;\n\r\n_E0 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in an event priority.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in an event priority.  E1 has a lower priority, and thus executes after E0, leaving k1 with a value of 2 instead of 10.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |]\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ | $J0$ | $k1 = 10$ |\r\n| E1 | $time > 5.5$ | $J0 - 1$ | $k1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter k1 | $1$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := k1;\n\r\nk1 @Record { } .= 1;\r\nk1 [E0]= 10;\r\nk1 [E1]= 2;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\r\nE1 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in another reaction's kinetic law.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in another reaction (J1).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (k1)\r\n* 1 compartment (c)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |\r\n| J1: -> S2 | $J0 + 1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial concentration of species S2 | $0$ | variable |\r\n| Initial value of parameter k1 | $1$ | constant |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\r\nS2 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := k1;\r\nJ1 @Reaction { actors:  = S2, reversible: false, };\r\nJ1 := J0 + 1;\n\r\nk1 @Const { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is shadowed by another reaction's local parameter.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check shadowing the identifier of a reaction (J0) with a local parameter of another reaction (J1).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (k1)\r\n* 1 local parameter (J1.J0)\r\n* 1 compartment (c)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |\r\n| J1: -> S2 | $J0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial concentration of species S2 | $0$ | variable |\r\n| Initial value of parameter k1 | $1$ | variable |\r\n| Initial value of local parameter 'J1.J0' | $2$ | constant |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\r\nS2 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := k1;\r\nJ1 @Reaction { actors:  = S2, reversible: false, };\r\nJ1 := J0__J1_local;\n\r\nk1 @Record { } .= 1;\n\r\nJ0__J1_local @Const { } = 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simple reaction whose identifier is used in an initial assignment.\r\ncomponentTags:   Compartment, FunctionDefinition, InitialAssignment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to check using the identifier of a reaction (J0) in a function within an initial assignment.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (p1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1$ |]\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | addone | x | $x + 1$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter p1 | $addone(J0)$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\naddone #defineFunction { arguments: [x], math: x + 1, };\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, reversible: false, };\r\nJ0 := 1;\n\r\np1 @Record { } .= addone(J0);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An InitialAssignment with missing MathML.\r\ncomponentTags:   InitialAssignment, Parameter\r\ntestTags:        NoMathML\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that if an InitialAssignment with no Math child is encountered, it is ignored.\r\n\r\nThe model contains:\r\n* 1 parameter (p)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p | $3$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An AssignmentRule with missing MathML.\r\ncomponentTags:   AssignmentRule, Parameter\r\ntestTags:        NoMathML\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that if an AssignmentRule with no Math child is encountered, it is ignored.\r\n\r\nThe model contains:\r\n* 1 parameter (p)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | p | $$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np @Record { } .= 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An EventAssignment with missing MathML.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter\r\ntestTags:        NoMathML, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that if an EventAssignment with no Math child is encountered, it is ignored.\r\n\r\nThe model contains:\r\n* 1 parameter (p)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ | $p = $ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np @Record { } .= 3;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An Event with no EventAssignments.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This test was written to ensure that if no EventAssignments are found in an Event, it is ignored.\r\n\r\nThe model contains:\r\n* 1 parameter (p)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ |  |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np @Record { } .= 3;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An Event Priority with missing MathML.\r\ncomponentTags:   CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:        NoMathML, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that if an Event Priority with no MathML is encountered, the Priority is ignored.\r\n\r\nThe model contains:\r\n* 1 parameter (p)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| _E0 | $time > 5.5$ | (unset) | $p = 5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np @Record { } .= 3;\r\np [_E0]= 5;\n\r\n_E0 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two EventAssignments, one with missing MathML.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter\r\ntestTags:        NoMathML, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that even if one EventAssignment is to be ignored due to it having missing MathML, there may be other EventAssignments that are normal.\r\n\r\nThe model contains:\r\n* 2 parameters (p, d)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > 5.5$ | $d = $ |\r\n|  |  | $p = 5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p | $3$ | variable |\r\n| Initial value of parameter d | $5$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np @Record { } .= 3;\r\np [_E0]= 5;\r\nd @Record { } .= 5;\n\r\n_E0 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A Reaction with no reactants or products.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that a Reaction with no reactants nor produts is treated properly.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (c)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 2 / c;\n\r\nJ0 @Reaction { actors:  = , };\r\nJ0 := 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two Reactions; one with no reactants or products.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that a Reaction with no reactants nor produts is treated properly when another normal Reaction is present.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (c)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $2$ |\r\n| J1: -> S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial volume of compartment 'c' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nc @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: c, } .= 2 / c;\n\r\nJ0 @Reaction { actors:  = , reversible: false, };\r\nJ0 := 2;\r\nJ1 @Reaction { actors:  = S1, reversible: false, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A Constraint with no MathML.\r\ncomponentTags:   Parameter\r\ntestTags:        NoMathML\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis test was written to ensure that a Constraint with no MathML is properly ignored.\r\n\r\nThe model contains:\r\n* 1 parameter (p)\r\n\r\nIt also contains 1 constraints ((unset)) The initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p | $3$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A rateOf csymbol in an event priority.\r\ncomponentTags:   CSymbolRateOf, CSymbolTime, EventNoDelay, EventPriority, Parameter, RateRule\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A rateOf csymbol is used here in an event priority that assigns to p2.\r\n\r\nThe model contains:\r\n* 2 parameters (p1, p2)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ | $1.01$ | $p2 = 5$ |\r\n| E1 | $time > 5.5$ | $rateOf(p1)$ | $p2 = 3$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | variable |\r\n| Initial value of parameter p2 | $10$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1_proc @Process { actors:  = p1, };\r\np1_proc := 1;\n\r\np1 @Record { } .= 1;\r\np2 @Record { } .= 10;\r\np2 [E0]= 5;\r\np2 [E1]= 3;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\r\nE1 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A variable rateOf csymbol in an event priority.\r\ncomponentTags:   CSymbolRateOf, CSymbolTime, EventNoDelay, EventPriority, Parameter, RateRule\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A variable rateOf csymbol is used here in an event priority that assigns to p2.  At the time the event triggers, the priority is greater than .021, meaning that it fires first, and E0 fires second, leaving the value of p2 at 5.\r\n\r\nThe model contains:\r\n* 2 parameters (p1, p2)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ | $0.021$ | $p2 = 5$ |\r\n| E1 | $time > 5.5$ | $rateOf(p1)$ | $p2 = 3$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p1 | $0.01 * p1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $2$ | variable |\r\n| Initial value of parameter p2 | $10$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1_proc @Process { actors:  = p1, };\r\np1_proc := 0.01 * p1;\n\r\np1 @Record { } .= 2;\r\np2 @Record { } .= 10;\r\np2 [E0]= 5;\r\np2 [E1]= 3;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\r\nE1 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Use of the 'max' MathML in assignment rules.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Parameter\r\ntestTags:        InitialValueReassigned, L3v2MathML, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThree tests of the 'max' MathML construct in assignment rules.\r\n\r\nThe model contains:\r\n* 3 parameters (p1, p2, p3)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | p1 | $max(-5, -time)$ |\r\n| Assignment | p2 | $max(time)$ |\r\n| Assignment | p3 | $max(5, time)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $max(-5, -time)$ | variable |\r\n| Initial value of parameter p2 | $max(time)$ | variable |\r\n| Initial value of parameter p3 | $max(5, time)$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { };\r\np1 := max((-5), (-t));\r\np2 @Record { };\r\np2 := max(t);\r\np3 @Record { };\r\np3 := max(5, t);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Use of the 'min' MathML in assignment rules.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Parameter\r\ntestTags:        InitialValueReassigned, L3v2MathML, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nThree tests of the 'min' MathML construct in assignment rules.\r\n\r\nThe model contains:\r\n* 3 parameters (p1, p2, p3)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | p1 | $min(-5, -time)$ |\r\n| Assignment | p2 | $min(time)$ |\r\n| Assignment | p3 | $min(5, time, 7)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $min(-5, time)$ | variable |\r\n| Initial value of parameter p2 | $min(time)$ | variable |\r\n| Initial value of parameter p3 | $min(5, time, 7)$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { };\r\np1 := min((-5), (-t));\r\np2 @Record { };\r\np2 := min(t);\r\np3 @Record { };\r\np3 := min(5, t, 7);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Use of a Boolean in an event priority.\r\ncomponentTags:   CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:        BoolNumericSwap, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThe two events have priorities of 'true' and 'false', causing the 'true' priority to fire first.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ | $true$ | $p1 = 10$ |\r\n| E1 | $time > 5.5$ | $false$ | $p1 = 20$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $5$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= 5;\r\np1 [E0]= 10;\r\np1 [E1]= 20;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\r\nE1 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A rateOf csymbol in an event priority.\r\ncomponentTags:   CSymbolRateOf, CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A rateOf csymbol is used here in an event priority that assigns to p2.  This is exactly the same model as 01262, with p1 changing as a species in a reaction, instead of in a rate rule.\r\n\r\nThe model contains:\r\n* 1 species (p1)\r\n* 1 parameter (p2)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> p1 | $1$ |]\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ | $1.01$ | $p2 = 5$ |\r\n| E1 | $time > 5.5$ | $rateOf(p1)$ | $p2 = 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species p1 | $1$ | variable |\r\n| Initial value of parameter p2 | $10$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\np1 @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = p1, };\r\nJ0 := 1;\n\r\np2 @Record { } .= 10;\r\np2 [E0]= 5;\r\np2 [E1]= 3;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\r\nE1 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A variable rateOf csymbol in an event priority.\r\ncomponentTags:   CSymbolRateOf, CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A variable rateOf csymbol is used here in an event priority that assigns to p2.  At the time the event triggers, the priority is greater than .021, meaning that it fires first, and E0 fires second, leaving the value of p2 at 5.  This is exactly the same model as 01267, with p1 changing as a species in a reaction, instead of in a rate rule.\r\n\r\nThe model contains:\r\n* 1 species (p1)\r\n* 1 parameter (p2)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> p1 | $0.01 * p1$ |]\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 5.5$ | $0.021$ | $p2 = 5$ |\r\n| E1 | $time > 5.5$ | $rateOf(p1)$ | $p2 = 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species p1 | $2$ | variable |\r\n| Initial value of parameter p2 | $10$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\np1 @Species { compartment: C, } .= 2;\n\r\nJ0 @Reaction { actors:  = p1, };\r\nJ0 := 0.01 * p1;\n\r\np2 @Record { } .= 10;\r\np2 [E0]= 5;\r\np2 [E1]= 3;\n\r\nE0 @DSwitcher { trigger: t > 5.5, };\r\nE1 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An empty reaction's identifier used in an initial assignment.\r\ncomponentTags:   InitialAssignment, Parameter, Reaction\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A reaction with no products nor reactants, but which has a kinetic law, has its identifier used in an initial assignment.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $J0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ0 @Reaction { actors:  = , };\r\nJ0 := 3;\n\r\np1 @Record { } .= J0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An empty reaction's identifier used in an assignment rule.\r\ncomponentTags:   AssignmentRule, Parameter, Reaction\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A reaction with no products nor reactants, but which has a kinetic law, has its identifier used in an assignment rule.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $3$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | p1 | $J0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $J0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ0 @Reaction { actors:  = , };\r\nJ0 := 3;\n\r\np1 @Record { };\r\np1 := J0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An empty reaction's identifier used in a rate rule.\r\ncomponentTags:   Parameter, RateRule, Reaction\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A reaction with no products nor reactants, but which has a kinetic law, has its identifier used in a rate rule.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $3$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p1 | $J0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ0 @Reaction { actors:  = , };\r\nJ0 := 3;\r\np1_proc @Process { actors:  = p1, };\r\np1_proc := J0;\n\r\np1 @Record { } .= 0;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An empty reaction's identifier used in an event assignment.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, Reaction\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A reaction with no products nor reactants, but which has a kinetic law, has its identifier used in an event assignment.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $3$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > 4.5$ | $p1 = J0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ0 @Reaction { actors:  = , };\r\nJ0 := 3;\n\r\np1 @Record { } .= 0;\r\np1 [_E0]= J0;\n\r\n_E0 @DSwitcher { trigger: t > 4.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An empty reaction's identifier used in an event trigger.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, Reaction\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A reaction with no products nor reactants, but which has a kinetic law, has its identifier used in an event trigger.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $3$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time > (J0 + 1.5)$ | $p1 = 5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ0 @Reaction { actors:  = , };\r\nJ0 := 3;\n\r\np1 @Record { } .= 0;\r\np1 [E0]= 5;\n\r\nE0 @DSwitcher { trigger: t > (J0 + 1.5), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An empty reaction's identifier used in an assignment rule.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Parameter, Reaction\r\ntestTags:        InitialValueReassigned, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A reaction with no products nor reactants, but which has a kinetic law, has its identifier used in an assignment rule.  Differs from test 01301 because the kinetic law is non-constant.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> | $time$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | p1 | $J0 + 1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $J0 + 1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ0 @Reaction { actors:  = , };\r\nJ0 := t;\n\r\np1 @Record { };\r\np1 := J0 + 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species always used as amount, with requested output in concentration\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Concentration, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this simple model, a species whose level is always used in terms of amount in the model (initialAmount, hasOnlySubstanceUnits=true) has requested output in terms of concentration.  This is more a test of the test suite system itself than a modeling test per se.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial volume of compartment 'C' | $3$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 3;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species always used as amount, with requested output in concentration\r\ncomponentTags:   Compartment, RateRule, Species\r\ntestTags:        Concentration, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this simple model, a species whose level is always used in terms of amount in the model (initialAmount, hasOnlySubstanceUnits=true) has requested output in terms of concentration.  This is more a test of the test suite system itself than a modeling test per se.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial volume of compartment 'C' | $3$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 3;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species always used as amount, with requested output in concentration\r\ncomponentTags:   Compartment, RateRule, Species\r\ntestTags:        Concentration, BoundaryCondition, HasOnlySubstanceUnits, NonConstantCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this simple model, a species whose level is always used in terms of amount in the model (initialAmount, hasOnlySubstanceUnits=true) has requested output in terms of concentration.  This is more a test of the test suite system itself than a modeling test per se.  In this model, it is the compartment size that changes, not the species amount.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | C | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial volume of compartment 'C' | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { } .= 3;\n\r\nS1 @Species { boundary: true, compartment: C, isAmount: true, } .= 2;\n\r\nC_proc @Process { actors:  = C, };\r\nC_proc := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Compartment with spatial dimensions of 2.7.\r\ncomponentTags:   Compartment\r\ntestTags:        NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis model contains only a compartment, but it has a spatial dimension of 2.7.  The numerics are not affected at all; this simply tests that the existence of this dimensionality doesn't affect the simulation.\r\n\r\nThe model contains:\r\n* 1 compartment (C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial volume of compartment 'C' | $4$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 4;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested function definitions\r\ncomponentTags:   FunctionDefinition, InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A very simple model that calls a function defintion with no arguments, nested three deep.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\nThe model contains the following function definitions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | three |  | $3$ |\r\n | getthree |  | $three()$ |\r\n | getgetthree |  | $getthree()$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $getgetthree()$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\nthree #defineFunction { arguments: [], math: 3, };\r\ngetthree #defineFunction { arguments: [], math: three(), };\r\ngetgetthree #defineFunction { arguments: [], math: getthree(), };\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= getgetthree();\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested function definitions\r\ncomponentTags:   FunctionDefinition, InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A very simple model that calls a function defintion with one argument, nested three deep.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\nThe model contains the following function definitions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | this | x | $x$ |\r\n | getthis | x | $this(x)$ |\r\n | getgetthis | x | $getthis(x)$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $getgetthis(3)$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\nthis #defineFunction { arguments: [x], math: x, };\r\ngetthis #defineFunction { arguments: [x], math: this(x), };\r\ngetgetthis #defineFunction { arguments: [x], math: getthis(x), };\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= getgetthis(3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested function definitions\r\ncomponentTags:   FunctionDefinition, InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A very simple model that calls a function defintion with one argument, nested three deep.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\nThe model contains the following function definitions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | addone | x | $x + 1$ |\r\n | addoneagain | x | $addone(x) + 1$ |\r\n | addoneagainagain | x | $addoneagain(x) + 1$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $addoneagainagain(3)$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\naddone #defineFunction { arguments: [x], math: x + 1, };\r\naddoneagain #defineFunction { arguments: [x], math: addone(x) + 1, };\r\naddoneagainagain #defineFunction { arguments: [x], math: addoneagain(x) + 1, };\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= addoneagainagain(3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested function definitions\r\ncomponentTags:   FunctionDefinition, InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A slightly complicated nested function definition, nested three deep.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\nThe model contains the following function definitions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | addone | x | $x + 1$ |\r\n | addoneagain | x | $addone(x) + 1$ |\r\n | addoneagainandagain | x | $addoneagain(x) + addone(x) + 1$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $addoneagainandagain(3)$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\naddone #defineFunction { arguments: [x], math: x + 1, };\r\naddoneagain #defineFunction { arguments: [x], math: addone(x) + 1, };\r\naddoneagainandagain #defineFunction { arguments: [x], math: addoneagain(x) + addone(x) + 1, };\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= addoneagainandagain(3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Nested function definitions\r\ncomponentTags:   FunctionDefinition, InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A slightly complicated nested function definition, nested three deep.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\nThe model contains the following function definitions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | addone | x | $x + 1$ |\r\n | addoneagain2x | x | $addone(x) + addone(x) + 1$ |\r\n | addoneagainandagain2x | x | $addoneagain2x(x) + addoneagain2x(x) + addone(x) + addone(x) + 1$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $addoneagainandagain2x(3)$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\naddone #defineFunction { arguments: [x], math: x + 1, };\r\naddoneagain2x #defineFunction { arguments: [x], math: addone(x) + addone(x) + 1, };\r\naddoneagainandagain2x #defineFunction { arguments: [x], math: addoneagain2x(x) + addoneagain2x(x) + addone(x) + addone(x) + 1, };\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= addoneagainandagain2x(3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Use of a csymbol whose putative ID shadows another parameter.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Parameter\r\ntestTags:        InitialValueReassigned, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model the 'time' csymbol is given the ID of another parameter.  This ID should be ignored.\r\n\r\nThe model contains:\r\n* 2 parameters (p1, p2)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | p2 | $1 + time$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $5$ | constant |\r\n| Initial value of parameter p2 | $1 + time$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np2 @Record { };\r\np2 := 1 + t;\n\r\np1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simultaneous event using trigger-time values.\r\ncomponentTags:   CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventUsesTriggerTimeValues, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, an event uses trigger-time values, which makes a difference to the results.\r\n\r\nThe model contains:\r\n* 2 parameters (x, y)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E1 | $time > 3.5$ | $10$ | $x = 7$ |\r\n| E2 | $time > 3.5$ | $5$ | $y = x$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |\r\n| Initial value of parameter y | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E1]= 7;\r\ny @Record { } .= 0;\r\ny [E2]= x;\n\r\nE1 @DSwitcher { trigger: t > 3.5, };\r\nE2 @DSwitcher { trigger: t > 3.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A simultaneous event using assignment-time values.\r\ncomponentTags:   CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventUsesAssignmentTimeValues, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, an event uses assignment-time values, which makes a difference to the results.\r\n\r\nThe model contains:\r\n* 2 parameters (x, y)\r\n\r\nThere are 2 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Use values from:*  | *Event Assignments* |\r\n| E1 | $time > 3.5$ | $10$ | Trigger time | $x = 7$ |\r\n| E2 | $time > 3.5$ | $5$ | Assignment time | $y = x$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |\r\n| Initial value of parameter y | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E1]= 7;\r\ny @Record { } .= 0;\r\ny [E2]= x;\n\r\nE1 @DSwitcher { trigger: t > 3.5, };\r\nE2 @DSwitcher { trigger: t > 3.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two events that fire at t0 with different priorities.\r\ncomponentTags:   EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two events both fire at t0, with different priorities.  Since both assign to the same variable, the one with the lower priority sets the value going forward in time.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere are 2 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *initialValue*  | *Event Assignments* |\r\n| E1 | $x > 2$ | $10$ | false | $x = 7$ |\r\n| E2 | $x > 2$ | $5$ | false | $x = 5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E1]= 7;\r\nx [E2]= 5;\n\r\nE1 @DSwitcher { trigger: x > 2, };\r\nE2 @DSwitcher { trigger: x > 2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two events that fire at t0 with different priorities.\r\ncomponentTags:   EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventT0Firing, EventUsesTriggerTimeValues, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two events both fire at t0, with different priorities.  The first assigns a new value to 'x', and the second assigns the value of 'x' to y, but uses the *trigger* time value, meaning that afterwards, both x and y end up with new values.\r\n\r\nThe model contains:\r\n* 2 parameters (x, y)\r\n\r\nThere are 2 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *initialValue*  | *Event Assignments* |\r\n| E1 | $x > 2$ | $10$ | false | $x = 7$ |\r\n| E2 | $x > 2$ | $5$ | false | $y = x$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |\r\n| Initial value of parameter y | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E1]= 7;\r\ny @Record { } .= 0;\r\ny [E2]= x;\n\r\nE1 @DSwitcher { trigger: x > 2, };\r\nE2 @DSwitcher { trigger: x > 2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two events that fire at t0 with different priorities.\r\ncomponentTags:   EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventT0Firing, EventUsesAssignmentTimeValues, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two events both fire at t0, with different priorities.  The first assigns a new value to 'x', and the second assigns the value of 'x' to y, using the *assignment* time value, meaning that afterwards, both x and y end up with the same value.\r\n\r\nThe model contains:\r\n* 2 parameters (x, y)\r\n\r\nThere are 2 events:\r\n\r\n[{width:45em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *initialValue*  |  *Use values from:*  | *Event Assignments* |\r\n| E1 | $x > 2$ | $10$ | false | Trigger time | $x = 7$ |\r\n| E2 | $x > 2$ | $5$ | false | Assignment time | $y = x$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |\r\n| Initial value of parameter y | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E1]= 7;\r\ny @Record { } .= 0;\r\ny [E2]= x;\n\r\nE1 @DSwitcher { trigger: x > 2, };\r\nE2 @DSwitcher { trigger: x > 2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two events that trigger at t0, one of which cancels the other.\r\ncomponentTags:   EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventIsNotPersistent, EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two events trigger at t0, but the first reverses the trigger of the second, which is set persistent=false, cancelling the event's execution.\r\n\r\nThe model contains:\r\n* 2 parameters (x, y)\r\n\r\nThere are 2 events:\r\n\r\n[{width:45em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  |  *initialValue*  | *Event Assignments* |\r\n| E1 | $x > 2$ | $10$ | true | false | $x = 0$ |\r\n| E2 | $x > 2$ | $5$ | false | false | $y = 7$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |\r\n| Initial value of parameter y | $6$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E1]= 0;\r\ny @Record { } .= 6;\r\ny [E2]= 7;\n\r\nE1 @DSwitcher { trigger: x > 2, };\r\nE2 @DSwitcher { trigger: x > 2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two events that trigger at t0, one of which fails to cancels the other.\r\ncomponentTags:   EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventIsPersistent, EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two events trigger at t0, and the first reverses the trigger of the second, but it's not set persistent=false, allowing it to continue.\r\n\r\nThis is the best test, because it's test 1337.\r\n\r\nThe model contains:\r\n* 2 parameters (x, y)\r\n\r\nThere are 2 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *initialValue*  | *Event Assignments* |\r\n| E1 | $x > 2$ | $10$ | false | $x = 0$ |\r\n| E2 | $x > 2$ | $5$ | false | $y = 7$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |\r\n| Initial value of parameter y | $6$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= 3;\r\nx [E1]= 0;\r\ny @Record { } .= 6;\r\ny [E2]= 7;\n\r\nE1 @DSwitcher { trigger: x > 2, };\r\nE2 @DSwitcher { trigger: x > 2, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two events that trigger at t0, one of which fails to cancels the other.\r\ncomponentTags:   Compartment, Parameter, RateRule, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a reaction that produces S1 starts off positive, but then goes negative, due to a parameter under control of a rate rule.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | k1 | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter k1 | $5$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := k1;\r\nk1_proc @Process { actors:  = k1, };\r\nk1_proc := (-1);\n\r\nk1 @Record { } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A reaction whose rate becomes negative.\r\ncomponentTags:   Compartment, Parameter, RateRule, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a reaction that produces S1 starts off negative, but then goes positive, due to a parameter under control of a rate rule.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | k1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter k1 | $-5$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := k1;\r\nk1_proc @Process { actors:  = k1, };\r\nk1_proc := 1;\n\r\nk1 @Record { } .= -5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A reaction whose rate goes negative due to an event.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, NonConstantParameter, ReversibleReaction\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a reaction that produces S1 starts off positive, but then goes negative, due to an event.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > 5.5$ | $k1 = -1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter k1 | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := k1;\n\r\nk1 @Record { } .= 1;\r\nk1 [_E0]= (-1);\n\r\n_E0 @DSwitcher { trigger: t > 5.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Just a compartment and a species.\r\ncomponentTags:   Compartment, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model test the simple existence of a species and a compartment.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $2$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Just a non-unity compartment and a species.\r\ncomponentTags:   Compartment, Species\r\ntestTags:        Amount, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model test the simple existence of a species and a non-unity compartment.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial volume of compartment 'C' | $2$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in an assignment rule.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel reaction ID is used in an assignment rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | A__x | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $J1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in an initial assignment.\r\ncomponentTags:   Compartment, InitialAssignment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced reaction ID is used in an initial assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $J1 + 2$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in an event trigger.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced reaction ID is used in an event trigger.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > (J1 + 0.5)$ | $A__x = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in am event priority.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced reaction ID is used in an event priority.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $J1$ | $A__x = 4$ |\r\n| A__E1 | $time > 5.5$ | $4$ | $A__x = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in an event assignment.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced reaction ID is used in an event assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $A__x = J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in an event delay.\r\ncomponentTags:   CSymbolTime, Compartment, EventWithDelay, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced reaction ID is used in an event delay.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Delay*  | *Event Assignments* |\r\n| A__E0 | $time > 0.5$ | $J1$ | $A__x = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in an algebraic rule.\r\ncomponentTags:   AlgebraicRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel reaction ID is used in an algebraic rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Algebraic | $0$ | $A__x - J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $unknown$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in a reaction.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel reaction ID is used in another reaction.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |\r\n| A__J2: S1 -> | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced reaction whose ID is used in a rate rule.\r\ncomponentTags:   Compartment, Parameter, RateRule, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel reaction ID is used in a rate rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $5$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | A__x | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $0$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in an assignment rule.\r\ncomponentTags:   AssignmentRule, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel parameter ID is used in an assignment rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | A__x | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $J1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in an initial assignment.\r\ncomponentTags:   InitialAssignment, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced parameter ID is used in an initial assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $J1 + 2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in an event trigger.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced parameter ID is used in an event trigger.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > (J1 + 0.5)$ | $A__x = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in an event priority.\r\ncomponentTags:   CSymbolTime, EventNoDelay, EventPriority, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced parameter ID is used in an event priority.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $J1$ | $A__x = 4$ |\r\n| A__E1 | $time > 5.5$ | $4$ | $A__x = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in an event assignment.\r\ncomponentTags:   CSymbolTime, EventNoDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced parameter ID is used in an event assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $A__x = J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in an event delay.\r\ncomponentTags:   CSymbolTime, EventWithDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced parameter ID is used in an event delay.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Delay*  | *Event Assignments* |\r\n| A__E0 | $time > 0.5$ | $J1$ | $A__x = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in an algebraic rule.\r\ncomponentTags:   AlgebraicRule, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel parameter ID is used in an algebraic rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Algebraic | $0$ | $A__x - J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $unknown$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in a reaction.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel parameter ID is used in a reaction.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (J1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| A__J2: -> S1 | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced parameter whose ID is used in a rate rule.\r\ncomponentTags:   Parameter, RateRule, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel parameter ID is used in a rate rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 parameters (J1, A__x)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | A__x | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter J1 | $5$ | constant |\r\n| Initial value of parameter A__x | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in an assignment rule.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel compartment ID is used in an assignment rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | A__x | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $J1$ | variable |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in an initial assignment.\r\ncomponentTags:   Compartment, InitialAssignment, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced compartment ID is used in an initial assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $J1 + 2$ | constant |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in an event trigger.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced compartment ID is used in an event trigger.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > (J1 + 0.5)$ | $A__x = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in an event priority.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced compartment ID is used in an event priority.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $J1$ | $A__x = 4$ |\r\n| A__E1 | $time > 5.5$ | $4$ | $A__x = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in an event assignment.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced compartment ID is used in an event assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $A__x = J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in an event delay.\r\ncomponentTags:   CSymbolTime, Compartment, EventWithDelay, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced compartment ID is used in an event delay.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Delay*  | *Event Assignments* |\r\n| A__E0 | $time > 0.5$ | $J1$ | $A__x = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in an algebraic rule.\r\ncomponentTags:   AlgebraicRule, Compartment, Parameter, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        InitialValueReassigned, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel compartment ID is used in an algebraic rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Algebraic | $0$ | $A__x - J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $unknown$ | variable |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in a reaction.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, MultiCompartment, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel compartment ID is used in a reaction.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 2 compartments (C, J1)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| A__J2: -> S1 | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced compartment whose ID is used in a rate rule.\r\ncomponentTags:   Compartment, Parameter, RateRule, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        NonConstantParameter, NonUnityCompartment, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel compartment ID is used in a rate rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 parameter (A__x)\r\n* 1 compartment (J1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | A__x | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter A__x | $0$ | variable |\r\n| Initial volume of compartment 'J1' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nJ1 @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species whose ID is used in an assignment rule.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel species ID is used in an assignment rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (J1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (A_C)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | A__x | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species J1 | $5$ | variable |\r\n| Initial value of parameter A__x | $J1$ | variable |\r\n| Initial volume of compartment 'A_C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nA_C @Compartment { boundary: true, } .= 1;\n\r\nJ1 @Species { boundary: true, compartment: A_C, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species whose ID is used in an initial assignment.\r\ncomponentTags:   Compartment, InitialAssignment, Parameter, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species ID is used in an initial assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (J1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (A_C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species J1 | $5$ | variable |\r\n| Initial value of parameter A__x | $J1 + 2$ | constant |\r\n| Initial volume of compartment 'A_C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nA_C @Compartment { boundary: true, } .= 1;\n\r\nJ1 @Species { boundary: true, compartment: A_C, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species whose ID is used in an event trigger.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, BoundaryCondition, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species ID is used in an event trigger.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (J1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (A_C)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > (J1 + 0.5)$ | $A__x = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species J1 | $5$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'A_C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nA_C @Compartment { boundary: true, } .= 1;\n\r\nJ1 @Species { boundary: true, compartment: A_C, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species whose ID is used in an event assignment.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, BoundaryCondition, NonConstantParameter, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species ID is used in an event assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (J1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (A_C)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $A__x = J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species J1 | $5$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'A_C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nA_C @Compartment { boundary: true, } .= 1;\n\r\nJ1 @Species { boundary: true, compartment: A_C, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species whose ID is used in a reaction.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, BoundaryCondition, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel species ID is used in a reaction.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 2 species (S1, J1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| A__J2: -> S1 | $J1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial concentration of species J1 | $5$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\r\nJ1 @Species { boundary: true, compartment: C, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in an assignment rule.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, InitialValueReassigned, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel species reference (itself in a replaced reaction) is used in an assignment rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | A__x | $J1_sr$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $J1_sr$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in an initial assignment.\r\ncomponentTags:   Compartment, InitialAssignment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, InitialValueReassigned, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species reference (itself in a replaced reaction) is used in an initial assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $J1_sr + 2$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in an event trigger.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species reference (itself in a replaced reaction) is used in an event trigger.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > (J1_sr + 0.5)$ | $A__x = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in am event priority.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species reference (itself in a replaced reaction) is used in an event priority.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $J1_sr$ | $A__x = 4$ |\r\n| A__E1 | $time > 5.5$ | $4$ | $A__x = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in an event assignment.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species reference (itself in a replaced reaction) is used in an event assignment.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| A__E0 | $time > 5.5$ | $A__x = J1_sr$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in an event delay.\r\ncomponentTags:   CSymbolTime, Compartment, EventWithDelay, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced species reference (itself in a replaced reaction) is used in an event delay.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Delay*  | *Event Assignments* |\r\n| A__E0 | $time > 0.5$ | $J1_sr$ | $A__x = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in an algebraic rule.\r\ncomponentTags:   AlgebraicRule, Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, InitialValueReassigned, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel species reference (itself in a replaced reaction) is used in an algebraic rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Algebraic | $0$ | $A__x - J1_sr$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $unknown$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference (itself in a replaced reaction) whose ID is used in a reaction.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel species reference (itself in a replaced reaction) is used in another reaction.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |\r\n| A__J2: S1 -> | $J1_sr$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference whose ID is used in a rate rule.\r\ncomponentTags:   Compartment, Parameter, RateRule, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonConstantParameter, NonUnityStoichiometry, SpeciesReferenceInMath, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n In this model, a replaced submodel species reference (itself in a replaced reaction) is used in a rate rule.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 parameter (A__x)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | A__x | $J1_sr$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial value of parameter A__x | $0$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A replaced species reference in a replaced reaction.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: comp\r\n\r\n This is the base model for the previous 9 tests: a replaced species reference inside a replaced reaction.  Neither the reaction ID nor the species reference ID are used anywhere; this is just to make sure simulator software can handle the situation in general.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n* 1 species reference (J1_sr)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> 5S1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 3;\n\r\nJ1 @Reaction { actors:  = 5*S1, };\r\nJ1 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A larger model where the order of assignment rules is important.\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, InitialValueReassigned, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this real model of a reaction system, the order of the assignment rules makes a difference in how the simulation proceeds: it is important to carry out the assignments such that the independent assignments are performed first, with the dependent assignments carried out after the assignments to variables they each depend on.  This has been seen to make an appreciable difference when using large timesteps and the Euler method.\r\n\r\nThe model contains:\r\n* 18 species (pp9_mrna, p9, pp8_mrna, p8, pp7_mrna, p7, pp6_mrna, p6, pp5_mrna, p5, pp4_mrna, p4, pp3_mrna, p3, pp2_mrna, p2, pp1_mrna, p1)\r\n* 90 parameters (pp8_mrna_degradation_rate, pp9_mrna_degradation_rate, p1_degradation_rate, p2_degradation_rate, p3_degradation_rate, p4_degradation_rate, p5_degradation_rate, p6_degradation_rate, p7_degradation_rate, p8_degradation_rate, p9_degradation_rate, v1_Kd, v1_h, v2_Kd, v2_h, v3_Kd, v3_h, v4_Kd, v4_h, v5_Kd, v5_h, v6_Kd, v6_h, v7_Kd, v7_h, v8_Kd, v8_h, v9_Kd, v9_h, pp1_mrna_degradation_rate, pp2_mrna_degradation_rate, pro1_strength, pro2_strength, pro3_strength, pro4_strength, pro5_strength, pro6_strength, pro7_strength, pro8_strength, pro9_strength, pp3_mrna_degradation_rate, v10_Kd, v10_h, v11_Kd, v11_h, v12_Kd, v12_h, v13_Kd, v13_h, pp4_mrna_degradation_rate, v14_Kd, v14_h, v15_Kd, v15_h, pp5_mrna_degradation_rate, rbs1_strength, rbs2_strength, rbs3_strength, rbs4_strength, rbs5_strength, rbs6_strength, rbs7_strength, rbs8_strength, rbs9_strength, pp6_mrna_degradation_rate, pp7_mrna_degradation_rate, as8, cod1, cod2, cod3, cod4, cod5, cod6, cod7, cod8, cod9, rs1, rs2, rs3, rs4, rs5, rs6, rs7, as1, as2, as3, as4, as5, as6, as7)\r\n* 1 compartment (DefaultCompartment)\r\n\r\nThere are 36 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| pp9_v1: -> pp9_mrna | $cod9$ |\r\n| pp9_v2: pp9_mrna -> | $pp9_mrna_degradation_rate * pp9_mrna$ |\r\n| pp9_v3: -> p9 | $rbs9_strength * pp9_mrna$ |\r\n| pp9_v4: p9 -> | $p9_degradation_rate * p9$ |\r\n| pp8_v1: -> pp8_mrna | $cod8$ |\r\n| pp8_v2: pp8_mrna -> | $pp8_mrna_degradation_rate * pp8_mrna$ |\r\n| pp8_v3: -> p8 | $rbs8_strength * pp8_mrna$ |\r\n| pp8_v4: p8 -> | $p8_degradation_rate * p8$ |\r\n| pp7_v1: -> pp7_mrna | $cod7$ |\r\n| pp7_v2: pp7_mrna -> | $pp7_mrna_degradation_rate * pp7_mrna$ |\r\n| pp7_v3: -> p7 | $rbs7_strength * pp7_mrna$ |\r\n| pp7_v4: p7 -> | $p7_degradation_rate * p7$ |\r\n| pp6_v1: -> pp6_mrna | $cod6$ |\r\n| pp6_v2: pp6_mrna -> | $pp6_mrna_degradation_rate * pp6_mrna$ |\r\n| pp6_v3: -> p6 | $rbs6_strength * pp6_mrna$ |\r\n| pp6_v4: p6 -> | $p6_degradation_rate * p6$ |\r\n| pp5_v1: -> pp5_mrna | $cod5$ |\r\n| pp5_v2: pp5_mrna -> | $pp5_mrna_degradation_rate * pp5_mrna$ |\r\n| pp5_v3: -> p5 | $rbs5_strength * pp5_mrna$ |\r\n| pp5_v4: p5 -> | $p5_degradation_rate * p5$ |\r\n| pp4_v1: -> pp4_mrna | $cod4$ |\r\n| pp4_v2: pp4_mrna -> | $pp4_mrna_degradation_rate * pp4_mrna$ |\r\n| pp4_v3: -> p4 | $rbs4_strength * pp4_mrna$ |\r\n| pp4_v4: p4 -> | $p4_degradation_rate * p4$ |\r\n| pp3_v1: -> pp3_mrna | $cod3$ |\r\n| pp3_v2: pp3_mrna -> | $pp3_mrna_degradation_rate * pp3_mrna$ |\r\n| pp3_v3: -> p3 | $rbs3_strength * pp3_mrna$ |\r\n| pp3_v4: p3 -> | $p3_degradation_rate * p3$ |\r\n| pp2_v1: -> pp2_mrna | $cod2$ |\r\n| pp2_v2: pp2_mrna -> | $pp2_mrna_degradation_rate * pp2_mrna$ |\r\n| pp2_v3: -> p2 | $rbs2_strength * pp2_mrna$ |\r\n| pp2_v4: p2 -> | $p2_degradation_rate * p2$ |\r\n| pp1_v1: -> pp1_mrna | $cod1$ |\r\n| pp1_v2: pp1_mrna -> | $pp1_mrna_degradation_rate * pp1_mrna$ |\r\n| pp1_v3: -> p1 | $rbs1_strength * pp1_mrna$ |\r\n| pp1_v4: p1 -> | $p1_degradation_rate * p1$ |]\r\n\r\n\r\nThere are 24 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | as8 | $(1 + (p5 / v9_Kd)^v9_h - 1) / (1 + (p5 / v9_Kd)^v9_h)$ |\r\n| Assignment | cod1 | $pro1_strength$ |\r\n| Assignment | cod2 | $pro2_strength * as1 * rs1$ |\r\n| Assignment | cod3 | $pro3_strength * rs2 * rs3$ |\r\n| Assignment | cod4 | $pro4_strength * rs7 * rs6$ |\r\n| Assignment | cod5 | $pro5_strength * as2$ |\r\n| Assignment | cod6 | $pro6_strength * (as3 + as4)$ |\r\n| Assignment | cod7 | $pro7_strength * (as7 + as8)$ |\r\n| Assignment | cod8 | $pro8_strength * as5 * rs4$ |\r\n| Assignment | cod9 | $pro9_strength * as6 * rs5$ |\r\n| Assignment | rs1 | $1 / (1 + (p9 / v13_Kd)^v13_h)$ |\r\n| Assignment | rs2 | $1 / (1 + (p2 / v2_Kd)^v2_h)$ |\r\n| Assignment | rs3 | $1 / (1 + (p3 / v3_Kd)^v3_h)$ |\r\n| Assignment | rs4 | $1 / (1 + (p8 / v11_Kd)^v11_h)$ |\r\n| Assignment | rs5 | $1 / (1 + (p8 / v12_Kd)^v12_h)$ |\r\n| Assignment | rs6 | $1 / (1 + (p2 / v14_Kd)^v14_h)$ |\r\n| Assignment | rs7 | $1 / (1 + (p3 / v15_Kd)^v15_h)$ |\r\n| Assignment | as1 | $(1 + (p1 / v1_Kd)^v1_h - 1) / (1 + (p1 / v1_Kd)^v1_h)$ |\r\n| Assignment | as2 | $(1 + (p4 / v4_Kd)^v4_h - 1) / (1 + (p4 / v4_Kd)^v4_h)$ |\r\n| Assignment | as3 | $(1 + (p5 / v5_Kd)^v5_h - 1) / (1 + (p5 / v5_Kd)^v5_h)$ |\r\n| Assignment | as4 | $(1 + (p6 / v6_Kd)^v6_h - 1) / (1 + (p6 / v6_Kd)^v6_h)$ |\r\n| Assignment | as5 | $(1 + (p7 / v7_Kd)^v7_h - 1) / (1 + (p7 / v7_Kd)^v7_h)$ |\r\n| Assignment | as6 | $(1 + (p7 / v10_Kd)^v10_h - 1) / (1 + (p7 / v10_Kd)^v10_h)$ |\r\n| Assignment | as7 | $(1 + (p6 / v8_Kd)^v8_h - 1) / (1 + (p6 / v8_Kd)^v8_h)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species pp9_mrna | $0$ | variable |\r\n| Initial amount of species p9 | $0$ | variable |\r\n| Initial amount of species pp8_mrna | $0$ | variable |\r\n| Initial amount of species p8 | $0$ | variable |\r\n| Initial amount of species pp7_mrna | $0$ | variable |\r\n| Initial amount of species p7 | $0$ | variable |\r\n| Initial amount of species pp6_mrna | $0$ | variable |\r\n| Initial amount of species p6 | $0$ | variable |\r\n| Initial amount of species pp5_mrna | $0$ | variable |\r\n| Initial amount of species p5 | $0$ | variable |\r\n| Initial amount of species pp4_mrna | $0$ | variable |\r\n| Initial amount of species p4 | $0$ | variable |\r\n| Initial amount of species pp3_mrna | $0$ | variable |\r\n| Initial amount of species p3 | $0$ | variable |\r\n| Initial amount of species pp2_mrna | $0$ | variable |\r\n| Initial amount of species p2 | $0$ | variable |\r\n| Initial amount of species pp1_mrna | $0$ | variable |\r\n| Initial amount of species p1 | $5$ | variable |\r\n| Initial value of parameter pp8_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter pp9_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter p1_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p2_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p3_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p4_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p5_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p6_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p7_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p8_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter p9_degradation_rate | $0.5$ | constant |\r\n| Initial value of parameter v1_Kd | $11.147$ | constant |\r\n| Initial value of parameter v1_h | $1$ | constant |\r\n| Initial value of parameter v2_Kd | $1$ | constant |\r\n| Initial value of parameter v2_h | $4$ | constant |\r\n| Initial value of parameter v3_Kd | $20$ | constant |\r\n| Initial value of parameter v3_h | $1$ | constant |\r\n| Initial value of parameter v4_Kd | $0.2$ | constant |\r\n| Initial value of parameter v4_h | $4$ | constant |\r\n| Initial value of parameter v5_Kd | $0.2$ | constant |\r\n| Initial value of parameter v5_h | $4$ | constant |\r\n| Initial value of parameter v6_Kd | $0.04$ | constant |\r\n| Initial value of parameter v6_h | $4$ | constant |\r\n| Initial value of parameter v7_Kd | $0.02$ | constant |\r\n| Initial value of parameter v7_h | $4$ | constant |\r\n| Initial value of parameter v8_Kd | $0.04$ | constant |\r\n| Initial value of parameter v8_h | $4$ | constant |\r\n| Initial value of parameter v9_Kd | $0.2$ | constant |\r\n| Initial value of parameter v9_h | $4$ | constant |\r\n| Initial value of parameter pp1_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter pp2_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter pro1_strength | $2$ | constant |\r\n| Initial value of parameter pro2_strength | $4.5077$ | constant |\r\n| Initial value of parameter pro3_strength | $5$ | constant |\r\n| Initial value of parameter pro4_strength | $5$ | constant |\r\n| Initial value of parameter pro5_strength | $5$ | constant |\r\n| Initial value of parameter pro6_strength | $1.31$ | constant |\r\n| Initial value of parameter pro7_strength | $1.31$ | constant |\r\n| Initial value of parameter pro8_strength | $5$ | constant |\r\n| Initial value of parameter pro9_strength | $5$ | constant |\r\n| Initial value of parameter pp3_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter v10_Kd | $0.02$ | constant |\r\n| Initial value of parameter v10_h | $4$ | constant |\r\n| Initial value of parameter v11_Kd | $0.1$ | constant |\r\n| Initial value of parameter v11_h | $2$ | constant |\r\n| Initial value of parameter v12_Kd | $0.1$ | constant |\r\n| Initial value of parameter v12_h | $2$ | constant |\r\n| Initial value of parameter v13_Kd | $0.01$ | constant |\r\n| Initial value of parameter v13_h | $2$ | constant |\r\n| Initial value of parameter pp4_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter v14_Kd | $1$ | constant |\r\n| Initial value of parameter v14_h | $4$ | constant |\r\n| Initial value of parameter v15_Kd | $20$ | constant |\r\n| Initial value of parameter v15_h | $1$ | constant |\r\n| Initial value of parameter pp5_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter rbs1_strength | $0.3668$ | constant |\r\n| Initial value of parameter rbs2_strength | $1.4102$ | constant |\r\n| Initial value of parameter rbs3_strength | $0.8$ | constant |\r\n| Initial value of parameter rbs4_strength | $2.21$ | constant |\r\n| Initial value of parameter rbs5_strength | $0.5$ | constant |\r\n| Initial value of parameter rbs6_strength | $2$ | constant |\r\n| Initial value of parameter rbs7_strength | $5$ | constant |\r\n| Initial value of parameter rbs8_strength | $3.6377$ | constant |\r\n| Initial value of parameter rbs9_strength | $8$ | constant |\r\n| Initial value of parameter pp6_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter pp7_mrna_degradation_rate | $1$ | constant |\r\n| Initial value of parameter as8 | $(1 + (p5 / v9_Kd)^v9_h - 1) / (1 + (p5 / v9_Kd)^v9_h)$ | variable |\r\n| Initial value of parameter cod1 | $pro1_strength$ | variable |\r\n| Initial value of parameter cod2 | $pro2_strength * as1 * rs1$ | variable |\r\n| Initial value of parameter cod3 | $pro3_strength * rs2 * rs3$ | variable |\r\n| Initial value of parameter cod4 | $pro4_strength * rs7 * rs6$ | variable |\r\n| Initial value of parameter cod5 | $pro5_strength * as2$ | variable |\r\n| Initial value of parameter cod6 | $pro6_strength * (as3 + as4)$ | variable |\r\n| Initial value of parameter cod7 | $pro7_strength * (as7 + as8)$ | variable |\r\n| Initial value of parameter cod8 | $pro8_strength * as5 * rs4$ | variable |\r\n| Initial value of parameter cod9 | $pro9_strength * as6 * rs5$ | variable |\r\n| Initial value of parameter rs1 | $1 / (1 + (p9 / v13_Kd)^v13_h)$ | variable |\r\n| Initial value of parameter rs2 | $1 / (1 + (p2 / v2_Kd)^v2_h)$ | variable |\r\n| Initial value of parameter rs3 | $1 / (1 + (p3 / v3_Kd)^v3_h)$ | variable |\r\n| Initial value of parameter rs4 | $1 / (1 + (p8 / v11_Kd)^v11_h)$ | variable |\r\n| Initial value of parameter rs5 | $1 / (1 + (p8 / v12_Kd)^v12_h)$ | variable |\r\n| Initial value of parameter rs6 | $1 / (1 + (p2 / v14_Kd)^v14_h)$ | variable |\r\n| Initial value of parameter rs7 | $1 / (1 + (p3 / v15_Kd)^v15_h)$ | variable |\r\n| Initial value of parameter as1 | $(1 + (p1 / v1_Kd)^v1_h - 1) / (1 + (p1 / v1_Kd)^v1_h)$ | variable |\r\n| Initial value of parameter as2 | $(1 + (p4 / v4_Kd)^v4_h - 1) / (1 + (p4 / v4_Kd)^v4_h)$ | variable |\r\n| Initial value of parameter as3 | $(1 + (p5 / v5_Kd)^v5_h - 1) / (1 + (p5 / v5_Kd)^v5_h)$ | variable |\r\n| Initial value of parameter as4 | $(1 + (p6 / v6_Kd)^v6_h - 1) / (1 + (p6 / v6_Kd)^v6_h)$ | variable |\r\n| Initial value of parameter as5 | $(1 + (p7 / v7_Kd)^v7_h - 1) / (1 + (p7 / v7_Kd)^v7_h)$ | variable |\r\n| Initial value of parameter as6 | $(1 + (p7 / v10_Kd)^v10_h - 1) / (1 + (p7 / v10_Kd)^v10_h)$ | variable |\r\n| Initial value of parameter as7 | $(1 + (p6 / v8_Kd)^v8_h - 1) / (1 + (p6 / v8_Kd)^v8_h)$ | variable |\r\n| Initial volume of compartment 'DefaultCompartment' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nDefaultCompartment @Compartment 'DefaultCompartment' { boundary: true, } .= 1;\n\r\npp9_mrna @Species 'pp9_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np9 @Species 'p9' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp8_mrna @Species 'pp8_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np8 @Species 'p8' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp7_mrna @Species 'pp7_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np7 @Species 'p7' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp6_mrna @Species 'pp6_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np6 @Species 'p6' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp5_mrna @Species 'pp5_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np5 @Species 'p5' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp4_mrna @Species 'pp4_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np4 @Species 'p4' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp3_mrna @Species 'pp3_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np3 @Species 'p3' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp2_mrna @Species 'pp2_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np2 @Species 'p2' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\npp1_mrna @Species 'pp1_mrna' { compartment: DefaultCompartment, } .= 0 / DefaultCompartment;\r\np1 @Species 'p1' { compartment: DefaultCompartment, } .= 5 / DefaultCompartment;\n\r\npp9_v1 @Reaction 'pp9_v1' { actors:  = pp9_mrna, reversible: false, };\r\npp9_v1 := cod9;\r\npp9_v2 @Reaction 'pp9_v2' { actors: pp9_mrna = , modifiers: [p9], reversible: false, };\r\npp9_v2 := pp9_mrna_degradation_rate * pp9_mrna;\r\npp9_v3 @Reaction 'pp9_v3' { actors:  = p9, modifiers: [pp9_mrna], reversible: false, };\r\npp9_v3 := rbs9_strength * pp9_mrna;\r\npp9_v4 @Reaction 'pp9_v4' { actors: p9 = , reversible: false, };\r\npp9_v4 := p9_degradation_rate * p9;\r\npp8_v1 @Reaction 'pp8_v1' { actors:  = pp8_mrna, reversible: false, };\r\npp8_v1 := cod8;\r\npp8_v2 @Reaction 'pp8_v2' { actors: pp8_mrna = , modifiers: [p8], reversible: false, };\r\npp8_v2 := pp8_mrna_degradation_rate * pp8_mrna;\r\npp8_v3 @Reaction 'pp8_v3' { actors:  = p8, modifiers: [pp8_mrna], reversible: false, };\r\npp8_v3 := rbs8_strength * pp8_mrna;\r\npp8_v4 @Reaction 'pp8_v4' { actors: p8 = , reversible: false, };\r\npp8_v4 := p8_degradation_rate * p8;\r\npp7_v1 @Reaction 'pp7_v1' { actors:  = pp7_mrna, reversible: false, };\r\npp7_v1 := cod7;\r\npp7_v2 @Reaction 'pp7_v2' { actors: pp7_mrna = , modifiers: [p7], reversible: false, };\r\npp7_v2 := pp7_mrna_degradation_rate * pp7_mrna;\r\npp7_v3 @Reaction 'pp7_v3' { actors:  = p7, modifiers: [pp7_mrna], reversible: false, };\r\npp7_v3 := rbs7_strength * pp7_mrna;\r\npp7_v4 @Reaction 'pp7_v4' { actors: p7 = , reversible: false, };\r\npp7_v4 := p7_degradation_rate * p7;\r\npp6_v1 @Reaction 'pp6_v1' { actors:  = pp6_mrna, reversible: false, };\r\npp6_v1 := cod6;\r\npp6_v2 @Reaction 'pp6_v2' { actors: pp6_mrna = , modifiers: [p6], reversible: false, };\r\npp6_v2 := pp6_mrna_degradation_rate * pp6_mrna;\r\npp6_v3 @Reaction 'pp6_v3' { actors:  = p6, modifiers: [pp6_mrna], reversible: false, };\r\npp6_v3 := rbs6_strength * pp6_mrna;\r\npp6_v4 @Reaction 'pp6_v4' { actors: p6 = , reversible: false, };\r\npp6_v4 := p6_degradation_rate * p6;\r\npp5_v1 @Reaction 'pp5_v1' { actors:  = pp5_mrna, reversible: false, };\r\npp5_v1 := cod5;\r\npp5_v2 @Reaction 'pp5_v2' { actors: pp5_mrna = , modifiers: [p5], reversible: false, };\r\npp5_v2 := pp5_mrna_degradation_rate * pp5_mrna;\r\npp5_v3 @Reaction 'pp5_v3' { actors:  = p5, modifiers: [pp5_mrna], reversible: false, };\r\npp5_v3 := rbs5_strength * pp5_mrna;\r\npp5_v4 @Reaction 'pp5_v4' { actors: p5 = , reversible: false, };\r\npp5_v4 := p5_degradation_rate * p5;\r\npp4_v1 @Reaction 'pp4_v1' { actors:  = pp4_mrna, reversible: false, };\r\npp4_v1 := cod4;\r\npp4_v2 @Reaction 'pp4_v2' { actors: pp4_mrna = , modifiers: [p4], reversible: false, };\r\npp4_v2 := pp4_mrna_degradation_rate * pp4_mrna;\r\npp4_v3 @Reaction 'pp4_v3' { actors:  = p4, modifiers: [pp4_mrna], reversible: false, };\r\npp4_v3 := rbs4_strength * pp4_mrna;\r\npp4_v4 @Reaction 'pp4_v4' { actors: p4 = , reversible: false, };\r\npp4_v4 := p4_degradation_rate * p4;\r\npp3_v1 @Reaction 'pp3_v1' { actors:  = pp3_mrna, reversible: false, };\r\npp3_v1 := cod3;\r\npp3_v2 @Reaction 'pp3_v2' { actors: pp3_mrna = , modifiers: [p3], reversible: false, };\r\npp3_v2 := pp3_mrna_degradation_rate * pp3_mrna;\r\npp3_v3 @Reaction 'pp3_v3' { actors:  = p3, modifiers: [pp3_mrna], reversible: false, };\r\npp3_v3 := rbs3_strength * pp3_mrna;\r\npp3_v4 @Reaction 'pp3_v4' { actors: p3 = , reversible: false, };\r\npp3_v4 := p3_degradation_rate * p3;\r\npp2_v1 @Reaction 'pp2_v1' { actors:  = pp2_mrna, reversible: false, };\r\npp2_v1 := cod2;\r\npp2_v2 @Reaction 'pp2_v2' { actors: pp2_mrna = , modifiers: [p2], reversible: false, };\r\npp2_v2 := pp2_mrna_degradation_rate * pp2_mrna;\r\npp2_v3 @Reaction 'pp2_v3' { actors:  = p2, modifiers: [pp2_mrna], reversible: false, };\r\npp2_v3 := rbs2_strength * pp2_mrna;\r\npp2_v4 @Reaction 'pp2_v4' { actors: p2 = , reversible: false, };\r\npp2_v4 := p2_degradation_rate * p2;\r\npp1_v1 @Reaction 'pp1_v1' { actors:  = pp1_mrna, reversible: false, };\r\npp1_v1 := cod1;\r\npp1_v2 @Reaction 'pp1_v2' { actors: pp1_mrna = , modifiers: [p1], reversible: false, };\r\npp1_v2 := pp1_mrna_degradation_rate * pp1_mrna;\r\npp1_v3 @Reaction 'pp1_v3' { actors:  = p1, modifiers: [pp1_mrna], reversible: false, };\r\npp1_v3 := rbs1_strength * pp1_mrna;\r\npp1_v4 @Reaction 'pp1_v4' { actors: p1 = , reversible: false, };\r\npp1_v4 := p1_degradation_rate * p1;\n\r\nas8 @Record 'as8' { } .= 1;\r\nas8 := (1 + pow(p5 / v9_Kd, v9_h) - 1) / (1 + pow(p5 / v9_Kd, v9_h));\r\ncod1 @Record 'cod1' { } .= 1;\r\ncod1 := pro1_strength;\r\ncod2 @Record 'cod2' { } .= 1;\r\ncod2 := pro2_strength * as1 * rs1;\r\ncod3 @Record 'cod3' { } .= 1;\r\ncod3 := pro3_strength * rs2 * rs3;\r\ncod4 @Record 'cod4' { } .= 1;\r\ncod4 := pro4_strength * rs7 * rs6;\r\ncod5 @Record 'cod5' { } .= 1;\r\ncod5 := pro5_strength * as2;\r\ncod6 @Record 'cod6' { } .= 1;\r\ncod6 := pro6_strength * (as3 + as4);\r\ncod7 @Record 'cod7' { } .= 1;\r\ncod7 := pro7_strength * (as7 + as8);\r\ncod8 @Record 'cod8' { } .= 1;\r\ncod8 := pro8_strength * as5 * rs4;\r\ncod9 @Record 'cod9' { } .= 1;\r\ncod9 := pro9_strength * as6 * rs5;\r\nrs1 @Record 'rs1' { } .= 1;\r\nrs1 := 1 / (1 + pow(p9 / v13_Kd, v13_h));\r\nrs2 @Record 'rs2' { } .= 1;\r\nrs2 := 1 / (1 + pow(p2 / v2_Kd, v2_h));\r\nrs3 @Record 'rs3' { } .= 1;\r\nrs3 := 1 / (1 + pow(p3 / v3_Kd, v3_h));\r\nrs4 @Record 'rs4' { } .= 1;\r\nrs4 := 1 / (1 + pow(p8 / v11_Kd, v11_h));\r\nrs5 @Record 'rs5' { } .= 1;\r\nrs5 := 1 / (1 + pow(p8 / v12_Kd, v12_h));\r\nrs6 @Record 'rs6' { } .= 1;\r\nrs6 := 1 / (1 + pow(p2 / v14_Kd, v14_h));\r\nrs7 @Record 'rs7' { } .= 1;\r\nrs7 := 1 / (1 + pow(p3 / v15_Kd, v15_h));\r\nas1 @Record 'as1' { } .= 1;\r\nas1 := (1 + pow(p1 / v1_Kd, v1_h) - 1) / (1 + pow(p1 / v1_Kd, v1_h));\r\nas2 @Record 'as2' { } .= 1;\r\nas2 := (1 + pow(p4 / v4_Kd, v4_h) - 1) / (1 + pow(p4 / v4_Kd, v4_h));\r\nas3 @Record 'as3' { } .= 1;\r\nas3 := (1 + pow(p5 / v5_Kd, v5_h) - 1) / (1 + pow(p5 / v5_Kd, v5_h));\r\nas4 @Record 'as4' { } .= 1;\r\nas4 := (1 + pow(p6 / v6_Kd, v6_h) - 1) / (1 + pow(p6 / v6_Kd, v6_h));\r\nas5 @Record 'as5' { } .= 1;\r\nas5 := (1 + pow(p7 / v7_Kd, v7_h) - 1) / (1 + pow(p7 / v7_Kd, v7_h));\r\nas6 @Record 'as6' { } .= 1;\r\nas6 := (1 + pow(p7 / v10_Kd, v10_h) - 1) / (1 + pow(p7 / v10_Kd, v10_h));\r\nas7 @Record 'as7' { } .= 1;\r\nas7 := (1 + pow(p6 / v8_Kd, v8_h) - 1) / (1 + pow(p6 / v8_Kd, v8_h));\n\r\npp8_mrna_degradation_rate @Const 'pp8_mrna_degradation_rate' { } = 1;\r\npp9_mrna_degradation_rate @Const 'pp9_mrna_degradation_rate' { } = 1;\r\np1_degradation_rate @Const 'p1_degradation_rate' { } = 0.5;\r\np2_degradation_rate @Const 'p2_degradation_rate' { } = 0.5;\r\np3_degradation_rate @Const 'p3_degradation_rate' { } = 0.5;\r\np4_degradation_rate @Const 'p4_degradation_rate' { } = 0.5;\r\np5_degradation_rate @Const 'p5_degradation_rate' { } = 0.5;\r\np6_degradation_rate @Const 'p6_degradation_rate' { } = 0.5;\r\np7_degradation_rate @Const 'p7_degradation_rate' { } = 0.5;\r\np8_degradation_rate @Const 'p8_degradation_rate' { } = 0.5;\r\np9_degradation_rate @Const 'p9_degradation_rate' { } = 0.5;\r\nv1_Kd @Const 'v1_Kd' { } = 11.147;\r\nv1_h @Const 'v1_h' { } = 1;\r\nv2_Kd @Const 'v2_Kd' { } = 1;\r\nv2_h @Const 'v2_h' { } = 4;\r\nv3_Kd @Const 'v3_Kd' { } = 20;\r\nv3_h @Const 'v3_h' { } = 1;\r\nv4_Kd @Const 'v4_Kd' { } = 0.2;\r\nv4_h @Const 'v4_h' { } = 4;\r\nv5_Kd @Const 'v5_Kd' { } = 0.2;\r\nv5_h @Const 'v5_h' { } = 4;\r\nv6_Kd @Const 'v6_Kd' { } = 0.04;\r\nv6_h @Const 'v6_h' { } = 4;\r\nv7_Kd @Const 'v7_Kd' { } = 0.02;\r\nv7_h @Const 'v7_h' { } = 4;\r\nv8_Kd @Const 'v8_Kd' { } = 0.04;\r\nv8_h @Const 'v8_h' { } = 4;\r\nv9_Kd @Const 'v9_Kd' { } = 0.2;\r\nv9_h @Const 'v9_h' { } = 4;\r\npp1_mrna_degradation_rate @Const 'pp1_mrna_degradation_rate' { } = 1;\r\npp2_mrna_degradation_rate @Const 'pp2_mrna_degradation_rate' { } = 1;\r\npro1_strength @Const 'pro1_strength' { } = 2;\r\npro2_strength @Const 'pro2_strength' { } = 4.5077;\r\npro3_strength @Const 'pro3_strength' { } = 5;\r\npro4_strength @Const 'pro4_strength' { } = 5;\r\npro5_strength @Const 'pro5_strength' { } = 5;\r\npro6_strength @Const 'pro6_strength' { } = 1.31;\r\npro7_strength @Const 'pro7_strength' { } = 1.31;\r\npro8_strength @Const 'pro8_strength' { } = 5;\r\npro9_strength @Const 'pro9_strength' { } = 5;\r\npp3_mrna_degradation_rate @Const 'pp3_mrna_degradation_rate' { } = 1;\r\nv10_Kd @Const 'v10_Kd' { } = 0.02;\r\nv10_h @Const 'v10_h' { } = 4;\r\nv11_Kd @Const 'v11_Kd' { } = 0.1;\r\nv11_h @Const 'v11_h' { } = 2;\r\nv12_Kd @Const 'v12_Kd' { } = 0.1;\r\nv12_h @Const 'v12_h' { } = 2;\r\nv13_Kd @Const 'v13_Kd' { } = 0.01;\r\nv13_h @Const 'v13_h' { } = 2;\r\npp4_mrna_degradation_rate @Const 'pp4_mrna_degradation_rate' { } = 1;\r\nv14_Kd @Const 'v14_Kd' { } = 1;\r\nv14_h @Const 'v14_h' { } = 4;\r\nv15_Kd @Const 'v15_Kd' { } = 20;\r\nv15_h @Const 'v15_h' { } = 1;\r\npp5_mrna_degradation_rate @Const 'pp5_mrna_degradation_rate' { } = 1;\r\nrbs1_strength @Const 'rbs1_strength' { } = 0.3668;\r\nrbs2_strength @Const 'rbs2_strength' { } = 1.4102;\r\nrbs3_strength @Const 'rbs3_strength' { } = 0.8;\r\nrbs4_strength @Const 'rbs4_strength' { } = 2.21;\r\nrbs5_strength @Const 'rbs5_strength' { } = 0.5;\r\nrbs6_strength @Const 'rbs6_strength' { } = 2;\r\nrbs7_strength @Const 'rbs7_strength' { } = 5;\r\nrbs8_strength @Const 'rbs8_strength' { } = 3.6377;\r\nrbs9_strength @Const 'rbs9_strength' { } = 8;\r\npp6_mrna_degradation_rate @Const 'pp6_mrna_degradation_rate' { } = 1;\r\npp7_mrna_degradation_rate @Const 'pp7_mrna_degradation_rate' { } = 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A fast reaction with a local parameter.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, FastReaction, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nIn this model, a fast reaction has a local parameter that ensures that the reaction proceeds in reverse.  \r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 local parameter (J0.k1)\r\n* 1 compartment (default_compartment)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |  *Fast*  |\r\n| J0: S1 -> S2 | $k1 * S1 * S2$ | fast |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $5$ | variable |\r\n| Initial concentration of species S2 | $5$ | variable |\r\n| Initial value of local parameter 'J0.k1' | $-1$ | constant |\r\n| Initial volume of compartment 'default_compartment' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\ndefault_compartment @Compartment { boundary: true, aux: {sboTerm: \"SBO:0000410\"}, } .= 1;\n\r\nS1 @Species { compartment: default_compartment, } .= 5;\r\nS2 @Species { compartment: default_compartment, } .= 5;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := k1__J0_local * S1 * S2;\n\r\nk1__J0_local @Const { } = -1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has two reactants that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled reactants.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A + A -> | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A + A = , };\r\nJ0 := (-1);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has two reactants that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled reactants.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A + 2A -> | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A + 2*A = , };\r\nJ0 := (-1);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has two reactants that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled reactants.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A + -1A -> | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A = A, };\r\nJ0 := (-1);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has a reactant and a product that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled species references--in this case, zero.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A -> A | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A = A, };\r\nJ0 := (-1);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has a reactant and a product that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled species references.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A -> 2A | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A = 2*A, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has a reactant and a product that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled species references.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: 2A -> A | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: 2*A = A, };\r\nJ0 := (-1);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has a reactant and a product that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled species references.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: 2A -> -3A | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: 3*A + 2*A = , };\r\nJ0 := (-1);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has a reactant and a product that both point to the same species.  This is equivalent to a reaction with a single reactant whose stoichiometry is equal to the sum of the stoichiometries of the doubled species references.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -2A -> 3A | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = 3*A + 2*A, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has two products that both point to the same species.  This is equivalent to a reaction with a single product whose stoichiometry is equal to the sum of the stoichiometries of the doubled species references.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> A + A | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = A + A, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has two products that both point to the same species.  This is equivalent to a reaction with a single product whose stoichiometry is equal to the sum of the stoichiometries of the doubled species references.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> A + 2A | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = A + 2*A, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has multiple reactants and products that both point to the same species.  This is equivalent to a reaction where all of the species references that point to the same species are collapsed into a single species reference with a stoichiometry equal to the sum of the stoichiometries of the original species references.\r\n\r\nThe model contains:\r\n* 2 species (A, B)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A + A -> B + B | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $20$ | variable |\r\n| Initial concentration of species B | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 20;\r\nB @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A + A = B + B, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has multiple reactants and products that all point to the same species.  This is equivalent to a reaction where all of the species references that point to the same species are collapsed into a single species reference with a stoichiometry equal to the sum of the stoichiometries of the original species references.\r\n\r\nThe model contains:\r\n* 2 species (A, B)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A + B -> A + B | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial concentration of species B | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\r\nB @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A + B = A + B, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has multiple reactants and products that all point to the same species.  This is equivalent to a reaction where all of the species references that point to the same species are collapsed into a single species reference with a stoichiometry equal to the sum of the stoichiometries of the original species references.\r\n\r\nThe model contains:\r\n* 2 species (A, B)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: 2A + -1B -> -1A + 2B | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $30$ | variable |\r\n| Initial concentration of species B | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 30;\r\nB @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: A + 2*A = 2*B + B, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Multiple species references to the same species\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n In this test, a single reaction has multiple reactants and products that all point to the same species.  This is equivalent to a reaction where all of the species references that point to the same species are collapsed into a single species reference with a stoichiometry equal to the sum of the stoichiometries of the original species references.\r\n\r\nThe model contains:\r\n* 1 species (A)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: A + 2A + -4A -> 5A + -2A + A + -1A | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species A | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nA @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors: 2*A + A + A + 2*A = 5*A + A + 4*A, };\r\nJ0 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A test of random event execution at t0.\r\ncomponentTags:   AssignmentRule, EventNoDelay, EventPriority, Parameter\r\ntestTags:        EventIsNotPersistent, EventT0Firing, InitialValueReassigned, NonConstantParameter, RandomEventExecution\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, 200 events 'compete' in pairs to assing values to variables:  if E0 fires, Eb0 will not, and visa versa, for all events E0-E99, Eb0-Eb99.  Because all events have the same priority, the E# set should win about half the time (assigning a value to the corresponding 'A' variable), and the Eb# set should win the other half, assigning values to the corresponding 'B' variables.\r\n\r\n 'toodiverged' will only equal 1 if (Asum-Bsum)>100.  Since the standard deviation of 100 coin flips is 5, which would correspond to a difference of 20, 'toodiverged' will only equal 1 if the observed distribution of choices is more than five standard deviations away from expected (0), which will happen approximately one time in 1.7 million.\r\n\r\nThe model contains:\r\n* 205 parameters (trig, A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, A27, A28, A29, A30, A31, A32, A33, A34, A35, A36, A37, A38, A39, A40, A41, A42, A43, A44, A45, A46, A47, A48, A49, A50, A51, A52, A53, A54, A55, A56, A57, A58, A59, A60, A61, A62, A63, A64, A65, A66, A67, A68, A69, A70, A71, A72, A73, A74, A75, A76, A77, A78, A79, A80, A81, A82, A83, A84, A85, A86, A87, A88, A89, A90, A91, A92, A93, A94, A95, A96, A97, A98, A99, B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B18, B19, B20, B21, B22, B23, B24, B25, B26, B27, B28, B29, B30, B31, B32, B33, B34, B35, B36, B37, B38, B39, B40, B41, B42, B43, B44, B45, B46, B47, B48, B49, B50, B51, B52, B53, B54, B55, B56, B57, B58, B59, B60, B61, B62, B63, B64, B65, B66, B67, B68, B69, B70, B71, B72, B73, B74, B75, B76, B77, B78, B79, B80, B81, B82, B83, B84, B85, B86, B87, B88, B89, B90, B91, B92, B93, B94, B95, B96, B97, B98, B99, Asum, Bsum, Allsum, toodiverged)\r\n\r\nThere are 201 events:\r\n\r\n[{width:45em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $(trig > 0) && (A0 < 1)$ | $5$ | false | false | $B0 = 2$ |\r\n| E1 | $(trig > 0) && (A1 < 1)$ | $5$ | false | false | $B1 = 2$ |\r\n| E2 | $(trig > 0) && (A2 < 1)$ | $5$ | false | false | $B2 = 2$ |\r\n| E3 | $(trig > 0) && (A3 < 1)$ | $5$ | false | false | $B3 = 2$ |\r\n| E4 | $(trig > 0) && (A4 < 1)$ | $5$ | false | false | $B4 = 2$ |\r\n| E5 | $(trig > 0) && (A5 < 1)$ | $5$ | false | false | $B5 = 2$ |\r\n| E6 | $(trig > 0) && (A6 < 1)$ | $5$ | false | false | $B6 = 2$ |\r\n| E7 | $(trig > 0) && (A7 < 1)$ | $5$ | false | false | $B7 = 2$ |\r\n| E8 | $(trig > 0) && (A8 < 1)$ | $5$ | false | false | $B8 = 2$ |\r\n| E9 | $(trig > 0) && (A9 < 1)$ | $5$ | false | false | $B9 = 2$ |\r\n| E10 | $(trig > 0) && (A10 < 1)$ | $5$ | false | false | $B10 = 2$ |\r\n| E11 | $(trig > 0) && (A11 < 1)$ | $5$ | false | false | $B11 = 2$ |\r\n| E12 | $(trig > 0) && (A12 < 1)$ | $5$ | false | false | $B12 = 2$ |\r\n| E13 | $(trig > 0) && (A13 < 1)$ | $5$ | false | false | $B13 = 2$ |\r\n| E14 | $(trig > 0) && (A14 < 1)$ | $5$ | false | false | $B14 = 2$ |\r\n| E15 | $(trig > 0) && (A15 < 1)$ | $5$ | false | false | $B15 = 2$ |\r\n| E16 | $(trig > 0) && (A16 < 1)$ | $5$ | false | false | $B16 = 2$ |\r\n| E17 | $(trig > 0) && (A17 < 1)$ | $5$ | false | false | $B17 = 2$ |\r\n| E18 | $(trig > 0) && (A18 < 1)$ | $5$ | false | false | $B18 = 2$ |\r\n| E19 | $(trig > 0) && (A19 < 1)$ | $5$ | false | false | $B19 = 2$ |\r\n| E20 | $(trig > 0) && (A20 < 1)$ | $5$ | false | false | $B20 = 2$ |\r\n| E21 | $(trig > 0) && (A21 < 1)$ | $5$ | false | false | $B21 = 2$ |\r\n| E22 | $(trig > 0) && (A22 < 1)$ | $5$ | false | false | $B22 = 2$ |\r\n| E23 | $(trig > 0) && (A23 < 1)$ | $5$ | false | false | $B23 = 2$ |\r\n| E24 | $(trig > 0) && (A24 < 1)$ | $5$ | false | false | $B24 = 2$ |\r\n| E25 | $(trig > 0) && (A25 < 1)$ | $5$ | false | false | $B25 = 2$ |\r\n| E26 | $(trig > 0) && (A26 < 1)$ | $5$ | false | false | $B26 = 2$ |\r\n| E27 | $(trig > 0) && (A27 < 1)$ | $5$ | false | false | $B27 = 2$ |\r\n| E28 | $(trig > 0) && (A28 < 1)$ | $5$ | false | false | $B28 = 2$ |\r\n| E29 | $(trig > 0) && (A29 < 1)$ | $5$ | false | false | $B29 = 2$ |\r\n| E30 | $(trig > 0) && (A30 < 1)$ | $5$ | false | false | $B30 = 2$ |\r\n| E31 | $(trig > 0) && (A31 < 1)$ | $5$ | false | false | $B31 = 2$ |\r\n| E32 | $(trig > 0) && (A32 < 1)$ | $5$ | false | false | $B32 = 2$ |\r\n| E33 | $(trig > 0) && (A33 < 1)$ | $5$ | false | false | $B33 = 2$ |\r\n| E34 | $(trig > 0) && (A34 < 1)$ | $5$ | false | false | $B34 = 2$ |\r\n| E35 | $(trig > 0) && (A35 < 1)$ | $5$ | false | false | $B35 = 2$ |\r\n| E36 | $(trig > 0) && (A36 < 1)$ | $5$ | false | false | $B36 = 2$ |\r\n| E37 | $(trig > 0) && (A37 < 1)$ | $5$ | false | false | $B37 = 2$ |\r\n| E38 | $(trig > 0) && (A38 < 1)$ | $5$ | false | false | $B38 = 2$ |\r\n| E39 | $(trig > 0) && (A39 < 1)$ | $5$ | false | false | $B39 = 2$ |\r\n| E40 | $(trig > 0) && (A40 < 1)$ | $5$ | false | false | $B40 = 2$ |\r\n| E41 | $(trig > 0) && (A41 < 1)$ | $5$ | false | false | $B41 = 2$ |\r\n| E42 | $(trig > 0) && (A42 < 1)$ | $5$ | false | false | $B42 = 2$ |\r\n| E43 | $(trig > 0) && (A43 < 1)$ | $5$ | false | false | $B43 = 2$ |\r\n| E44 | $(trig > 0) && (A44 < 1)$ | $5$ | false | false | $B44 = 2$ |\r\n| E45 | $(trig > 0) && (A45 < 1)$ | $5$ | false | false | $B45 = 2$ |\r\n| E46 | $(trig > 0) && (A46 < 1)$ | $5$ | false | false | $B46 = 2$ |\r\n| E47 | $(trig > 0) && (A47 < 1)$ | $5$ | false | false | $B47 = 2$ |\r\n| E48 | $(trig > 0) && (A48 < 1)$ | $5$ | false | false | $B48 = 2$ |\r\n| E49 | $(trig > 0) && (A49 < 1)$ | $5$ | false | false | $B49 = 2$ |\r\n| E50 | $(trig > 0) && (A50 < 1)$ | $5$ | false | false | $B50 = 2$ |\r\n| E51 | $(trig > 0) && (A51 < 1)$ | $5$ | false | false | $B51 = 2$ |\r\n| E52 | $(trig > 0) && (A52 < 1)$ | $5$ | false | false | $B52 = 2$ |\r\n| E53 | $(trig > 0) && (A53 < 1)$ | $5$ | false | false | $B53 = 2$ |\r\n| E54 | $(trig > 0) && (A54 < 1)$ | $5$ | false | false | $B54 = 2$ |\r\n| E55 | $(trig > 0) && (A55 < 1)$ | $5$ | false | false | $B55 = 2$ |\r\n| E56 | $(trig > 0) && (A56 < 1)$ | $5$ | false | false | $B56 = 2$ |\r\n| E57 | $(trig > 0) && (A57 < 1)$ | $5$ | false | false | $B57 = 2$ |\r\n| E58 | $(trig > 0) && (A58 < 1)$ | $5$ | false | false | $B58 = 2$ |\r\n| E59 | $(trig > 0) && (A59 < 1)$ | $5$ | false | false | $B59 = 2$ |\r\n| E60 | $(trig > 0) && (A60 < 1)$ | $5$ | false | false | $B60 = 2$ |\r\n| E61 | $(trig > 0) && (A61 < 1)$ | $5$ | false | false | $B61 = 2$ |\r\n| E62 | $(trig > 0) && (A62 < 1)$ | $5$ | false | false | $B62 = 2$ |\r\n| E63 | $(trig > 0) && (A63 < 1)$ | $5$ | false | false | $B63 = 2$ |\r\n| E64 | $(trig > 0) && (A64 < 1)$ | $5$ | false | false | $B64 = 2$ |\r\n| E65 | $(trig > 0) && (A65 < 1)$ | $5$ | false | false | $B65 = 2$ |\r\n| E66 | $(trig > 0) && (A66 < 1)$ | $5$ | false | false | $B66 = 2$ |\r\n| E67 | $(trig > 0) && (A67 < 1)$ | $5$ | false | false | $B67 = 2$ |\r\n| E68 | $(trig > 0) && (A68 < 1)$ | $5$ | false | false | $B68 = 2$ |\r\n| E69 | $(trig > 0) && (A69 < 1)$ | $5$ | false | false | $B69 = 2$ |\r\n| E70 | $(trig > 0) && (A70 < 1)$ | $5$ | false | false | $B70 = 2$ |\r\n| E71 | $(trig > 0) && (A71 < 1)$ | $5$ | false | false | $B71 = 2$ |\r\n| E72 | $(trig > 0) && (A72 < 1)$ | $5$ | false | false | $B72 = 2$ |\r\n| E73 | $(trig > 0) && (A73 < 1)$ | $5$ | false | false | $B73 = 2$ |\r\n| E74 | $(trig > 0) && (A74 < 1)$ | $5$ | false | false | $B74 = 2$ |\r\n| E75 | $(trig > 0) && (A75 < 1)$ | $5$ | false | false | $B75 = 2$ |\r\n| E76 | $(trig > 0) && (A76 < 1)$ | $5$ | false | false | $B76 = 2$ |\r\n| E77 | $(trig > 0) && (A77 < 1)$ | $5$ | false | false | $B77 = 2$ |\r\n| E78 | $(trig > 0) && (A78 < 1)$ | $5$ | false | false | $B78 = 2$ |\r\n| E79 | $(trig > 0) && (A79 < 1)$ | $5$ | false | false | $B79 = 2$ |\r\n| E80 | $(trig > 0) && (A80 < 1)$ | $5$ | false | false | $B80 = 2$ |\r\n| E81 | $(trig > 0) && (A81 < 1)$ | $5$ | false | false | $B81 = 2$ |\r\n| E82 | $(trig > 0) && (A82 < 1)$ | $5$ | false | false | $B82 = 2$ |\r\n| E83 | $(trig > 0) && (A83 < 1)$ | $5$ | false | false | $B83 = 2$ |\r\n| E84 | $(trig > 0) && (A84 < 1)$ | $5$ | false | false | $B84 = 2$ |\r\n| E85 | $(trig > 0) && (A85 < 1)$ | $5$ | false | false | $B85 = 2$ |\r\n| E86 | $(trig > 0) && (A86 < 1)$ | $5$ | false | false | $B86 = 2$ |\r\n| E87 | $(trig > 0) && (A87 < 1)$ | $5$ | false | false | $B87 = 2$ |\r\n| E88 | $(trig > 0) && (A88 < 1)$ | $5$ | false | false | $B88 = 2$ |\r\n| E89 | $(trig > 0) && (A89 < 1)$ | $5$ | false | false | $B89 = 2$ |\r\n| E90 | $(trig > 0) && (A90 < 1)$ | $5$ | false | false | $B90 = 2$ |\r\n| E91 | $(trig > 0) && (A91 < 1)$ | $5$ | false | false | $B91 = 2$ |\r\n| E92 | $(trig > 0) && (A92 < 1)$ | $5$ | false | false | $B92 = 2$ |\r\n| E93 | $(trig > 0) && (A93 < 1)$ | $5$ | false | false | $B93 = 2$ |\r\n| E94 | $(trig > 0) && (A94 < 1)$ | $5$ | false | false | $B94 = 2$ |\r\n| E95 | $(trig > 0) && (A95 < 1)$ | $5$ | false | false | $B95 = 2$ |\r\n| E96 | $(trig > 0) && (A96 < 1)$ | $5$ | false | false | $B96 = 2$ |\r\n| E97 | $(trig > 0) && (A97 < 1)$ | $5$ | false | false | $B97 = 2$ |\r\n| E98 | $(trig > 0) && (A98 < 1)$ | $5$ | false | false | $B98 = 2$ |\r\n| E99 | $(trig > 0) && (A99 < 1)$ | $5$ | false | false | $B99 = 2$ |\r\n| Eb0 | $(trig > 0) && (B0 < 1)$ | $5$ | false | false | $A0 = 2$ |\r\n| Eb1 | $(trig > 0) && (B1 < 1)$ | $5$ | false | false | $A1 = 2$ |\r\n| Eb2 | $(trig > 0) && (B2 < 1)$ | $5$ | false | false | $A2 = 2$ |\r\n| Eb3 | $(trig > 0) && (B3 < 1)$ | $5$ | false | false | $A3 = 2$ |\r\n| Eb4 | $(trig > 0) && (B4 < 1)$ | $5$ | false | false | $A4 = 2$ |\r\n| Eb5 | $(trig > 0) && (B5 < 1)$ | $5$ | false | false | $A5 = 2$ |\r\n| Eb6 | $(trig > 0) && (B6 < 1)$ | $5$ | false | false | $A6 = 2$ |\r\n| Eb7 | $(trig > 0) && (B7 < 1)$ | $5$ | false | false | $A7 = 2$ |\r\n| Eb8 | $(trig > 0) && (B8 < 1)$ | $5$ | false | false | $A8 = 2$ |\r\n| Eb9 | $(trig > 0) && (B9 < 1)$ | $5$ | false | false | $A9 = 2$ |\r\n| Eb10 | $(trig > 0) && (B10 < 1)$ | $5$ | false | false | $A10 = 2$ |\r\n| Eb11 | $(trig > 0) && (B11 < 1)$ | $5$ | false | false | $A11 = 2$ |\r\n| Eb12 | $(trig > 0) && (B12 < 1)$ | $5$ | false | false | $A12 = 2$ |\r\n| Eb13 | $(trig > 0) && (B13 < 1)$ | $5$ | false | false | $A13 = 2$ |\r\n| Eb14 | $(trig > 0) && (B14 < 1)$ | $5$ | false | false | $A14 = 2$ |\r\n| Eb15 | $(trig > 0) && (B15 < 1)$ | $5$ | false | false | $A15 = 2$ |\r\n| Eb16 | $(trig > 0) && (B16 < 1)$ | $5$ | false | false | $A16 = 2$ |\r\n| Eb17 | $(trig > 0) && (B17 < 1)$ | $5$ | false | false | $A17 = 2$ |\r\n| Eb18 | $(trig > 0) && (B18 < 1)$ | $5$ | false | false | $A18 = 2$ |\r\n| Eb19 | $(trig > 0) && (B19 < 1)$ | $5$ | false | false | $A19 = 2$ |\r\n| Eb20 | $(trig > 0) && (B20 < 1)$ | $5$ | false | false | $A20 = 2$ |\r\n| Eb21 | $(trig > 0) && (B21 < 1)$ | $5$ | false | false | $A21 = 2$ |\r\n| Eb22 | $(trig > 0) && (B22 < 1)$ | $5$ | false | false | $A22 = 2$ |\r\n| Eb23 | $(trig > 0) && (B23 < 1)$ | $5$ | false | false | $A23 = 2$ |\r\n| Eb24 | $(trig > 0) && (B24 < 1)$ | $5$ | false | false | $A24 = 2$ |\r\n| Eb25 | $(trig > 0) && (B25 < 1)$ | $5$ | false | false | $A25 = 2$ |\r\n| Eb26 | $(trig > 0) && (B26 < 1)$ | $5$ | false | false | $A26 = 2$ |\r\n| Eb27 | $(trig > 0) && (B27 < 1)$ | $5$ | false | false | $A27 = 2$ |\r\n| Eb28 | $(trig > 0) && (B28 < 1)$ | $5$ | false | false | $A28 = 2$ |\r\n| Eb29 | $(trig > 0) && (B29 < 1)$ | $5$ | false | false | $A29 = 2$ |\r\n| Eb30 | $(trig > 0) && (B30 < 1)$ | $5$ | false | false | $A30 = 2$ |\r\n| Eb31 | $(trig > 0) && (B31 < 1)$ | $5$ | false | false | $A31 = 2$ |\r\n| Eb32 | $(trig > 0) && (B32 < 1)$ | $5$ | false | false | $A32 = 2$ |\r\n| Eb33 | $(trig > 0) && (B33 < 1)$ | $5$ | false | false | $A33 = 2$ |\r\n| Eb34 | $(trig > 0) && (B34 < 1)$ | $5$ | false | false | $A34 = 2$ |\r\n| Eb35 | $(trig > 0) && (B35 < 1)$ | $5$ | false | false | $A35 = 2$ |\r\n| Eb36 | $(trig > 0) && (B36 < 1)$ | $5$ | false | false | $A36 = 2$ |\r\n| Eb37 | $(trig > 0) && (B37 < 1)$ | $5$ | false | false | $A37 = 2$ |\r\n| Eb38 | $(trig > 0) && (B38 < 1)$ | $5$ | false | false | $A38 = 2$ |\r\n| Eb39 | $(trig > 0) && (B39 < 1)$ | $5$ | false | false | $A39 = 2$ |\r\n| Eb40 | $(trig > 0) && (B40 < 1)$ | $5$ | false | false | $A40 = 2$ |\r\n| Eb41 | $(trig > 0) && (B41 < 1)$ | $5$ | false | false | $A41 = 2$ |\r\n| Eb42 | $(trig > 0) && (B42 < 1)$ | $5$ | false | false | $A42 = 2$ |\r\n| Eb43 | $(trig > 0) && (B43 < 1)$ | $5$ | false | false | $A43 = 2$ |\r\n| Eb44 | $(trig > 0) && (B44 < 1)$ | $5$ | false | false | $A44 = 2$ |\r\n| Eb45 | $(trig > 0) && (B45 < 1)$ | $5$ | false | false | $A45 = 2$ |\r\n| Eb46 | $(trig > 0) && (B46 < 1)$ | $5$ | false | false | $A46 = 2$ |\r\n| Eb47 | $(trig > 0) && (B47 < 1)$ | $5$ | false | false | $A47 = 2$ |\r\n| Eb48 | $(trig > 0) && (B48 < 1)$ | $5$ | false | false | $A48 = 2$ |\r\n| Eb49 | $(trig > 0) && (B49 < 1)$ | $5$ | false | false | $A49 = 2$ |\r\n| Eb50 | $(trig > 0) && (B50 < 1)$ | $5$ | false | false | $A50 = 2$ |\r\n| Eb51 | $(trig > 0) && (B51 < 1)$ | $5$ | false | false | $A51 = 2$ |\r\n| Eb52 | $(trig > 0) && (B52 < 1)$ | $5$ | false | false | $A52 = 2$ |\r\n| Eb53 | $(trig > 0) && (B53 < 1)$ | $5$ | false | false | $A53 = 2$ |\r\n| Eb54 | $(trig > 0) && (B54 < 1)$ | $5$ | false | false | $A54 = 2$ |\r\n| Eb55 | $(trig > 0) && (B55 < 1)$ | $5$ | false | false | $A55 = 2$ |\r\n| Eb56 | $(trig > 0) && (B56 < 1)$ | $5$ | false | false | $A56 = 2$ |\r\n| Eb57 | $(trig > 0) && (B57 < 1)$ | $5$ | false | false | $A57 = 2$ |\r\n| Eb58 | $(trig > 0) && (B58 < 1)$ | $5$ | false | false | $A58 = 2$ |\r\n| Eb59 | $(trig > 0) && (B59 < 1)$ | $5$ | false | false | $A59 = 2$ |\r\n| Eb60 | $(trig > 0) && (B60 < 1)$ | $5$ | false | false | $A60 = 2$ |\r\n| Eb61 | $(trig > 0) && (B61 < 1)$ | $5$ | false | false | $A61 = 2$ |\r\n| Eb62 | $(trig > 0) && (B62 < 1)$ | $5$ | false | false | $A62 = 2$ |\r\n| Eb63 | $(trig > 0) && (B63 < 1)$ | $5$ | false | false | $A63 = 2$ |\r\n| Eb64 | $(trig > 0) && (B64 < 1)$ | $5$ | false | false | $A64 = 2$ |\r\n| Eb65 | $(trig > 0) && (B65 < 1)$ | $5$ | false | false | $A65 = 2$ |\r\n| Eb66 | $(trig > 0) && (B66 < 1)$ | $5$ | false | false | $A66 = 2$ |\r\n| Eb67 | $(trig > 0) && (B67 < 1)$ | $5$ | false | false | $A67 = 2$ |\r\n| Eb68 | $(trig > 0) && (B68 < 1)$ | $5$ | false | false | $A68 = 2$ |\r\n| Eb69 | $(trig > 0) && (B69 < 1)$ | $5$ | false | false | $A69 = 2$ |\r\n| Eb70 | $(trig > 0) && (B70 < 1)$ | $5$ | false | false | $A70 = 2$ |\r\n| Eb71 | $(trig > 0) && (B71 < 1)$ | $5$ | false | false | $A71 = 2$ |\r\n| Eb72 | $(trig > 0) && (B72 < 1)$ | $5$ | false | false | $A72 = 2$ |\r\n| Eb73 | $(trig > 0) && (B73 < 1)$ | $5$ | false | false | $A73 = 2$ |\r\n| Eb74 | $(trig > 0) && (B74 < 1)$ | $5$ | false | false | $A74 = 2$ |\r\n| Eb75 | $(trig > 0) && (B75 < 1)$ | $5$ | false | false | $A75 = 2$ |\r\n| Eb76 | $(trig > 0) && (B76 < 1)$ | $5$ | false | false | $A76 = 2$ |\r\n| Eb77 | $(trig > 0) && (B77 < 1)$ | $5$ | false | false | $A77 = 2$ |\r\n| Eb78 | $(trig > 0) && (B78 < 1)$ | $5$ | false | false | $A78 = 2$ |\r\n| Eb79 | $(trig > 0) && (B79 < 1)$ | $5$ | false | false | $A79 = 2$ |\r\n| Eb80 | $(trig > 0) && (B80 < 1)$ | $5$ | false | false | $A80 = 2$ |\r\n| Eb81 | $(trig > 0) && (B81 < 1)$ | $5$ | false | false | $A81 = 2$ |\r\n| Eb82 | $(trig > 0) && (B82 < 1)$ | $5$ | false | false | $A82 = 2$ |\r\n| Eb83 | $(trig > 0) && (B83 < 1)$ | $5$ | false | false | $A83 = 2$ |\r\n| Eb84 | $(trig > 0) && (B84 < 1)$ | $5$ | false | false | $A84 = 2$ |\r\n| Eb85 | $(trig > 0) && (B85 < 1)$ | $5$ | false | false | $A85 = 2$ |\r\n| Eb86 | $(trig > 0) && (B86 < 1)$ | $5$ | false | false | $A86 = 2$ |\r\n| Eb87 | $(trig > 0) && (B87 < 1)$ | $5$ | false | false | $A87 = 2$ |\r\n| Eb88 | $(trig > 0) && (B88 < 1)$ | $5$ | false | false | $A88 = 2$ |\r\n| Eb89 | $(trig > 0) && (B89 < 1)$ | $5$ | false | false | $A89 = 2$ |\r\n| Eb90 | $(trig > 0) && (B90 < 1)$ | $5$ | false | false | $A90 = 2$ |\r\n| Eb91 | $(trig > 0) && (B91 < 1)$ | $5$ | false | false | $A91 = 2$ |\r\n| Eb92 | $(trig > 0) && (B92 < 1)$ | $5$ | false | false | $A92 = 2$ |\r\n| Eb93 | $(trig > 0) && (B93 < 1)$ | $5$ | false | false | $A93 = 2$ |\r\n| Eb94 | $(trig > 0) && (B94 < 1)$ | $5$ | false | false | $A94 = 2$ |\r\n| Eb95 | $(trig > 0) && (B95 < 1)$ | $5$ | false | false | $A95 = 2$ |\r\n| Eb96 | $(trig > 0) && (B96 < 1)$ | $5$ | false | false | $A96 = 2$ |\r\n| Eb97 | $(trig > 0) && (B97 < 1)$ | $5$ | false | false | $A97 = 2$ |\r\n| Eb98 | $(trig > 0) && (B98 < 1)$ | $5$ | false | false | $A98 = 2$ |\r\n| Eb99 | $(trig > 0) && (B99 < 1)$ | $5$ | false | false | $A99 = 2$ |\r\n| _E0 | $abs(Asum - Bsum) > 100$ | (unset) | true | true | $toodiverged = 1$ |]\r\n\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | Asum | $A0 + A1 + A2 + A3 + A4 + A5 + A6 + A7 + A8 + A9 + A10 + A11 + A12 + A13 + A14 + A15 + A16 + A17 + A18 + A19 + A20 + A21 + A22 + A23 + A24 + A25 + A26 + A27 + A28 + A29 + A30 + A31 + A32 + A33 + A34 + A35 + A36 + A37 + A38 + A39 + A40 + A41 + A42 + A43 + A44 + A45 + A46 + A47 + A48 + A49 + A50 + A51 + A52 + A53 + A54 + A55 + A56 + A57 + A58 + A59 + A60 + A61 + A62 + A63 + A64 + A65 + A66 + A67 + A68 + A69 + A70 + A71 + A72 + A73 + A74 + A75 + A76 + A77 + A78 + A79 + A80 + A81 + A82 + A83 + A84 + A85 + A86 + A87 + A88 + A89 + A90 + A91 + A92 + A93 + A94 + A95 + A96 + A97 + A98 + A99$ |\r\n| Assignment | Bsum | $B0 + B1 + B2 + B3 + B4 + B5 + B6 + B7 + B8 + B9 + B10 + B11 + B12 + B13 + B14 + B15 + B16 + B17 + B18 + B19 + B20 + B21 + B22 + B23 + B24 + B25 + B26 + B27 + B28 + B29 + B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B38 + B39 + B40 + B41 + B42 + B43 + B44 + B45 + B46 + B47 + B48 + B49 + B50 + B51 + B52 + B53 + B54 + B55 + B56 + B57 + B58 + B59 + B60 + B61 + B62 + B63 + B64 + B65 + B66 + B67 + B68 + B69 + B70 + B71 + B72 + B73 + B74 + B75 + B76 + B77 + B78 + B79 + B80 + B81 + B82 + B83 + B84 + B85 + B86 + B87 + B88 + B89 + B90 + B91 + B92 + B93 + B94 + B95 + B96 + B97 + B98 + B99$ |\r\n| Assignment | Allsum | $Asum + Bsum$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter trig | $1$ | constant |\r\n| Initial value of parameter A0 | $0$ | variable |\r\n| Initial value of parameter A1 | $0$ | variable |\r\n| Initial value of parameter A2 | $0$ | variable |\r\n| Initial value of parameter A3 | $0$ | variable |\r\n| Initial value of parameter A4 | $0$ | variable |\r\n| Initial value of parameter A5 | $0$ | variable |\r\n| Initial value of parameter A6 | $0$ | variable |\r\n| Initial value of parameter A7 | $0$ | variable |\r\n| Initial value of parameter A8 | $0$ | variable |\r\n| Initial value of parameter A9 | $0$ | variable |\r\n| Initial value of parameter A10 | $0$ | variable |\r\n| Initial value of parameter A11 | $0$ | variable |\r\n| Initial value of parameter A12 | $0$ | variable |\r\n| Initial value of parameter A13 | $0$ | variable |\r\n| Initial value of parameter A14 | $0$ | variable |\r\n| Initial value of parameter A15 | $0$ | variable |\r\n| Initial value of parameter A16 | $0$ | variable |\r\n| Initial value of parameter A17 | $0$ | variable |\r\n| Initial value of parameter A18 | $0$ | variable |\r\n| Initial value of parameter A19 | $0$ | variable |\r\n| Initial value of parameter A20 | $0$ | variable |\r\n| Initial value of parameter A21 | $0$ | variable |\r\n| Initial value of parameter A22 | $0$ | variable |\r\n| Initial value of parameter A23 | $0$ | variable |\r\n| Initial value of parameter A24 | $0$ | variable |\r\n| Initial value of parameter A25 | $0$ | variable |\r\n| Initial value of parameter A26 | $0$ | variable |\r\n| Initial value of parameter A27 | $0$ | variable |\r\n| Initial value of parameter A28 | $0$ | variable |\r\n| Initial value of parameter A29 | $0$ | variable |\r\n| Initial value of parameter A30 | $0$ | variable |\r\n| Initial value of parameter A31 | $0$ | variable |\r\n| Initial value of parameter A32 | $0$ | variable |\r\n| Initial value of parameter A33 | $0$ | variable |\r\n| Initial value of parameter A34 | $0$ | variable |\r\n| Initial value of parameter A35 | $0$ | variable |\r\n| Initial value of parameter A36 | $0$ | variable |\r\n| Initial value of parameter A37 | $0$ | variable |\r\n| Initial value of parameter A38 | $0$ | variable |\r\n| Initial value of parameter A39 | $0$ | variable |\r\n| Initial value of parameter A40 | $0$ | variable |\r\n| Initial value of parameter A41 | $0$ | variable |\r\n| Initial value of parameter A42 | $0$ | variable |\r\n| Initial value of parameter A43 | $0$ | variable |\r\n| Initial value of parameter A44 | $0$ | variable |\r\n| Initial value of parameter A45 | $0$ | variable |\r\n| Initial value of parameter A46 | $0$ | variable |\r\n| Initial value of parameter A47 | $0$ | variable |\r\n| Initial value of parameter A48 | $0$ | variable |\r\n| Initial value of parameter A49 | $0$ | variable |\r\n| Initial value of parameter A50 | $0$ | variable |\r\n| Initial value of parameter A51 | $0$ | variable |\r\n| Initial value of parameter A52 | $0$ | variable |\r\n| Initial value of parameter A53 | $0$ | variable |\r\n| Initial value of parameter A54 | $0$ | variable |\r\n| Initial value of parameter A55 | $0$ | variable |\r\n| Initial value of parameter A56 | $0$ | variable |\r\n| Initial value of parameter A57 | $0$ | variable |\r\n| Initial value of parameter A58 | $0$ | variable |\r\n| Initial value of parameter A59 | $0$ | variable |\r\n| Initial value of parameter A60 | $0$ | variable |\r\n| Initial value of parameter A61 | $0$ | variable |\r\n| Initial value of parameter A62 | $0$ | variable |\r\n| Initial value of parameter A63 | $0$ | variable |\r\n| Initial value of parameter A64 | $0$ | variable |\r\n| Initial value of parameter A65 | $0$ | variable |\r\n| Initial value of parameter A66 | $0$ | variable |\r\n| Initial value of parameter A67 | $0$ | variable |\r\n| Initial value of parameter A68 | $0$ | variable |\r\n| Initial value of parameter A69 | $0$ | variable |\r\n| Initial value of parameter A70 | $0$ | variable |\r\n| Initial value of parameter A71 | $0$ | variable |\r\n| Initial value of parameter A72 | $0$ | variable |\r\n| Initial value of parameter A73 | $0$ | variable |\r\n| Initial value of parameter A74 | $0$ | variable |\r\n| Initial value of parameter A75 | $0$ | variable |\r\n| Initial value of parameter A76 | $0$ | variable |\r\n| Initial value of parameter A77 | $0$ | variable |\r\n| Initial value of parameter A78 | $0$ | variable |\r\n| Initial value of parameter A79 | $0$ | variable |\r\n| Initial value of parameter A80 | $0$ | variable |\r\n| Initial value of parameter A81 | $0$ | variable |\r\n| Initial value of parameter A82 | $0$ | variable |\r\n| Initial value of parameter A83 | $0$ | variable |\r\n| Initial value of parameter A84 | $0$ | variable |\r\n| Initial value of parameter A85 | $0$ | variable |\r\n| Initial value of parameter A86 | $0$ | variable |\r\n| Initial value of parameter A87 | $0$ | variable |\r\n| Initial value of parameter A88 | $0$ | variable |\r\n| Initial value of parameter A89 | $0$ | variable |\r\n| Initial value of parameter A90 | $0$ | variable |\r\n| Initial value of parameter A91 | $0$ | variable |\r\n| Initial value of parameter A92 | $0$ | variable |\r\n| Initial value of parameter A93 | $0$ | variable |\r\n| Initial value of parameter A94 | $0$ | variable |\r\n| Initial value of parameter A95 | $0$ | variable |\r\n| Initial value of parameter A96 | $0$ | variable |\r\n| Initial value of parameter A97 | $0$ | variable |\r\n| Initial value of parameter A98 | $0$ | variable |\r\n| Initial value of parameter A99 | $0$ | variable |\r\n| Initial value of parameter B0 | $0$ | variable |\r\n| Initial value of parameter B1 | $0$ | variable |\r\n| Initial value of parameter B2 | $0$ | variable |\r\n| Initial value of parameter B3 | $0$ | variable |\r\n| Initial value of parameter B4 | $0$ | variable |\r\n| Initial value of parameter B5 | $0$ | variable |\r\n| Initial value of parameter B6 | $0$ | variable |\r\n| Initial value of parameter B7 | $0$ | variable |\r\n| Initial value of parameter B8 | $0$ | variable |\r\n| Initial value of parameter B9 | $0$ | variable |\r\n| Initial value of parameter B10 | $0$ | variable |\r\n| Initial value of parameter B11 | $0$ | variable |\r\n| Initial value of parameter B12 | $0$ | variable |\r\n| Initial value of parameter B13 | $0$ | variable |\r\n| Initial value of parameter B14 | $0$ | variable |\r\n| Initial value of parameter B15 | $0$ | variable |\r\n| Initial value of parameter B16 | $0$ | variable |\r\n| Initial value of parameter B17 | $0$ | variable |\r\n| Initial value of parameter B18 | $0$ | variable |\r\n| Initial value of parameter B19 | $0$ | variable |\r\n| Initial value of parameter B20 | $0$ | variable |\r\n| Initial value of parameter B21 | $0$ | variable |\r\n| Initial value of parameter B22 | $0$ | variable |\r\n| Initial value of parameter B23 | $0$ | variable |\r\n| Initial value of parameter B24 | $0$ | variable |\r\n| Initial value of parameter B25 | $0$ | variable |\r\n| Initial value of parameter B26 | $0$ | variable |\r\n| Initial value of parameter B27 | $0$ | variable |\r\n| Initial value of parameter B28 | $0$ | variable |\r\n| Initial value of parameter B29 | $0$ | variable |\r\n| Initial value of parameter B30 | $0$ | variable |\r\n| Initial value of parameter B31 | $0$ | variable |\r\n| Initial value of parameter B32 | $0$ | variable |\r\n| Initial value of parameter B33 | $0$ | variable |\r\n| Initial value of parameter B34 | $0$ | variable |\r\n| Initial value of parameter B35 | $0$ | variable |\r\n| Initial value of parameter B36 | $0$ | variable |\r\n| Initial value of parameter B37 | $0$ | variable |\r\n| Initial value of parameter B38 | $0$ | variable |\r\n| Initial value of parameter B39 | $0$ | variable |\r\n| Initial value of parameter B40 | $0$ | variable |\r\n| Initial value of parameter B41 | $0$ | variable |\r\n| Initial value of parameter B42 | $0$ | variable |\r\n| Initial value of parameter B43 | $0$ | variable |\r\n| Initial value of parameter B44 | $0$ | variable |\r\n| Initial value of parameter B45 | $0$ | variable |\r\n| Initial value of parameter B46 | $0$ | variable |\r\n| Initial value of parameter B47 | $0$ | variable |\r\n| Initial value of parameter B48 | $0$ | variable |\r\n| Initial value of parameter B49 | $0$ | variable |\r\n| Initial value of parameter B50 | $0$ | variable |\r\n| Initial value of parameter B51 | $0$ | variable |\r\n| Initial value of parameter B52 | $0$ | variable |\r\n| Initial value of parameter B53 | $0$ | variable |\r\n| Initial value of parameter B54 | $0$ | variable |\r\n| Initial value of parameter B55 | $0$ | variable |\r\n| Initial value of parameter B56 | $0$ | variable |\r\n| Initial value of parameter B57 | $0$ | variable |\r\n| Initial value of parameter B58 | $0$ | variable |\r\n| Initial value of parameter B59 | $0$ | variable |\r\n| Initial value of parameter B60 | $0$ | variable |\r\n| Initial value of parameter B61 | $0$ | variable |\r\n| Initial value of parameter B62 | $0$ | variable |\r\n| Initial value of parameter B63 | $0$ | variable |\r\n| Initial value of parameter B64 | $0$ | variable |\r\n| Initial value of parameter B65 | $0$ | variable |\r\n| Initial value of parameter B66 | $0$ | variable |\r\n| Initial value of parameter B67 | $0$ | variable |\r\n| Initial value of parameter B68 | $0$ | variable |\r\n| Initial value of parameter B69 | $0$ | variable |\r\n| Initial value of parameter B70 | $0$ | variable |\r\n| Initial value of parameter B71 | $0$ | variable |\r\n| Initial value of parameter B72 | $0$ | variable |\r\n| Initial value of parameter B73 | $0$ | variable |\r\n| Initial value of parameter B74 | $0$ | variable |\r\n| Initial value of parameter B75 | $0$ | variable |\r\n| Initial value of parameter B76 | $0$ | variable |\r\n| Initial value of parameter B77 | $0$ | variable |\r\n| Initial value of parameter B78 | $0$ | variable |\r\n| Initial value of parameter B79 | $0$ | variable |\r\n| Initial value of parameter B80 | $0$ | variable |\r\n| Initial value of parameter B81 | $0$ | variable |\r\n| Initial value of parameter B82 | $0$ | variable |\r\n| Initial value of parameter B83 | $0$ | variable |\r\n| Initial value of parameter B84 | $0$ | variable |\r\n| Initial value of parameter B85 | $0$ | variable |\r\n| Initial value of parameter B86 | $0$ | variable |\r\n| Initial value of parameter B87 | $0$ | variable |\r\n| Initial value of parameter B88 | $0$ | variable |\r\n| Initial value of parameter B89 | $0$ | variable |\r\n| Initial value of parameter B90 | $0$ | variable |\r\n| Initial value of parameter B91 | $0$ | variable |\r\n| Initial value of parameter B92 | $0$ | variable |\r\n| Initial value of parameter B93 | $0$ | variable |\r\n| Initial value of parameter B94 | $0$ | variable |\r\n| Initial value of parameter B95 | $0$ | variable |\r\n| Initial value of parameter B96 | $0$ | variable |\r\n| Initial value of parameter B97 | $0$ | variable |\r\n| Initial value of parameter B98 | $0$ | variable |\r\n| Initial value of parameter B99 | $0$ | variable |\r\n| Initial value of parameter Asum | $A0 + A1 + A2 + A3 + A4 + A5 + A6 + A7 + A8 + A9 + A10 + A11 + A12 + A13 + A14 + A15 + A16 + A17 + A18 + A19 + A20 + A21 + A22 + A23 + A24 + A25 + A26 + A27 + A28 + A29 + A30 + A31 + A32 + A33 + A34 + A35 + A36 + A37 + A38 + A39 + A40 + A41 + A42 + A43 + A44 + A45 + A46 + A47 + A48 + A49 + A50 + A51 + A52 + A53 + A54 + A55 + A56 + A57 + A58 + A59 + A60 + A61 + A62 + A63 + A64 + A65 + A66 + A67 + A68 + A69 + A70 + A71 + A72 + A73 + A74 + A75 + A76 + A77 + A78 + A79 + A80 + A81 + A82 + A83 + A84 + A85 + A86 + A87 + A88 + A89 + A90 + A91 + A92 + A93 + A94 + A95 + A96 + A97 + A98 + A99$ | variable |\r\n| Initial value of parameter Bsum | $B0 + B1 + B2 + B3 + B4 + B5 + B6 + B7 + B8 + B9 + B10 + B11 + B12 + B13 + B14 + B15 + B16 + B17 + B18 + B19 + B20 + B21 + B22 + B23 + B24 + B25 + B26 + B27 + B28 + B29 + B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B38 + B39 + B40 + B41 + B42 + B43 + B44 + B45 + B46 + B47 + B48 + B49 + B50 + B51 + B52 + B53 + B54 + B55 + B56 + B57 + B58 + B59 + B60 + B61 + B62 + B63 + B64 + B65 + B66 + B67 + B68 + B69 + B70 + B71 + B72 + B73 + B74 + B75 + B76 + B77 + B78 + B79 + B80 + B81 + B82 + B83 + B84 + B85 + B86 + B87 + B88 + B89 + B90 + B91 + B92 + B93 + B94 + B95 + B96 + B97 + B98 + B99$ | variable |\r\n| Initial value of parameter Allsum | $Asum + Bsum$ | variable |\r\n| Initial value of parameter toodiverged | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nA0 @Record { } .= 0;\r\nA0 [Eb0]= 2;\r\nA1 @Record { } .= 0;\r\nA1 [Eb1]= 2;\r\nA2 @Record { } .= 0;\r\nA2 [Eb2]= 2;\r\nA3 @Record { } .= 0;\r\nA3 [Eb3]= 2;\r\nA4 @Record { } .= 0;\r\nA4 [Eb4]= 2;\r\nA5 @Record { } .= 0;\r\nA5 [Eb5]= 2;\r\nA6 @Record { } .= 0;\r\nA6 [Eb6]= 2;\r\nA7 @Record { } .= 0;\r\nA7 [Eb7]= 2;\r\nA8 @Record { } .= 0;\r\nA8 [Eb8]= 2;\r\nA9 @Record { } .= 0;\r\nA9 [Eb9]= 2;\r\nA10 @Record { } .= 0;\r\nA10 [Eb10]= 2;\r\nA11 @Record { } .= 0;\r\nA11 [Eb11]= 2;\r\nA12 @Record { } .= 0;\r\nA12 [Eb12]= 2;\r\nA13 @Record { } .= 0;\r\nA13 [Eb13]= 2;\r\nA14 @Record { } .= 0;\r\nA14 [Eb14]= 2;\r\nA15 @Record { } .= 0;\r\nA15 [Eb15]= 2;\r\nA16 @Record { } .= 0;\r\nA16 [Eb16]= 2;\r\nA17 @Record { } .= 0;\r\nA17 [Eb17]= 2;\r\nA18 @Record { } .= 0;\r\nA18 [Eb18]= 2;\r\nA19 @Record { } .= 0;\r\nA19 [Eb19]= 2;\r\nA20 @Record { } .= 0;\r\nA20 [Eb20]= 2;\r\nA21 @Record { } .= 0;\r\nA21 [Eb21]= 2;\r\nA22 @Record { } .= 0;\r\nA22 [Eb22]= 2;\r\nA23 @Record { } .= 0;\r\nA23 [Eb23]= 2;\r\nA24 @Record { } .= 0;\r\nA24 [Eb24]= 2;\r\nA25 @Record { } .= 0;\r\nA25 [Eb25]= 2;\r\nA26 @Record { } .= 0;\r\nA26 [Eb26]= 2;\r\nA27 @Record { } .= 0;\r\nA27 [Eb27]= 2;\r\nA28 @Record { } .= 0;\r\nA28 [Eb28]= 2;\r\nA29 @Record { } .= 0;\r\nA29 [Eb29]= 2;\r\nA30 @Record { } .= 0;\r\nA30 [Eb30]= 2;\r\nA31 @Record { } .= 0;\r\nA31 [Eb31]= 2;\r\nA32 @Record { } .= 0;\r\nA32 [Eb32]= 2;\r\nA33 @Record { } .= 0;\r\nA33 [Eb33]= 2;\r\nA34 @Record { } .= 0;\r\nA34 [Eb34]= 2;\r\nA35 @Record { } .= 0;\r\nA35 [Eb35]= 2;\r\nA36 @Record { } .= 0;\r\nA36 [Eb36]= 2;\r\nA37 @Record { } .= 0;\r\nA37 [Eb37]= 2;\r\nA38 @Record { } .= 0;\r\nA38 [Eb38]= 2;\r\nA39 @Record { } .= 0;\r\nA39 [Eb39]= 2;\r\nA40 @Record { } .= 0;\r\nA40 [Eb40]= 2;\r\nA41 @Record { } .= 0;\r\nA41 [Eb41]= 2;\r\nA42 @Record { } .= 0;\r\nA42 [Eb42]= 2;\r\nA43 @Record { } .= 0;\r\nA43 [Eb43]= 2;\r\nA44 @Record { } .= 0;\r\nA44 [Eb44]= 2;\r\nA45 @Record { } .= 0;\r\nA45 [Eb45]= 2;\r\nA46 @Record { } .= 0;\r\nA46 [Eb46]= 2;\r\nA47 @Record { } .= 0;\r\nA47 [Eb47]= 2;\r\nA48 @Record { } .= 0;\r\nA48 [Eb48]= 2;\r\nA49 @Record { } .= 0;\r\nA49 [Eb49]= 2;\r\nA50 @Record { } .= 0;\r\nA50 [Eb50]= 2;\r\nA51 @Record { } .= 0;\r\nA51 [Eb51]= 2;\r\nA52 @Record { } .= 0;\r\nA52 [Eb52]= 2;\r\nA53 @Record { } .= 0;\r\nA53 [Eb53]= 2;\r\nA54 @Record { } .= 0;\r\nA54 [Eb54]= 2;\r\nA55 @Record { } .= 0;\r\nA55 [Eb55]= 2;\r\nA56 @Record { } .= 0;\r\nA56 [Eb56]= 2;\r\nA57 @Record { } .= 0;\r\nA57 [Eb57]= 2;\r\nA58 @Record { } .= 0;\r\nA58 [Eb58]= 2;\r\nA59 @Record { } .= 0;\r\nA59 [Eb59]= 2;\r\nA60 @Record { } .= 0;\r\nA60 [Eb60]= 2;\r\nA61 @Record { } .= 0;\r\nA61 [Eb61]= 2;\r\nA62 @Record { } .= 0;\r\nA62 [Eb62]= 2;\r\nA63 @Record { } .= 0;\r\nA63 [Eb63]= 2;\r\nA64 @Record { } .= 0;\r\nA64 [Eb64]= 2;\r\nA65 @Record { } .= 0;\r\nA65 [Eb65]= 2;\r\nA66 @Record { } .= 0;\r\nA66 [Eb66]= 2;\r\nA67 @Record { } .= 0;\r\nA67 [Eb67]= 2;\r\nA68 @Record { } .= 0;\r\nA68 [Eb68]= 2;\r\nA69 @Record { } .= 0;\r\nA69 [Eb69]= 2;\r\nA70 @Record { } .= 0;\r\nA70 [Eb70]= 2;\r\nA71 @Record { } .= 0;\r\nA71 [Eb71]= 2;\r\nA72 @Record { } .= 0;\r\nA72 [Eb72]= 2;\r\nA73 @Record { } .= 0;\r\nA73 [Eb73]= 2;\r\nA74 @Record { } .= 0;\r\nA74 [Eb74]= 2;\r\nA75 @Record { } .= 0;\r\nA75 [Eb75]= 2;\r\nA76 @Record { } .= 0;\r\nA76 [Eb76]= 2;\r\nA77 @Record { } .= 0;\r\nA77 [Eb77]= 2;\r\nA78 @Record { } .= 0;\r\nA78 [Eb78]= 2;\r\nA79 @Record { } .= 0;\r\nA79 [Eb79]= 2;\r\nA80 @Record { } .= 0;\r\nA80 [Eb80]= 2;\r\nA81 @Record { } .= 0;\r\nA81 [Eb81]= 2;\r\nA82 @Record { } .= 0;\r\nA82 [Eb82]= 2;\r\nA83 @Record { } .= 0;\r\nA83 [Eb83]= 2;\r\nA84 @Record { } .= 0;\r\nA84 [Eb84]= 2;\r\nA85 @Record { } .= 0;\r\nA85 [Eb85]= 2;\r\nA86 @Record { } .= 0;\r\nA86 [Eb86]= 2;\r\nA87 @Record { } .= 0;\r\nA87 [Eb87]= 2;\r\nA88 @Record { } .= 0;\r\nA88 [Eb88]= 2;\r\nA89 @Record { } .= 0;\r\nA89 [Eb89]= 2;\r\nA90 @Record { } .= 0;\r\nA90 [Eb90]= 2;\r\nA91 @Record { } .= 0;\r\nA91 [Eb91]= 2;\r\nA92 @Record { } .= 0;\r\nA92 [Eb92]= 2;\r\nA93 @Record { } .= 0;\r\nA93 [Eb93]= 2;\r\nA94 @Record { } .= 0;\r\nA94 [Eb94]= 2;\r\nA95 @Record { } .= 0;\r\nA95 [Eb95]= 2;\r\nA96 @Record { } .= 0;\r\nA96 [Eb96]= 2;\r\nA97 @Record { } .= 0;\r\nA97 [Eb97]= 2;\r\nA98 @Record { } .= 0;\r\nA98 [Eb98]= 2;\r\nA99 @Record { } .= 0;\r\nA99 [Eb99]= 2;\r\nB0 @Record { } .= 0;\r\nB0 [E0]= 2;\r\nB1 @Record { } .= 0;\r\nB1 [E1]= 2;\r\nB2 @Record { } .= 0;\r\nB2 [E2]= 2;\r\nB3 @Record { } .= 0;\r\nB3 [E3]= 2;\r\nB4 @Record { } .= 0;\r\nB4 [E4]= 2;\r\nB5 @Record { } .= 0;\r\nB5 [E5]= 2;\r\nB6 @Record { } .= 0;\r\nB6 [E6]= 2;\r\nB7 @Record { } .= 0;\r\nB7 [E7]= 2;\r\nB8 @Record { } .= 0;\r\nB8 [E8]= 2;\r\nB9 @Record { } .= 0;\r\nB9 [E9]= 2;\r\nB10 @Record { } .= 0;\r\nB10 [E10]= 2;\r\nB11 @Record { } .= 0;\r\nB11 [E11]= 2;\r\nB12 @Record { } .= 0;\r\nB12 [E12]= 2;\r\nB13 @Record { } .= 0;\r\nB13 [E13]= 2;\r\nB14 @Record { } .= 0;\r\nB14 [E14]= 2;\r\nB15 @Record { } .= 0;\r\nB15 [E15]= 2;\r\nB16 @Record { } .= 0;\r\nB16 [E16]= 2;\r\nB17 @Record { } .= 0;\r\nB17 [E17]= 2;\r\nB18 @Record { } .= 0;\r\nB18 [E18]= 2;\r\nB19 @Record { } .= 0;\r\nB19 [E19]= 2;\r\nB20 @Record { } .= 0;\r\nB20 [E20]= 2;\r\nB21 @Record { } .= 0;\r\nB21 [E21]= 2;\r\nB22 @Record { } .= 0;\r\nB22 [E22]= 2;\r\nB23 @Record { } .= 0;\r\nB23 [E23]= 2;\r\nB24 @Record { } .= 0;\r\nB24 [E24]= 2;\r\nB25 @Record { } .= 0;\r\nB25 [E25]= 2;\r\nB26 @Record { } .= 0;\r\nB26 [E26]= 2;\r\nB27 @Record { } .= 0;\r\nB27 [E27]= 2;\r\nB28 @Record { } .= 0;\r\nB28 [E28]= 2;\r\nB29 @Record { } .= 0;\r\nB29 [E29]= 2;\r\nB30 @Record { } .= 0;\r\nB30 [E30]= 2;\r\nB31 @Record { } .= 0;\r\nB31 [E31]= 2;\r\nB32 @Record { } .= 0;\r\nB32 [E32]= 2;\r\nB33 @Record { } .= 0;\r\nB33 [E33]= 2;\r\nB34 @Record { } .= 0;\r\nB34 [E34]= 2;\r\nB35 @Record { } .= 0;\r\nB35 [E35]= 2;\r\nB36 @Record { } .= 0;\r\nB36 [E36]= 2;\r\nB37 @Record { } .= 0;\r\nB37 [E37]= 2;\r\nB38 @Record { } .= 0;\r\nB38 [E38]= 2;\r\nB39 @Record { } .= 0;\r\nB39 [E39]= 2;\r\nB40 @Record { } .= 0;\r\nB40 [E40]= 2;\r\nB41 @Record { } .= 0;\r\nB41 [E41]= 2;\r\nB42 @Record { } .= 0;\r\nB42 [E42]= 2;\r\nB43 @Record { } .= 0;\r\nB43 [E43]= 2;\r\nB44 @Record { } .= 0;\r\nB44 [E44]= 2;\r\nB45 @Record { } .= 0;\r\nB45 [E45]= 2;\r\nB46 @Record { } .= 0;\r\nB46 [E46]= 2;\r\nB47 @Record { } .= 0;\r\nB47 [E47]= 2;\r\nB48 @Record { } .= 0;\r\nB48 [E48]= 2;\r\nB49 @Record { } .= 0;\r\nB49 [E49]= 2;\r\nB50 @Record { } .= 0;\r\nB50 [E50]= 2;\r\nB51 @Record { } .= 0;\r\nB51 [E51]= 2;\r\nB52 @Record { } .= 0;\r\nB52 [E52]= 2;\r\nB53 @Record { } .= 0;\r\nB53 [E53]= 2;\r\nB54 @Record { } .= 0;\r\nB54 [E54]= 2;\r\nB55 @Record { } .= 0;\r\nB55 [E55]= 2;\r\nB56 @Record { } .= 0;\r\nB56 [E56]= 2;\r\nB57 @Record { } .= 0;\r\nB57 [E57]= 2;\r\nB58 @Record { } .= 0;\r\nB58 [E58]= 2;\r\nB59 @Record { } .= 0;\r\nB59 [E59]= 2;\r\nB60 @Record { } .= 0;\r\nB60 [E60]= 2;\r\nB61 @Record { } .= 0;\r\nB61 [E61]= 2;\r\nB62 @Record { } .= 0;\r\nB62 [E62]= 2;\r\nB63 @Record { } .= 0;\r\nB63 [E63]= 2;\r\nB64 @Record { } .= 0;\r\nB64 [E64]= 2;\r\nB65 @Record { } .= 0;\r\nB65 [E65]= 2;\r\nB66 @Record { } .= 0;\r\nB66 [E66]= 2;\r\nB67 @Record { } .= 0;\r\nB67 [E67]= 2;\r\nB68 @Record { } .= 0;\r\nB68 [E68]= 2;\r\nB69 @Record { } .= 0;\r\nB69 [E69]= 2;\r\nB70 @Record { } .= 0;\r\nB70 [E70]= 2;\r\nB71 @Record { } .= 0;\r\nB71 [E71]= 2;\r\nB72 @Record { } .= 0;\r\nB72 [E72]= 2;\r\nB73 @Record { } .= 0;\r\nB73 [E73]= 2;\r\nB74 @Record { } .= 0;\r\nB74 [E74]= 2;\r\nB75 @Record { } .= 0;\r\nB75 [E75]= 2;\r\nB76 @Record { } .= 0;\r\nB76 [E76]= 2;\r\nB77 @Record { } .= 0;\r\nB77 [E77]= 2;\r\nB78 @Record { } .= 0;\r\nB78 [E78]= 2;\r\nB79 @Record { } .= 0;\r\nB79 [E79]= 2;\r\nB80 @Record { } .= 0;\r\nB80 [E80]= 2;\r\nB81 @Record { } .= 0;\r\nB81 [E81]= 2;\r\nB82 @Record { } .= 0;\r\nB82 [E82]= 2;\r\nB83 @Record { } .= 0;\r\nB83 [E83]= 2;\r\nB84 @Record { } .= 0;\r\nB84 [E84]= 2;\r\nB85 @Record { } .= 0;\r\nB85 [E85]= 2;\r\nB86 @Record { } .= 0;\r\nB86 [E86]= 2;\r\nB87 @Record { } .= 0;\r\nB87 [E87]= 2;\r\nB88 @Record { } .= 0;\r\nB88 [E88]= 2;\r\nB89 @Record { } .= 0;\r\nB89 [E89]= 2;\r\nB90 @Record { } .= 0;\r\nB90 [E90]= 2;\r\nB91 @Record { } .= 0;\r\nB91 [E91]= 2;\r\nB92 @Record { } .= 0;\r\nB92 [E92]= 2;\r\nB93 @Record { } .= 0;\r\nB93 [E93]= 2;\r\nB94 @Record { } .= 0;\r\nB94 [E94]= 2;\r\nB95 @Record { } .= 0;\r\nB95 [E95]= 2;\r\nB96 @Record { } .= 0;\r\nB96 [E96]= 2;\r\nB97 @Record { } .= 0;\r\nB97 [E97]= 2;\r\nB98 @Record { } .= 0;\r\nB98 [E98]= 2;\r\nB99 @Record { } .= 0;\r\nB99 [E99]= 2;\r\nAsum @Record { };\r\nAsum := A0 + A1 + A2 + A3 + A4 + A5 + A6 + A7 + A8 + A9 + A10 + A11 + A12 + A13 + A14 + A15 + A16 + A17 + A18 + A19 + A20 + A21 + A22 + A23 + A24 + A25 + A26 + A27 + A28 + A29 + A30 + A31 + A32 + A33 + A34 + A35 + A36 + A37 + A38 + A39 + A40 + A41 + A42 + A43 + A44 + A45 + A46 + A47 + A48 + A49 + A50 + A51 + A52 + A53 + A54 + A55 + A56 + A57 + A58 + A59 + A60 + A61 + A62 + A63 + A64 + A65 + A66 + A67 + A68 + A69 + A70 + A71 + A72 + A73 + A74 + A75 + A76 + A77 + A78 + A79 + A80 + A81 + A82 + A83 + A84 + A85 + A86 + A87 + A88 + A89 + A90 + A91 + A92 + A93 + A94 + A95 + A96 + A97 + A98 + A99;\r\nBsum @Record { };\r\nBsum := B0 + B1 + B2 + B3 + B4 + B5 + B6 + B7 + B8 + B9 + B10 + B11 + B12 + B13 + B14 + B15 + B16 + B17 + B18 + B19 + B20 + B21 + B22 + B23 + B24 + B25 + B26 + B27 + B28 + B29 + B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B38 + B39 + B40 + B41 + B42 + B43 + B44 + B45 + B46 + B47 + B48 + B49 + B50 + B51 + B52 + B53 + B54 + B55 + B56 + B57 + B58 + B59 + B60 + B61 + B62 + B63 + B64 + B65 + B66 + B67 + B68 + B69 + B70 + B71 + B72 + B73 + B74 + B75 + B76 + B77 + B78 + B79 + B80 + B81 + B82 + B83 + B84 + B85 + B86 + B87 + B88 + B89 + B90 + B91 + B92 + B93 + B94 + B95 + B96 + B97 + B98 + B99;\r\nAllsum @Record { };\r\nAllsum := Asum + Bsum;\r\ntoodiverged @Record { } .= 0;\r\ntoodiverged [_E0]= 1;\n\r\ntrig @Const { } = 1;\n\r\nE0 @DSwitcher { trigger: trig > 0 and A0 < 1, };\r\nE1 @DSwitcher { trigger: trig > 0 and A1 < 1, };\r\nE2 @DSwitcher { trigger: trig > 0 and A2 < 1, };\r\nE3 @DSwitcher { trigger: trig > 0 and A3 < 1, };\r\nE4 @DSwitcher { trigger: trig > 0 and A4 < 1, };\r\nE5 @DSwitcher { trigger: trig > 0 and A5 < 1, };\r\nE6 @DSwitcher { trigger: trig > 0 and A6 < 1, };\r\nE7 @DSwitcher { trigger: trig > 0 and A7 < 1, };\r\nE8 @DSwitcher { trigger: trig > 0 and A8 < 1, };\r\nE9 @DSwitcher { trigger: trig > 0 and A9 < 1, };\r\nE10 @DSwitcher { trigger: trig > 0 and A10 < 1, };\r\nE11 @DSwitcher { trigger: trig > 0 and A11 < 1, };\r\nE12 @DSwitcher { trigger: trig > 0 and A12 < 1, };\r\nE13 @DSwitcher { trigger: trig > 0 and A13 < 1, };\r\nE14 @DSwitcher { trigger: trig > 0 and A14 < 1, };\r\nE15 @DSwitcher { trigger: trig > 0 and A15 < 1, };\r\nE16 @DSwitcher { trigger: trig > 0 and A16 < 1, };\r\nE17 @DSwitcher { trigger: trig > 0 and A17 < 1, };\r\nE18 @DSwitcher { trigger: trig > 0 and A18 < 1, };\r\nE19 @DSwitcher { trigger: trig > 0 and A19 < 1, };\r\nE20 @DSwitcher { trigger: trig > 0 and A20 < 1, };\r\nE21 @DSwitcher { trigger: trig > 0 and A21 < 1, };\r\nE22 @DSwitcher { trigger: trig > 0 and A22 < 1, };\r\nE23 @DSwitcher { trigger: trig > 0 and A23 < 1, };\r\nE24 @DSwitcher { trigger: trig > 0 and A24 < 1, };\r\nE25 @DSwitcher { trigger: trig > 0 and A25 < 1, };\r\nE26 @DSwitcher { trigger: trig > 0 and A26 < 1, };\r\nE27 @DSwitcher { trigger: trig > 0 and A27 < 1, };\r\nE28 @DSwitcher { trigger: trig > 0 and A28 < 1, };\r\nE29 @DSwitcher { trigger: trig > 0 and A29 < 1, };\r\nE30 @DSwitcher { trigger: trig > 0 and A30 < 1, };\r\nE31 @DSwitcher { trigger: trig > 0 and A31 < 1, };\r\nE32 @DSwitcher { trigger: trig > 0 and A32 < 1, };\r\nE33 @DSwitcher { trigger: trig > 0 and A33 < 1, };\r\nE34 @DSwitcher { trigger: trig > 0 and A34 < 1, };\r\nE35 @DSwitcher { trigger: trig > 0 and A35 < 1, };\r\nE36 @DSwitcher { trigger: trig > 0 and A36 < 1, };\r\nE37 @DSwitcher { trigger: trig > 0 and A37 < 1, };\r\nE38 @DSwitcher { trigger: trig > 0 and A38 < 1, };\r\nE39 @DSwitcher { trigger: trig > 0 and A39 < 1, };\r\nE40 @DSwitcher { trigger: trig > 0 and A40 < 1, };\r\nE41 @DSwitcher { trigger: trig > 0 and A41 < 1, };\r\nE42 @DSwitcher { trigger: trig > 0 and A42 < 1, };\r\nE43 @DSwitcher { trigger: trig > 0 and A43 < 1, };\r\nE44 @DSwitcher { trigger: trig > 0 and A44 < 1, };\r\nE45 @DSwitcher { trigger: trig > 0 and A45 < 1, };\r\nE46 @DSwitcher { trigger: trig > 0 and A46 < 1, };\r\nE47 @DSwitcher { trigger: trig > 0 and A47 < 1, };\r\nE48 @DSwitcher { trigger: trig > 0 and A48 < 1, };\r\nE49 @DSwitcher { trigger: trig > 0 and A49 < 1, };\r\nE50 @DSwitcher { trigger: trig > 0 and A50 < 1, };\r\nE51 @DSwitcher { trigger: trig > 0 and A51 < 1, };\r\nE52 @DSwitcher { trigger: trig > 0 and A52 < 1, };\r\nE53 @DSwitcher { trigger: trig > 0 and A53 < 1, };\r\nE54 @DSwitcher { trigger: trig > 0 and A54 < 1, };\r\nE55 @DSwitcher { trigger: trig > 0 and A55 < 1, };\r\nE56 @DSwitcher { trigger: trig > 0 and A56 < 1, };\r\nE57 @DSwitcher { trigger: trig > 0 and A57 < 1, };\r\nE58 @DSwitcher { trigger: trig > 0 and A58 < 1, };\r\nE59 @DSwitcher { trigger: trig > 0 and A59 < 1, };\r\nE60 @DSwitcher { trigger: trig > 0 and A60 < 1, };\r\nE61 @DSwitcher { trigger: trig > 0 and A61 < 1, };\r\nE62 @DSwitcher { trigger: trig > 0 and A62 < 1, };\r\nE63 @DSwitcher { trigger: trig > 0 and A63 < 1, };\r\nE64 @DSwitcher { trigger: trig > 0 and A64 < 1, };\r\nE65 @DSwitcher { trigger: trig > 0 and A65 < 1, };\r\nE66 @DSwitcher { trigger: trig > 0 and A66 < 1, };\r\nE67 @DSwitcher { trigger: trig > 0 and A67 < 1, };\r\nE68 @DSwitcher { trigger: trig > 0 and A68 < 1, };\r\nE69 @DSwitcher { trigger: trig > 0 and A69 < 1, };\r\nE70 @DSwitcher { trigger: trig > 0 and A70 < 1, };\r\nE71 @DSwitcher { trigger: trig > 0 and A71 < 1, };\r\nE72 @DSwitcher { trigger: trig > 0 and A72 < 1, };\r\nE73 @DSwitcher { trigger: trig > 0 and A73 < 1, };\r\nE74 @DSwitcher { trigger: trig > 0 and A74 < 1, };\r\nE75 @DSwitcher { trigger: trig > 0 and A75 < 1, };\r\nE76 @DSwitcher { trigger: trig > 0 and A76 < 1, };\r\nE77 @DSwitcher { trigger: trig > 0 and A77 < 1, };\r\nE78 @DSwitcher { trigger: trig > 0 and A78 < 1, };\r\nE79 @DSwitcher { trigger: trig > 0 and A79 < 1, };\r\nE80 @DSwitcher { trigger: trig > 0 and A80 < 1, };\r\nE81 @DSwitcher { trigger: trig > 0 and A81 < 1, };\r\nE82 @DSwitcher { trigger: trig > 0 and A82 < 1, };\r\nE83 @DSwitcher { trigger: trig > 0 and A83 < 1, };\r\nE84 @DSwitcher { trigger: trig > 0 and A84 < 1, };\r\nE85 @DSwitcher { trigger: trig > 0 and A85 < 1, };\r\nE86 @DSwitcher { trigger: trig > 0 and A86 < 1, };\r\nE87 @DSwitcher { trigger: trig > 0 and A87 < 1, };\r\nE88 @DSwitcher { trigger: trig > 0 and A88 < 1, };\r\nE89 @DSwitcher { trigger: trig > 0 and A89 < 1, };\r\nE90 @DSwitcher { trigger: trig > 0 and A90 < 1, };\r\nE91 @DSwitcher { trigger: trig > 0 and A91 < 1, };\r\nE92 @DSwitcher { trigger: trig > 0 and A92 < 1, };\r\nE93 @DSwitcher { trigger: trig > 0 and A93 < 1, };\r\nE94 @DSwitcher { trigger: trig > 0 and A94 < 1, };\r\nE95 @DSwitcher { trigger: trig > 0 and A95 < 1, };\r\nE96 @DSwitcher { trigger: trig > 0 and A96 < 1, };\r\nE97 @DSwitcher { trigger: trig > 0 and A97 < 1, };\r\nE98 @DSwitcher { trigger: trig > 0 and A98 < 1, };\r\nE99 @DSwitcher { trigger: trig > 0 and A99 < 1, };\r\nEb0 @DSwitcher { trigger: trig > 0 and B0 < 1, };\r\nEb1 @DSwitcher { trigger: trig > 0 and B1 < 1, };\r\nEb2 @DSwitcher { trigger: trig > 0 and B2 < 1, };\r\nEb3 @DSwitcher { trigger: trig > 0 and B3 < 1, };\r\nEb4 @DSwitcher { trigger: trig > 0 and B4 < 1, };\r\nEb5 @DSwitcher { trigger: trig > 0 and B5 < 1, };\r\nEb6 @DSwitcher { trigger: trig > 0 and B6 < 1, };\r\nEb7 @DSwitcher { trigger: trig > 0 and B7 < 1, };\r\nEb8 @DSwitcher { trigger: trig > 0 and B8 < 1, };\r\nEb9 @DSwitcher { trigger: trig > 0 and B9 < 1, };\r\nEb10 @DSwitcher { trigger: trig > 0 and B10 < 1, };\r\nEb11 @DSwitcher { trigger: trig > 0 and B11 < 1, };\r\nEb12 @DSwitcher { trigger: trig > 0 and B12 < 1, };\r\nEb13 @DSwitcher { trigger: trig > 0 and B13 < 1, };\r\nEb14 @DSwitcher { trigger: trig > 0 and B14 < 1, };\r\nEb15 @DSwitcher { trigger: trig > 0 and B15 < 1, };\r\nEb16 @DSwitcher { trigger: trig > 0 and B16 < 1, };\r\nEb17 @DSwitcher { trigger: trig > 0 and B17 < 1, };\r\nEb18 @DSwitcher { trigger: trig > 0 and B18 < 1, };\r\nEb19 @DSwitcher { trigger: trig > 0 and B19 < 1, };\r\nEb20 @DSwitcher { trigger: trig > 0 and B20 < 1, };\r\nEb21 @DSwitcher { trigger: trig > 0 and B21 < 1, };\r\nEb22 @DSwitcher { trigger: trig > 0 and B22 < 1, };\r\nEb23 @DSwitcher { trigger: trig > 0 and B23 < 1, };\r\nEb24 @DSwitcher { trigger: trig > 0 and B24 < 1, };\r\nEb25 @DSwitcher { trigger: trig > 0 and B25 < 1, };\r\nEb26 @DSwitcher { trigger: trig > 0 and B26 < 1, };\r\nEb27 @DSwitcher { trigger: trig > 0 and B27 < 1, };\r\nEb28 @DSwitcher { trigger: trig > 0 and B28 < 1, };\r\nEb29 @DSwitcher { trigger: trig > 0 and B29 < 1, };\r\nEb30 @DSwitcher { trigger: trig > 0 and B30 < 1, };\r\nEb31 @DSwitcher { trigger: trig > 0 and B31 < 1, };\r\nEb32 @DSwitcher { trigger: trig > 0 and B32 < 1, };\r\nEb33 @DSwitcher { trigger: trig > 0 and B33 < 1, };\r\nEb34 @DSwitcher { trigger: trig > 0 and B34 < 1, };\r\nEb35 @DSwitcher { trigger: trig > 0 and B35 < 1, };\r\nEb36 @DSwitcher { trigger: trig > 0 and B36 < 1, };\r\nEb37 @DSwitcher { trigger: trig > 0 and B37 < 1, };\r\nEb38 @DSwitcher { trigger: trig > 0 and B38 < 1, };\r\nEb39 @DSwitcher { trigger: trig > 0 and B39 < 1, };\r\nEb40 @DSwitcher { trigger: trig > 0 and B40 < 1, };\r\nEb41 @DSwitcher { trigger: trig > 0 and B41 < 1, };\r\nEb42 @DSwitcher { trigger: trig > 0 and B42 < 1, };\r\nEb43 @DSwitcher { trigger: trig > 0 and B43 < 1, };\r\nEb44 @DSwitcher { trigger: trig > 0 and B44 < 1, };\r\nEb45 @DSwitcher { trigger: trig > 0 and B45 < 1, };\r\nEb46 @DSwitcher { trigger: trig > 0 and B46 < 1, };\r\nEb47 @DSwitcher { trigger: trig > 0 and B47 < 1, };\r\nEb48 @DSwitcher { trigger: trig > 0 and B48 < 1, };\r\nEb49 @DSwitcher { trigger: trig > 0 and B49 < 1, };\r\nEb50 @DSwitcher { trigger: trig > 0 and B50 < 1, };\r\nEb51 @DSwitcher { trigger: trig > 0 and B51 < 1, };\r\nEb52 @DSwitcher { trigger: trig > 0 and B52 < 1, };\r\nEb53 @DSwitcher { trigger: trig > 0 and B53 < 1, };\r\nEb54 @DSwitcher { trigger: trig > 0 and B54 < 1, };\r\nEb55 @DSwitcher { trigger: trig > 0 and B55 < 1, };\r\nEb56 @DSwitcher { trigger: trig > 0 and B56 < 1, };\r\nEb57 @DSwitcher { trigger: trig > 0 and B57 < 1, };\r\nEb58 @DSwitcher { trigger: trig > 0 and B58 < 1, };\r\nEb59 @DSwitcher { trigger: trig > 0 and B59 < 1, };\r\nEb60 @DSwitcher { trigger: trig > 0 and B60 < 1, };\r\nEb61 @DSwitcher { trigger: trig > 0 and B61 < 1, };\r\nEb62 @DSwitcher { trigger: trig > 0 and B62 < 1, };\r\nEb63 @DSwitcher { trigger: trig > 0 and B63 < 1, };\r\nEb64 @DSwitcher { trigger: trig > 0 and B64 < 1, };\r\nEb65 @DSwitcher { trigger: trig > 0 and B65 < 1, };\r\nEb66 @DSwitcher { trigger: trig > 0 and B66 < 1, };\r\nEb67 @DSwitcher { trigger: trig > 0 and B67 < 1, };\r\nEb68 @DSwitcher { trigger: trig > 0 and B68 < 1, };\r\nEb69 @DSwitcher { trigger: trig > 0 and B69 < 1, };\r\nEb70 @DSwitcher { trigger: trig > 0 and B70 < 1, };\r\nEb71 @DSwitcher { trigger: trig > 0 and B71 < 1, };\r\nEb72 @DSwitcher { trigger: trig > 0 and B72 < 1, };\r\nEb73 @DSwitcher { trigger: trig > 0 and B73 < 1, };\r\nEb74 @DSwitcher { trigger: trig > 0 and B74 < 1, };\r\nEb75 @DSwitcher { trigger: trig > 0 and B75 < 1, };\r\nEb76 @DSwitcher { trigger: trig > 0 and B76 < 1, };\r\nEb77 @DSwitcher { trigger: trig > 0 and B77 < 1, };\r\nEb78 @DSwitcher { trigger: trig > 0 and B78 < 1, };\r\nEb79 @DSwitcher { trigger: trig > 0 and B79 < 1, };\r\nEb80 @DSwitcher { trigger: trig > 0 and B80 < 1, };\r\nEb81 @DSwitcher { trigger: trig > 0 and B81 < 1, };\r\nEb82 @DSwitcher { trigger: trig > 0 and B82 < 1, };\r\nEb83 @DSwitcher { trigger: trig > 0 and B83 < 1, };\r\nEb84 @DSwitcher { trigger: trig > 0 and B84 < 1, };\r\nEb85 @DSwitcher { trigger: trig > 0 and B85 < 1, };\r\nEb86 @DSwitcher { trigger: trig > 0 and B86 < 1, };\r\nEb87 @DSwitcher { trigger: trig > 0 and B87 < 1, };\r\nEb88 @DSwitcher { trigger: trig > 0 and B88 < 1, };\r\nEb89 @DSwitcher { trigger: trig > 0 and B89 < 1, };\r\nEb90 @DSwitcher { trigger: trig > 0 and B90 < 1, };\r\nEb91 @DSwitcher { trigger: trig > 0 and B91 < 1, };\r\nEb92 @DSwitcher { trigger: trig > 0 and B92 < 1, };\r\nEb93 @DSwitcher { trigger: trig > 0 and B93 < 1, };\r\nEb94 @DSwitcher { trigger: trig > 0 and B94 < 1, };\r\nEb95 @DSwitcher { trigger: trig > 0 and B95 < 1, };\r\nEb96 @DSwitcher { trigger: trig > 0 and B96 < 1, };\r\nEb97 @DSwitcher { trigger: trig > 0 and B97 < 1, };\r\nEb98 @DSwitcher { trigger: trig > 0 and B98 < 1, };\r\nEb99 @DSwitcher { trigger: trig > 0 and B99 < 1, };\r\n_E0 @DSwitcher { trigger: abs(Asum - Bsum) > 100, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a reaction modified by an extent conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:ExtentConversionFactor, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The reaction in the submodel must be converted by the extent conversion factor, separated by a level of submodel indirection.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (sub2__sub1__s1)\r\n* 1 parameter (extentconv)\r\n* 1 compartment (sub2__sub1__C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> sub2__sub1__s1 | $extentconv * 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species sub2__sub1__s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial volume of compartment 'sub2__sub1__C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nextentconv @Const { } = 1000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a reaction modified by an extent conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:ExtentConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The reaction in the submodel must be converted by the extent conversion factor, separated by a level of submodel indirection.  The species and compartment are replaced in the top-level model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 1 parameter (extentconv)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> s1 | $extentconv * 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, } .= 1 / C;\n\r\nextentconv @Const { } = 1000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a reaction modified by an extent conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedBy, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, HasOnlySubstanceUnits, comp:ExtentConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The reaction in the submodel must be converted by the extent conversion factor, separated by a level of submodel indirection.  The species and compartment from the top-level model are replaced by the submodel elements.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 1 parameter (extentconv)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> s1 | $extentconv * 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $1$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, } .= 1 / C;\n\r\nextentconv @Const { } = 1000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Replacements in external models\r\ncomponentTags:   Compartment, Reaction, Species, comp:Deletion, comp:ExternalModelDefinition, comp:ModelDefinition, comp:Port, comp:ReplacedBy, comp:ReplacedElement, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n In this modified example from the specification, an external model is referenced by both a ReplacedBy and a ReplacedElement.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 species (S, A__E, D, A__ES)\r\n* 1 compartment (comp)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| A__J0: S + A__E -> A__ES | $(S + A__E) / A__ES$ |\r\n| A__J1: A__ES -> A__E + D | $A__ES / (A__E + D)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S | $1$ | variable |\r\n| Initial concentration of species A__E | $1$ | variable |\r\n| Initial concentration of species D | $1$ | variable |\r\n| Initial concentration of species A__ES | $1$ | variable |\r\n| Initial volume of compartment 'comp' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { boundary: true, } .= 1;\n\r\nS @Species { compartment: comp, } .= 5;\r\nD @Species { compartment: comp, } .= 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An element in an external model submodel as the target of a replacedBy element.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ExternalModelDefinition, comp:ReplacedBy, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n In this model, an element is replaced by an element in a submodel of an external model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 species (S, A__submod1__E, D, A__submod1__ES)\r\n* 1 compartment (comp)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |  *Fast*  |\r\n| A__submod1__J0: S + A__submod1__E -> A__submod1__ES | $(S + A__submod1__E) / A__submod1__ES$ | fast |\r\n| A__submod1__J1: A__submod1__ES -> A__submod1__E + D | $A__submod1__ES / (A__submod1__E + D)$ | fast |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S | $10$ | variable |\r\n| Initial concentration of species A__submod1__E | $1$ | variable |\r\n| Initial concentration of species D | $15$ | variable |\r\n| Initial concentration of species A__submod1__ES | $1$ | variable |\r\n| Initial volume of compartment 'comp' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { boundary: true, } .= 1;\n\r\nS @Species { compartment: comp, } .= 5;\r\nD @Species { compartment: comp, } .= 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        External models with submodels with replaced elements.\r\ncomponentTags:   Compartment, Reaction, Species, comp:ExternalModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:SubmodelOutput\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n In this modification of a model from the specification, an external model has submodels referenced by replacedElements.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 4 species (S, D, A__submod1__E, A__submod1__ES)\r\n* 1 compartment (comp)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| A__submod1__J0: S + A__submod1__E -> A__submod1__ES | $(S + A__submod1__E) / A__submod1__ES$ |\r\n| A__submod1__J1: A__submod1__ES -> A__submod1__E + D | $A__submod1__ES / (A__submod1__E + D)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S | $5$ | variable |\r\n| Initial concentration of species D | $10$ | variable |\r\n| Initial concentration of species A__submod1__E | $1$ | variable |\r\n| Initial concentration of species A__submod1__ES | $1$ | variable |\r\n| Initial volume of compartment 'comp' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { boundary: true, } .= 1;\n\r\nS @Species { compartment: comp, } .= 5;\r\nD @Species { compartment: comp, } .= 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a reaction modified by a time conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The reaction in the submodel must be converted by the time conversion factor, separated by a level of submodel indirection.  The species and compartment are replaced in the top-level model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 1 parameter (timeconv)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> s1 | $(1 / timeconv) * 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $0$ | variable |\r\n| Initial value of parameter timeconv | $100$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, } .= 0 / C;\n\r\ntimeconv @Const { } = 100;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a reaction modified by a time conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ExternalModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:TimeConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The reaction in the submodel must be converted by the time conversion factor, separated by a level of submodel indirection, and in an external model.  The species and compartment are replaced in the top-level model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 1 parameter (timeconv)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> s1 | $(1 / timeconv) * 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $0$ | variable |\r\n| Initial value of parameter timeconv | $100$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, } .= 0 / C;\n\r\ntimeconv @Const { } = 100;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a reaction modified by an extent conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ExternalModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:ExtentConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The reaction in the submodel must be converted by the extent conversion factor, separated by a level of submodel indirection, and in an external model.  The species and compartment are replaced in the top-level model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 1 parameter (extentconv)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> s1 | $extentconv * 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species s1 | $0$ | variable |\r\n| Initial value of parameter extentconv | $1000$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, } .= 0 / C;\n\r\nextentconv @Const { } = 1000;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a species modified by a conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ExternalModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:ConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The reaction in the replaced species must be converted by the conversion factor, separated by a level of submodel indirection, and in an external model.  The species and compartment are replaced in the top-level model.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 1 parameter (cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> s1 | $10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species s1 | $2$ | variable |\r\n| Initial value of parameter cf | $10$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, } .= 2;\n\r\ncf @Const { } = 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule.\r\ncomponentTags:   AssignmentRule, Compartment, FunctionDefinition, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  One of the rate rules is a function definition, just to ensure that is considered.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $getPointFour()$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | getPointFour |  | $0.4$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\n","completion":"\r\ngetPointFour #defineFunction { arguments: [], math: 0.4, };\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 0;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := getPointFour();\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule, then modified by an event.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, EventNoDelay, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  The species concentration is changed by an event partway through the simulation, affecting things all over again.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time >= 0.45$ | $S1 = 0.2$ |]\r\n\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 0;\r\nS1 [_E0]= 0.2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n_E0 @DSwitcher { trigger: t >= 0.45, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule, and affected by an event.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, EventNoDelay, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  Partway through the simulation, an event changes the level of the compartment, forcing yet another change.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time >= 0.45$ | $C1 = 0.2$ |]\r\n\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\r\nC1 [_E0]= 0.2;\n\r\nS1 @Species { compartment: C1, } .= 0;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n_E0 @DSwitcher { trigger: t >= 0.45, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule, and affected by an event.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, EventNoDelay, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n NOTE:  This test is a more complicated version of test 1779.  If this isn't passing, make sure you pass test 1779 first, as it is likely that the issue here is actually reflective of the more fundamental issue tested in that test (i.e. the simultaneous assignment to a species concentration and compartment).\r\n \r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  Partway through the simulation, an event changes the level of the species and of the compartment, forcing yet another change.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time >= 0.45$ | $S1 = 0.2$ |\r\n|  |  | $C1 = 0.2$ |]\r\n\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\r\nC1 [E0]= 0.2;\n\r\nS1 @Species { compartment: C1, } .= 0;\r\nS1 [E0]= 0.2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\nE0 @DSwitcher { trigger: t >= 0.45, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule, modified by an event at t0.\r\ncomponentTags:   AssignmentRule, Compartment, EventNoDelay, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, EventT0Firing, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  The species concentration is changed by an event at t0.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $S1 > -1$ | false | $S1 = 0$ |]\r\n\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 1;\r\nS1 [E0]= 0;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\nE0 @DSwitcher { trigger: S1 > (-1), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule,that affects an event priority.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  Two other simultaneous events fire, with the priority of one equal to S1, and the priority of the other equal to a value between the concentration of S1 and the amount of S1, to ensure that the order is correct.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 2 parameters (x, x2)\r\n* 1 compartment (C1)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 0.45$ | $S1$ | $x2 = 3$ |\r\n| E1 | $time > 0.45$ | $0.15$ | $x2 = 5$ |]\r\n\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial value of parameter x2 | $0$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 0;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\r\nx2 @Record { } .= 0;\r\nx2 [E0]= 3;\r\nx2 [E1]= 5;\n\r\nE0 @DSwitcher { trigger: t > 0.45, };\r\nE1 @DSwitcher { trigger: t > 0.45, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule,with an initial assignment to the species.\r\ncomponentTags:   AssignmentRule, Compartment, InitialAssignment, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  Its concentration is set with an initial assignment (not its amount).\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3 / 2$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\n\r\nS1 @Species { compartment: C1, } .= 3 / 2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species and a compartment both under control of a rate rule,with an initial assignment to the species and compartment.\r\ncomponentTags:   AssignmentRule, Compartment, InitialAssignment, Parameter, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment under control of a rate rule, and the species is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is affected by the rate of change.  That value then gets assigned to the parameter 'x', since we typically only require Species output in amounts.  Its concentration is set with an initial assignment (not its amount), and the compartment itself also has an initial assignment.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $0.4$ |\r\n| Rate | C1 | $0.2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $3 / 2$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $1 / 2$ | variable |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 1 / 2;\n\r\nS1 @Species { compartment: C1, } .= 3 / 2;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := 0.4;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two simultaneous events with a priority using a delay.\r\ncomponentTags:   CSymbolDelay, EventNoDelay, EventPriority, Parameter, RateRule\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two events fire simultaneously, with the priority of one being set using the delay function for another parameter, making its priority lower, and therefore firing second.\r\n\r\nThe model contains:\r\n* 2 parameters (P1, P2)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $P1 > 1.5$ | $delay(P1, 1)$ | $P2 = 3$ |\r\n| E1 | $P1 > 1.5$ | $1$ | $P2 = 5$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | P1 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $0$ | variable |\r\n| Initial value of parameter P2 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP1_proc @Process { actors:  = P1, };\r\nP1_proc := 1;\n\r\nP1 @Record { } .= 0;\r\nP2 @Record { } .= 0;\r\nP2 [E0]= 3;\r\nP2 [E1]= 5;\n\r\nE0 @DSwitcher { trigger: P1 > 1.5, };\r\nE1 @DSwitcher { trigger: P1 > 1.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Uncommon MathML used in event priorities.\r\ncomponentTags:   CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:        NonConstantParameter, UncommonMathML\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n The model tests the various unusual mathematical constructs in event priorities, essentially comparing them to 0.55 to see which is greater.\r\n\r\nThe model contains:\r\n* 53 parameters (P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22, P23, P24, P25, P26, P27, P28, P29, P30, P31, P32, P33, P34, P35, P36, P37, P38, P39, P40, P41, P42, P43, P44, P45, P46, P47, P48, P49, P50, P51, P52)\r\n\r\nThere are 106 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 1.5$ | $exponentiale$ | $P0 = 2$ |\r\n| E1 | $time > 1.5$ | $exp(exponentiale)$ | $P1 = 2$ |\r\n| E2 | $time > 1.5$ | $abs(-1)$ | $P2 = 2$ |\r\n| E3 | $time > 1.5$ | $abs(1)$ | $P3 = 2$ |\r\n| E4 | $time > 1.5$ | $acos(-1)$ | $P4 = 2$ |\r\n| E5 | $time > 1.5$ | $acos(0.5)$ | $P5 = 2$ |\r\n| E6 | $time > 1.5$ | $asin(1)$ | $P6 = 2$ |\r\n| E7 | $time > 1.5$ | $asin(-0.5)$ | $P7 = 2$ |\r\n| E8 | $time > 1.5$ | $atan(2.8)$ | $P8 = 2$ |\r\n| E9 | $time > 1.5$ | $atan(-7.09)$ | $P9 = 2$ |\r\n| E10 | $time > 1.5$ | $ceil(0.5)$ | $P10 = 2$ |\r\n| E11 | $time > 1.5$ | $ceil(3.55)$ | $P11 = 2$ |\r\n| E12 | $time > 1.5$ | $ceil(-4.6)$ | $P12 = 2$ |\r\n| E13 | $time > 1.5$ | $cos(9.1)$ | $P13 = 2$ |\r\n| E14 | $time > 1.5$ | $cos(-0.22)$ | $P14 = 2$ |\r\n| E15 | $time > 1.5$ | $exp(0)$ | $P15 = 2$ |\r\n| E16 | $time > 1.5$ | $exp(1)$ | $P16 = 2$ |\r\n| E17 | $time > 1.5$ | $exp(0.77)$ | $P17 = 2$ |\r\n| E18 | $time > 1.5$ | $floor(-4.6)$ | $P18 = 2$ |\r\n| E19 | $time > 1.5$ | $floor(9.1)$ | $P19 = 2$ |\r\n| E20 | $time > 1.5$ | $ln(0.2)$ | $P20 = 2$ |\r\n| E21 | $time > 1.5$ | $ln(1)$ | $P21 = 2$ |\r\n| E22 | $time > 1.5$ | $log10(0.2)$ | $P22 = 2$ |\r\n| E23 | $time > 1.5$ | $log10(1)$ | $P23 = 2$ |\r\n| E24 | $time > 1.5$ | $1^2$ | $P24 = 2$ |\r\n| E25 | $time > 1.5$ | $2^2$ | $P25 = 2$ |\r\n| E26 | $time > 1.5$ | $1.4^5.1$ | $P26 = 2$ |\r\n| E27 | $time > 1.5$ | $4^2$ | $P27 = 2$ |\r\n| E28 | $time > 1.5$ | $3.1^2$ | $P28 = 2$ |\r\n| E29 | $time > 1.5$ | $sqrt(4)$ | $P29 = 2$ |\r\n| E30 | $time > 1.5$ | $sqrt(7.4)$ | $P30 = 2$ |\r\n| E31 | $time > 1.5$ | $sin(2.1)$ | $P31 = 2$ |\r\n| E32 | $time > 1.5$ | $sin(0)$ | $P32 = 2$ |\r\n| E33 | $time > 1.5$ | $sin(-5.9)$ | $P33 = 2$ |\r\n| E34 | $time > 1.5$ | $tan(0)$ | $P34 = 2$ |\r\n| E35 | $time > 1.5$ | $tan(1.11)$ | $P35 = 2$ |\r\n| E36 | $time > 1.5$ | $tan(-6)$ | $P36 = 2$ |\r\n| E37 | $time > 1.5$ | $sec(0.5)$ | $P37 = 2$ |\r\n| E38 | $time > 1.5$ | $csc(4.5)$ | $P38 = 2$ |\r\n| E39 | $time > 1.5$ | $cot(0.2)$ | $P39 = 2$ |\r\n| E40 | $time > 1.5$ | $sinh(0.3)$ | $P40 = 2$ |\r\n| E41 | $time > 1.5$ | $cosh(1.7)$ | $P41 = 2$ |\r\n| E42 | $time > 1.5$ | $arcsec(2.3)$ | $P42 = 2$ |\r\n| E43 | $time > 1.5$ | $arccsc(1.1)$ | $P43 = 2$ |\r\n| E44 | $time > 1.5$ | $arccot(-0.1)$ | $P44 = 2$ |\r\n| E45 | $time > 1.5$ | $arcsinh(99)$ | $P45 = 2$ |\r\n| E46 | $time > 1.5$ | $arccosh(1.34)$ | $P46 = 2$ |\r\n| E47 | $time > 1.5$ | $arctanh(-0.7)$ | $P47 = 2$ |\r\n| E48 | $time > 1.5$ | $arcsech(0.42)$ | $P48 = 2$ |\r\n| E49 | $time > 1.5$ | $arccsch(0.01)$ | $P49 = 2$ |\r\n| E50 | $time > 1.5$ | $arccoth(8.2)$ | $P50 = 2$ |\r\n| E51 | $time > 1.5$ | $times()$ | $P51 = 2$ |\r\n| E52 | $time > 1.5$ | $plus()$ | $P52 = 2$ |\r\n| Ep0 | $time > 1.5$ | $0.55$ | $P0 = 3$ |\r\n| Ep1 | $time > 1.5$ | $0.55$ | $P1 = 3$ |\r\n| Ep2 | $time > 1.5$ | $0.55$ | $P2 = 3$ |\r\n| Ep3 | $time > 1.5$ | $0.55$ | $P3 = 3$ |\r\n| Ep4 | $time > 1.5$ | $0.55$ | $P4 = 3$ |\r\n| Ep5 | $time > 1.5$ | $0.55$ | $P5 = 3$ |\r\n| Ep6 | $time > 1.5$ | $0.55$ | $P6 = 3$ |\r\n| Ep7 | $time > 1.5$ | $0.55$ | $P7 = 3$ |\r\n| Ep8 | $time > 1.5$ | $0.55$ | $P8 = 3$ |\r\n| Ep9 | $time > 1.5$ | $0.55$ | $P9 = 3$ |\r\n| Ep10 | $time > 1.5$ | $0.55$ | $P10 = 3$ |\r\n| Ep11 | $time > 1.5$ | $0.55$ | $P11 = 3$ |\r\n| Ep12 | $time > 1.5$ | $0.55$ | $P12 = 3$ |\r\n| Ep13 | $time > 1.5$ | $0.55$ | $P13 = 3$ |\r\n| Ep14 | $time > 1.5$ | $0.55$ | $P14 = 3$ |\r\n| Ep15 | $time > 1.5$ | $0.55$ | $P15 = 3$ |\r\n| Ep16 | $time > 1.5$ | $0.55$ | $P16 = 3$ |\r\n| Ep17 | $time > 1.5$ | $0.55$ | $P17 = 3$ |\r\n| Ep18 | $time > 1.5$ | $0.55$ | $P18 = 3$ |\r\n| Ep19 | $time > 1.5$ | $0.55$ | $P19 = 3$ |\r\n| Ep20 | $time > 1.5$ | $0.55$ | $P20 = 3$ |\r\n| Ep21 | $time > 1.5$ | $0.55$ | $P21 = 3$ |\r\n| Ep22 | $time > 1.5$ | $0.55$ | $P22 = 3$ |\r\n| Ep23 | $time > 1.5$ | $0.55$ | $P23 = 3$ |\r\n| Ep24 | $time > 1.5$ | $0.55$ | $P24 = 3$ |\r\n| Ep25 | $time > 1.5$ | $0.55$ | $P25 = 3$ |\r\n| Ep26 | $time > 1.5$ | $0.55$ | $P26 = 3$ |\r\n| Ep27 | $time > 1.5$ | $0.55$ | $P27 = 3$ |\r\n| Ep28 | $time > 1.5$ | $0.55$ | $P28 = 3$ |\r\n| Ep29 | $time > 1.5$ | $0.55$ | $P29 = 3$ |\r\n| Ep30 | $time > 1.5$ | $0.55$ | $P30 = 3$ |\r\n| Ep31 | $time > 1.5$ | $0.55$ | $P31 = 3$ |\r\n| Ep32 | $time > 1.5$ | $0.55$ | $P32 = 3$ |\r\n| Ep33 | $time > 1.5$ | $0.55$ | $P33 = 3$ |\r\n| Ep34 | $time > 1.5$ | $0.55$ | $P34 = 3$ |\r\n| Ep35 | $time > 1.5$ | $0.55$ | $P35 = 3$ |\r\n| Ep36 | $time > 1.5$ | $0.55$ | $P36 = 3$ |\r\n| Ep37 | $time > 1.5$ | $0.55$ | $P37 = 3$ |\r\n| Ep38 | $time > 1.5$ | $0.55$ | $P38 = 3$ |\r\n| Ep39 | $time > 1.5$ | $0.55$ | $P39 = 3$ |\r\n| Ep40 | $time > 1.5$ | $0.55$ | $P40 = 3$ |\r\n| Ep41 | $time > 1.5$ | $0.55$ | $P41 = 3$ |\r\n| Ep42 | $time > 1.5$ | $0.55$ | $P42 = 3$ |\r\n| Ep43 | $time > 1.5$ | $0.55$ | $P43 = 3$ |\r\n| Ep44 | $time > 1.5$ | $0.55$ | $P44 = 3$ |\r\n| Ep45 | $time > 1.5$ | $0.55$ | $P45 = 3$ |\r\n| Ep46 | $time > 1.5$ | $0.55$ | $P46 = 3$ |\r\n| Ep47 | $time > 1.5$ | $0.55$ | $P47 = 3$ |\r\n| Ep48 | $time > 1.5$ | $0.55$ | $P48 = 3$ |\r\n| Ep49 | $time > 1.5$ | $0.55$ | $P49 = 3$ |\r\n| Ep50 | $time > 1.5$ | $0.55$ | $P50 = 3$ |\r\n| Ep51 | $time > 1.5$ | $0.55$ | $P51 = 3$ |\r\n| Ep52 | $time > 1.5$ | $0.55$ | $P52 = 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P0 | $0$ | variable |\r\n| Initial value of parameter P1 | $0$ | variable |\r\n| Initial value of parameter P2 | $0$ | variable |\r\n| Initial value of parameter P3 | $0$ | variable |\r\n| Initial value of parameter P4 | $0$ | variable |\r\n| Initial value of parameter P5 | $0$ | variable |\r\n| Initial value of parameter P6 | $0$ | variable |\r\n| Initial value of parameter P7 | $0$ | variable |\r\n| Initial value of parameter P8 | $0$ | variable |\r\n| Initial value of parameter P9 | $0$ | variable |\r\n| Initial value of parameter P10 | $0$ | variable |\r\n| Initial value of parameter P11 | $0$ | variable |\r\n| Initial value of parameter P12 | $0$ | variable |\r\n| Initial value of parameter P13 | $0$ | variable |\r\n| Initial value of parameter P14 | $0$ | variable |\r\n| Initial value of parameter P15 | $0$ | variable |\r\n| Initial value of parameter P16 | $0$ | variable |\r\n| Initial value of parameter P17 | $0$ | variable |\r\n| Initial value of parameter P18 | $0$ | variable |\r\n| Initial value of parameter P19 | $0$ | variable |\r\n| Initial value of parameter P20 | $0$ | variable |\r\n| Initial value of parameter P21 | $0$ | variable |\r\n| Initial value of parameter P22 | $0$ | variable |\r\n| Initial value of parameter P23 | $0$ | variable |\r\n| Initial value of parameter P24 | $0$ | variable |\r\n| Initial value of parameter P25 | $0$ | variable |\r\n| Initial value of parameter P26 | $0$ | variable |\r\n| Initial value of parameter P27 | $0$ | variable |\r\n| Initial value of parameter P28 | $0$ | variable |\r\n| Initial value of parameter P29 | $0$ | variable |\r\n| Initial value of parameter P30 | $0$ | variable |\r\n| Initial value of parameter P31 | $0$ | variable |\r\n| Initial value of parameter P32 | $0$ | variable |\r\n| Initial value of parameter P33 | $0$ | variable |\r\n| Initial value of parameter P34 | $0$ | variable |\r\n| Initial value of parameter P35 | $0$ | variable |\r\n| Initial value of parameter P36 | $0$ | variable |\r\n| Initial value of parameter P37 | $0$ | variable |\r\n| Initial value of parameter P38 | $0$ | variable |\r\n| Initial value of parameter P39 | $0$ | variable |\r\n| Initial value of parameter P40 | $0$ | variable |\r\n| Initial value of parameter P41 | $0$ | variable |\r\n| Initial value of parameter P42 | $0$ | variable |\r\n| Initial value of parameter P43 | $0$ | variable |\r\n| Initial value of parameter P44 | $0$ | variable |\r\n| Initial value of parameter P45 | $0$ | variable |\r\n| Initial value of parameter P46 | $0$ | variable |\r\n| Initial value of parameter P47 | $0$ | variable |\r\n| Initial value of parameter P48 | $0$ | variable |\r\n| Initial value of parameter P49 | $0$ | variable |\r\n| Initial value of parameter P50 | $0$ | variable |\r\n| Initial value of parameter P51 | $0$ | variable |\r\n| Initial value of parameter P52 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP0 @Record { } .= 0;\r\nP0 [E0]= 2;\r\nP0 [Ep0]= 3;\r\nP1 @Record { } .= 0;\r\nP1 [E1]= 2;\r\nP1 [Ep1]= 3;\r\nP2 @Record { } .= 0;\r\nP2 [E2]= 2;\r\nP2 [Ep2]= 3;\r\nP3 @Record { } .= 0;\r\nP3 [E3]= 2;\r\nP3 [Ep3]= 3;\r\nP4 @Record { } .= 0;\r\nP4 [E4]= 2;\r\nP4 [Ep4]= 3;\r\nP5 @Record { } .= 0;\r\nP5 [E5]= 2;\r\nP5 [Ep5]= 3;\r\nP6 @Record { } .= 0;\r\nP6 [E6]= 2;\r\nP6 [Ep6]= 3;\r\nP7 @Record { } .= 0;\r\nP7 [E7]= 2;\r\nP7 [Ep7]= 3;\r\nP8 @Record { } .= 0;\r\nP8 [E8]= 2;\r\nP8 [Ep8]= 3;\r\nP9 @Record { } .= 0;\r\nP9 [E9]= 2;\r\nP9 [Ep9]= 3;\r\nP10 @Record { } .= 0;\r\nP10 [E10]= 2;\r\nP10 [Ep10]= 3;\r\nP11 @Record { } .= 0;\r\nP11 [E11]= 2;\r\nP11 [Ep11]= 3;\r\nP12 @Record { } .= 0;\r\nP12 [E12]= 2;\r\nP12 [Ep12]= 3;\r\nP13 @Record { } .= 0;\r\nP13 [E13]= 2;\r\nP13 [Ep13]= 3;\r\nP14 @Record { } .= 0;\r\nP14 [E14]= 2;\r\nP14 [Ep14]= 3;\r\nP15 @Record { } .= 0;\r\nP15 [E15]= 2;\r\nP15 [Ep15]= 3;\r\nP16 @Record { } .= 0;\r\nP16 [E16]= 2;\r\nP16 [Ep16]= 3;\r\nP17 @Record { } .= 0;\r\nP17 [E17]= 2;\r\nP17 [Ep17]= 3;\r\nP18 @Record { } .= 0;\r\nP18 [E18]= 2;\r\nP18 [Ep18]= 3;\r\nP19 @Record { } .= 0;\r\nP19 [E19]= 2;\r\nP19 [Ep19]= 3;\r\nP20 @Record { } .= 0;\r\nP20 [E20]= 2;\r\nP20 [Ep20]= 3;\r\nP21 @Record { } .= 0;\r\nP21 [E21]= 2;\r\nP21 [Ep21]= 3;\r\nP22 @Record { } .= 0;\r\nP22 [E22]= 2;\r\nP22 [Ep22]= 3;\r\nP23 @Record { } .= 0;\r\nP23 [E23]= 2;\r\nP23 [Ep23]= 3;\r\nP24 @Record { } .= 0;\r\nP24 [E24]= 2;\r\nP24 [Ep24]= 3;\r\nP25 @Record { } .= 0;\r\nP25 [E25]= 2;\r\nP25 [Ep25]= 3;\r\nP26 @Record { } .= 0;\r\nP26 [E26]= 2;\r\nP26 [Ep26]= 3;\r\nP27 @Record { } .= 0;\r\nP27 [E27]= 2;\r\nP27 [Ep27]= 3;\r\nP28 @Record { } .= 0;\r\nP28 [E28]= 2;\r\nP28 [Ep28]= 3;\r\nP29 @Record { } .= 0;\r\nP29 [E29]= 2;\r\nP29 [Ep29]= 3;\r\nP30 @Record { } .= 0;\r\nP30 [E30]= 2;\r\nP30 [Ep30]= 3;\r\nP31 @Record { } .= 0;\r\nP31 [E31]= 2;\r\nP31 [Ep31]= 3;\r\nP32 @Record { } .= 0;\r\nP32 [E32]= 2;\r\nP32 [Ep32]= 3;\r\nP33 @Record { } .= 0;\r\nP33 [E33]= 2;\r\nP33 [Ep33]= 3;\r\nP34 @Record { } .= 0;\r\nP34 [E34]= 2;\r\nP34 [Ep34]= 3;\r\nP35 @Record { } .= 0;\r\nP35 [E35]= 2;\r\nP35 [Ep35]= 3;\r\nP36 @Record { } .= 0;\r\nP36 [E36]= 2;\r\nP36 [Ep36]= 3;\r\nP37 @Record { } .= 0;\r\nP37 [E37]= 2;\r\nP37 [Ep37]= 3;\r\nP38 @Record { } .= 0;\r\nP38 [E38]= 2;\r\nP38 [Ep38]= 3;\r\nP39 @Record { } .= 0;\r\nP39 [E39]= 2;\r\nP39 [Ep39]= 3;\r\nP40 @Record { } .= 0;\r\nP40 [E40]= 2;\r\nP40 [Ep40]= 3;\r\nP41 @Record { } .= 0;\r\nP41 [E41]= 2;\r\nP41 [Ep41]= 3;\r\nP42 @Record { } .= 0;\r\nP42 [E42]= 2;\r\nP42 [Ep42]= 3;\r\nP43 @Record { } .= 0;\r\nP43 [E43]= 2;\r\nP43 [Ep43]= 3;\r\nP44 @Record { } .= 0;\r\nP44 [E44]= 2;\r\nP44 [Ep44]= 3;\r\nP45 @Record { } .= 0;\r\nP45 [E45]= 2;\r\nP45 [Ep45]= 3;\r\nP46 @Record { } .= 0;\r\nP46 [E46]= 2;\r\nP46 [Ep46]= 3;\r\nP47 @Record { } .= 0;\r\nP47 [E47]= 2;\r\nP47 [Ep47]= 3;\r\nP48 @Record { } .= 0;\r\nP48 [E48]= 2;\r\nP48 [Ep48]= 3;\r\nP49 @Record { } .= 0;\r\nP49 [E49]= 2;\r\nP49 [Ep49]= 3;\r\nP50 @Record { } .= 0;\r\nP50 [E50]= 2;\r\nP50 [Ep50]= 3;\r\nP51 @Record { } .= 0;\r\nP51 [E51]= 2;\r\nP51 [Ep51]= 3;\r\nP52 @Record { } .= 0;\r\nP52 [E52]= 2;\r\nP52 [Ep52]= 3;\n\r\nE0 @DSwitcher { trigger: t > 1.5, };\r\nE1 @DSwitcher { trigger: t > 1.5, };\r\nE2 @DSwitcher { trigger: t > 1.5, };\r\nE3 @DSwitcher { trigger: t > 1.5, };\r\nE4 @DSwitcher { trigger: t > 1.5, };\r\nE5 @DSwitcher { trigger: t > 1.5, };\r\nE6 @DSwitcher { trigger: t > 1.5, };\r\nE7 @DSwitcher { trigger: t > 1.5, };\r\nE8 @DSwitcher { trigger: t > 1.5, };\r\nE9 @DSwitcher { trigger: t > 1.5, };\r\nE10 @DSwitcher { trigger: t > 1.5, };\r\nE11 @DSwitcher { trigger: t > 1.5, };\r\nE12 @DSwitcher { trigger: t > 1.5, };\r\nE13 @DSwitcher { trigger: t > 1.5, };\r\nE14 @DSwitcher { trigger: t > 1.5, };\r\nE15 @DSwitcher { trigger: t > 1.5, };\r\nE16 @DSwitcher { trigger: t > 1.5, };\r\nE17 @DSwitcher { trigger: t > 1.5, };\r\nE18 @DSwitcher { trigger: t > 1.5, };\r\nE19 @DSwitcher { trigger: t > 1.5, };\r\nE20 @DSwitcher { trigger: t > 1.5, };\r\nE21 @DSwitcher { trigger: t > 1.5, };\r\nE22 @DSwitcher { trigger: t > 1.5, };\r\nE23 @DSwitcher { trigger: t > 1.5, };\r\nE24 @DSwitcher { trigger: t > 1.5, };\r\nE25 @DSwitcher { trigger: t > 1.5, };\r\nE26 @DSwitcher { trigger: t > 1.5, };\r\nE27 @DSwitcher { trigger: t > 1.5, };\r\nE28 @DSwitcher { trigger: t > 1.5, };\r\nE29 @DSwitcher { trigger: t > 1.5, };\r\nE30 @DSwitcher { trigger: t > 1.5, };\r\nE31 @DSwitcher { trigger: t > 1.5, };\r\nE32 @DSwitcher { trigger: t > 1.5, };\r\nE33 @DSwitcher { trigger: t > 1.5, };\r\nE34 @DSwitcher { trigger: t > 1.5, };\r\nE35 @DSwitcher { trigger: t > 1.5, };\r\nE36 @DSwitcher { trigger: t > 1.5, };\r\nE37 @DSwitcher { trigger: t > 1.5, };\r\nE38 @DSwitcher { trigger: t > 1.5, };\r\nE39 @DSwitcher { trigger: t > 1.5, };\r\nE40 @DSwitcher { trigger: t > 1.5, };\r\nE41 @DSwitcher { trigger: t > 1.5, };\r\nE42 @DSwitcher { trigger: t > 1.5, };\r\nE43 @DSwitcher { trigger: t > 1.5, };\r\nE44 @DSwitcher { trigger: t > 1.5, };\r\nE45 @DSwitcher { trigger: t > 1.5, };\r\nE46 @DSwitcher { trigger: t > 1.5, };\r\nE47 @DSwitcher { trigger: t > 1.5, };\r\nE48 @DSwitcher { trigger: t > 1.5, };\r\nE49 @DSwitcher { trigger: t > 1.5, };\r\nE50 @DSwitcher { trigger: t > 1.5, };\r\nE51 @DSwitcher { trigger: t > 1.5, };\r\nE52 @DSwitcher { trigger: t > 1.5, };\r\nEp0 @DSwitcher { trigger: t > 1.5, };\r\nEp1 @DSwitcher { trigger: t > 1.5, };\r\nEp2 @DSwitcher { trigger: t > 1.5, };\r\nEp3 @DSwitcher { trigger: t > 1.5, };\r\nEp4 @DSwitcher { trigger: t > 1.5, };\r\nEp5 @DSwitcher { trigger: t > 1.5, };\r\nEp6 @DSwitcher { trigger: t > 1.5, };\r\nEp7 @DSwitcher { trigger: t > 1.5, };\r\nEp8 @DSwitcher { trigger: t > 1.5, };\r\nEp9 @DSwitcher { trigger: t > 1.5, };\r\nEp10 @DSwitcher { trigger: t > 1.5, };\r\nEp11 @DSwitcher { trigger: t > 1.5, };\r\nEp12 @DSwitcher { trigger: t > 1.5, };\r\nEp13 @DSwitcher { trigger: t > 1.5, };\r\nEp14 @DSwitcher { trigger: t > 1.5, };\r\nEp15 @DSwitcher { trigger: t > 1.5, };\r\nEp16 @DSwitcher { trigger: t > 1.5, };\r\nEp17 @DSwitcher { trigger: t > 1.5, };\r\nEp18 @DSwitcher { trigger: t > 1.5, };\r\nEp19 @DSwitcher { trigger: t > 1.5, };\r\nEp20 @DSwitcher { trigger: t > 1.5, };\r\nEp21 @DSwitcher { trigger: t > 1.5, };\r\nEp22 @DSwitcher { trigger: t > 1.5, };\r\nEp23 @DSwitcher { trigger: t > 1.5, };\r\nEp24 @DSwitcher { trigger: t > 1.5, };\r\nEp25 @DSwitcher { trigger: t > 1.5, };\r\nEp26 @DSwitcher { trigger: t > 1.5, };\r\nEp27 @DSwitcher { trigger: t > 1.5, };\r\nEp28 @DSwitcher { trigger: t > 1.5, };\r\nEp29 @DSwitcher { trigger: t > 1.5, };\r\nEp30 @DSwitcher { trigger: t > 1.5, };\r\nEp31 @DSwitcher { trigger: t > 1.5, };\r\nEp32 @DSwitcher { trigger: t > 1.5, };\r\nEp33 @DSwitcher { trigger: t > 1.5, };\r\nEp34 @DSwitcher { trigger: t > 1.5, };\r\nEp35 @DSwitcher { trigger: t > 1.5, };\r\nEp36 @DSwitcher { trigger: t > 1.5, };\r\nEp37 @DSwitcher { trigger: t > 1.5, };\r\nEp38 @DSwitcher { trigger: t > 1.5, };\r\nEp39 @DSwitcher { trigger: t > 1.5, };\r\nEp40 @DSwitcher { trigger: t > 1.5, };\r\nEp41 @DSwitcher { trigger: t > 1.5, };\r\nEp42 @DSwitcher { trigger: t > 1.5, };\r\nEp43 @DSwitcher { trigger: t > 1.5, };\r\nEp44 @DSwitcher { trigger: t > 1.5, };\r\nEp45 @DSwitcher { trigger: t > 1.5, };\r\nEp46 @DSwitcher { trigger: t > 1.5, };\r\nEp47 @DSwitcher { trigger: t > 1.5, };\r\nEp48 @DSwitcher { trigger: t > 1.5, };\r\nEp49 @DSwitcher { trigger: t > 1.5, };\r\nEp50 @DSwitcher { trigger: t > 1.5, };\r\nEp51 @DSwitcher { trigger: t > 1.5, };\r\nEp52 @DSwitcher { trigger: t > 1.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A boundary species with an assignment rule with no math.\r\ncomponentTags:   AssignmentRule, Compartment, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, NoMathML, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the initial amount of a boundary species is 2, with an assignment rule to change it that doesn't have any mathML, leaving the value at 2.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> 2S2 | $0.1$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S1 | $$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = 2*S2, };\r\nJ0 := 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A boundary species with an initial assignment with no math.\r\ncomponentTags:   Compartment, InitialAssignment, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, NoMathML, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the initial amount of a boundary species is 2, with an initial assignment to change it that doesn't have any mathML, leaving the value at 2.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> 2S2 | $0.1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = 2*S2, };\r\nJ0 := 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Competing events with the same priority, jointly causing a parameter to monotonically increase, checking to make sure the two events are not exactly evenly distributed.  NOTE:  STOCHASTIC TEST. Your software may fail periodically; it is only supposed to succeed in the majority of cases.\r\ncomponentTags:   AssignmentRule, CSymbolTime, EventNoDelay, EventPriority, Parameter, RateRule\r\ntestTags:        EventIsNotPersistent, InitialValueReassigned, NonConstantParameter, RandomEventExecution\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis model contains two events with the same trigger, the same effective priority, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, at random, and increases the parameters Q or R, respectively.  A third parameter, S, is assigned the value of Q+R, meaning that it doesn't matter which one fires; S will increase monotonically.  A final parameter, 'error' checks to make sure neither Q nor R are chosen more frequently than the other--if the difference gets higher than 0.2, it triggers.  Note:  The 'errorLow' and 'errorHigh' parameters are a stochastic test, and may not always remain at '0' for all runs.  If your software fails, try running it again with a new random number seed, and it may succeed.  The values were chosen to be reasonable in the vast majority of cases, but still high enough to reveal problems in software that tends to pick both events either evenly or in an unbalanced manner.  This test is a repeat and synthesis of tests 952 and 962, with the additional wrinkle of the triggers being set via a variable under control of a rate rule.\r\n\r\nThe model contains:\r\n* 7 parameters (S, Q, R, reset, maxdiff, errorLow, errorHigh)\r\n\r\nThere are 5 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $reset >= 0.01$ | $1$ | false | $reset = 0$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $reset >= 0.01$ | $1$ | false | $reset = 0$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| maxcheck | $abs(Q - R) > maxdiff$ | (unset) | true | $maxdiff = abs(Q - R)$ |\r\n| error_check | $(time >= 99) && (maxdiff < 0.2)$ | (unset) | true | $errorLow = 1$ |\r\n| error_check2 | $maxdiff >= 4$ | (unset) | true | $errorHigh = 1$ |]\r\n\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | S | $Q + R$ |\r\n| Rate | reset | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter S | $Q + R$ | variable |\r\n| Initial value of parameter Q | $0$ | variable |\r\n| Initial value of parameter R | $0$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter maxdiff | $0$ | variable |\r\n| Initial value of parameter errorLow | $0$ | variable |\r\n| Initial value of parameter errorHigh | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nreset_proc @Process { actors:  = reset, };\r\nreset_proc := 1;\n\r\nS @Record { };\r\nS := Q + R;\r\nQ @Record { } .= 0;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 0;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= 0;\r\nreset [Rinc]= 0;\r\nmaxdiff @Record { } .= 0;\r\nmaxdiff [maxcheck]= abs(Q - R);\r\nerrorLow @Record { } .= 0;\r\nerrorLow [error_check]= 1;\r\nerrorHigh @Record { } .= 0;\r\nerrorHigh [error_check2]= 1;\n\r\nQinc @DSwitcher { trigger: reset >= 0.01, };\r\nRinc @DSwitcher { trigger: reset >= 0.01, };\r\nmaxcheck @DSwitcher { trigger: abs(Q - R) > maxdiff, };\r\nerror_check @DSwitcher { trigger: t >= 99 and maxdiff < 0.2, };\r\nerror_check2 @DSwitcher { trigger: maxdiff >= 4, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Competing events with the same priority, jointly causing a parameter to monotonically increase, checking to make sure the two events are not exactly evenly distributed.  NOTE:  STOCHASTIC TEST. Your software may fail periodically; it is only supposed to succeed in the majority of cases.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, RateRule, Species\r\ntestTags:        EventIsNotPersistent, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment, RandomEventExecution, VolumeConcentrationRates\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model contains two events with the same trigger, the same effective priority, both set 'persistent=false', and both of which disable the trigger of the other.  This means that every .01 seconds, one fires and the other does not, at random, and increases the stoichiometries Q or R, respectively.  A third parameter, S, is assigned the value of Q+R, meaning that it doesn't matter which one fires; S will increase monotonically.  A species S2 is controlled by a rate rule for its concentration based on Q-R, which should be close to zero for the duration of the simulation.  Its compartment is also under control of a rate rule, making the amount of S2 dependent on those two different rate rules.  Three other parameters (errorHigh, errorLow, and errorS2), check to make sure neither Q nor R are chosen more or less frequently than the other, and that the species S2 doesn't get too extreme (the reaction in which it appears should be balanced, on average).  Note:  The error parameters are a stochastic test, and may not always remain at '0' for all runs.  If your software fails, try running it again with a new random number seed, and it may succeed.  The values were chosen to be reasonable in the vast majority of cases, but still high enough to reveal problems in software that tends to pick both events either evenly or in an unbalanced manner.\r\n\r\nThe model contains:\r\n* 1 species (S2)\r\n* 9 parameters (S, Q, R, reset, maxdiff, errorLow, errorHigh, errorS2, S2_det)\r\n* 1 compartment (C1)\r\n\r\nThere are 6 events:\r\n\r\n[{width:40em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  |  *Persistent*  | *Event Assignments* |\r\n| Qinc | $reset >= 0.01$ | $1$ | false | $reset = 0$ |\r\n|  |  |  |  | $Q = Q + 0.01$ |\r\n| Rinc | $reset >= 0.01$ | $1$ | false | $reset = 0$ |\r\n|  |  |  |  | $R = R + 0.01$ |\r\n| maxcheck | $abs(Q - R) > maxdiff$ | (unset) | true | $maxdiff = abs(Q - R)$ |\r\n| error_check | $(time >= 99) && (maxdiff < 0.2)$ | (unset) | true | $errorLow = 1$ |\r\n| error_check2 | $maxdiff >= 4$ | (unset) | true | $errorHigh = 1$ |\r\n| error_check3 | $abs(S2) >= 250$ | (unset) | true | $errorS2 = 1$ |]\r\n\r\n\r\nThere are 4 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S2 | $Q - R$ |\r\n| Rate | C1 | $0.002$ |\r\n| Assignment | S | $Q + R$ |\r\n| Rate | reset | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S2 | $0$ | variable |\r\n| Initial value of parameter S | $Q + R$ | variable |\r\n| Initial value of parameter Q | $1$ | variable |\r\n| Initial value of parameter R | $1$ | variable |\r\n| Initial value of parameter reset | $0$ | variable |\r\n| Initial value of parameter maxdiff | $0$ | variable |\r\n| Initial value of parameter errorLow | $0$ | variable |\r\n| Initial value of parameter errorHigh | $0$ | variable |\r\n| Initial value of parameter errorS2 | $0$ | variable |\r\n| Initial value of parameter S2_det | $0$ | variable |\r\n| Initial volume of compartment 'C1' | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 1;\n\r\nS2 @Species { compartment: C1, } .= 0;\n\r\nS2_proc @Process { actors:  = S2, };\r\nS2_proc := Q - R;\r\nC1_proc @Process { actors:  = C1, };\r\nC1_proc := 0.002;\r\nreset_proc @Process { actors:  = reset, };\r\nreset_proc := 1;\n\r\nS @Record { };\r\nS := Q + R;\r\nQ @Record { } .= 1;\r\nQ [Qinc]= Q + 0.01;\r\nR @Record { } .= 1;\r\nR [Rinc]= R + 0.01;\r\nreset @Record { } .= 0;\r\nreset [Qinc]= 0;\r\nreset [Rinc]= 0;\r\nmaxdiff @Record { } .= 0;\r\nmaxdiff [maxcheck]= abs(Q - R);\r\nerrorLow @Record { } .= 0;\r\nerrorLow [error_check]= 1;\r\nerrorHigh @Record { } .= 0;\r\nerrorHigh [error_check2]= 1;\r\nerrorS2 @Record { } .= 0;\r\nerrorS2 [error_check3]= 1;\r\nS2_det @Record { } .= 0;\n\r\nQinc @DSwitcher { trigger: reset >= 0.01, };\r\nRinc @DSwitcher { trigger: reset >= 0.01, };\r\nmaxcheck @DSwitcher { trigger: abs(Q - R) > maxdiff, };\r\nerror_check @DSwitcher { trigger: t >= 99 and maxdiff < 0.2, };\r\nerror_check2 @DSwitcher { trigger: maxdiff >= 4, };\r\nerror_check3 @DSwitcher { trigger: abs(S2) >= 250, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species reference for a boundary species that has the same ID as a local parameter.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a local parameter has the same ID as a boundary species (but another species is present in the model as well).\r\n\r\nThe model contains:\r\n* 2 species (k0, S2)\r\n* 1 local parameter (J0.k0)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: k0 -> S2 | $1 / k0$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species k0 | $2$ | variable |\r\n| Initial amount of species S2 | $0$ | variable |\r\n| Initial value of local parameter 'J0.k0' | $3$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nk0 @Species { boundary: true, compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 0 / C;\n\r\nJ0 @Reaction { actors: k0 = S2, };\r\nJ0 := 1 / k0__J0_local;\n\r\nk0__J0_local @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors for substance-only species.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors are set for species set to be substance-only (hasOnlySubstanceUnits=true).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\r\nS2 @Species { compartment: C, isAmount: true, } .= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species conversion factor for substance-only species.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a species conversion factor is set for species set to be substance-only (hasOnlySubstanceUnits=true).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\r\nS2 @Species { compartment: C, isAmount: true, } .= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A model conversion factor for substance-only species.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model has a model conversion factor for species set to be substance-only (hasOnlySubstanceUnits=true).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (m_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial volume of compartment 'C' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\r\nS2 @Species { compartment: C, isAmount: true, } .= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors whose IDs are duplicated by local parameters.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors IDs are duplicated by local parameters.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 2 local parameters (J0.m_cf, J0.s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $m_cf + s1_cf$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial value of local parameter 'J0.m_cf' | $0.003$ | constant |\r\n| Initial value of local parameter 'J0.s1_cf' | $0.007$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := m_cf__J0_local + s1_cf__J0_local;\n\r\nm_cf__J0_local @Const { } = 0.003;\r\ns1_cf__J0_local @Const { } = 0.007;\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species conversion factor whose ID is duplicated by local parameters.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a species conversion factors ID is duplicated by a local parameter.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 2 local parameters (J0.m_cf, J0.s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $m_cf + s1_cf$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial value of local parameter 'J0.m_cf' | $0.003$ | constant |\r\n| Initial value of local parameter 'J0.s1_cf' | $0.007$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := m_cf__J0_local + s1_cf__J0_local;\n\r\nm_cf__J0_local @Const { } = 0.003;\r\ns1_cf__J0_local @Const { } = 0.007;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A model conversion factor whose ID is duplicated by a local parameter.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a model conversion factor ID is duplicated by a local parameter.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (m_cf)\r\n* 2 local parameters (J0.m_cf, J0.s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $m_cf + s1_cf$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of local parameter 'J0.m_cf' | $0.003$ | constant |\r\n| Initial value of local parameter 'J0.s1_cf' | $0.007$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := m_cf__J0_local + s1_cf__J0_local;\n\r\nm_cf__J0_local @Const { } = 0.003;\r\ns1_cf__J0_local @Const { } = 0.007;\r\nm_cf @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event with avogadro in the trigger.\r\ncomponentTags:   CSymbolAvogadro, CSymbolTime, EventNoDelay, Parameter\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the avogadro csymbol is used in an event trigger.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| _E0 | $time > (avogadro / 6.022e23)$ | $p1 = 3$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= 1;\r\np1 [_E0]= 3;\n\r\n_E0 @DSwitcher { trigger: t > 6.02214076e+23 / (6.022e+23), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event with avogadro in the priority.\r\ncomponentTags:   CSymbolAvogadro, CSymbolTime, EventNoDelay, EventPriority, Parameter\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the avogadro csymbol is used in an event priority, determining which of two simultaneous events fires first.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time >= 2.5$ | $1$ | $p1 = 3$ |\r\n| E1 | $time >= 2.5$ | $avogadro / 6.022e23$ | $p1 = 5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= 1;\r\np1 [E0]= 3;\r\np1 [E1]= 5;\n\r\nE0 @DSwitcher { trigger: t >= 2.5, };\r\nE1 @DSwitcher { trigger: t >= 2.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event with avogadro in the trigger.\r\ncomponentTags:   CSymbolAvogadro, EventNoDelay, Parameter\r\ntestTags:        EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the avogadro csymbol is used in an event trigger, which evaluates to 'true' at t0, and firing only because it's set initialValue=false.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $avogadro > 6.022e23$ | false | $p1 = 5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= 1;\r\np1 [E0]= 5;\n\r\nE0 @DSwitcher { trigger: 6.02214076e+23 > (6.022e+23), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event with avogadro in an event assignment.\r\ncomponentTags:   CSymbolAvogadro, CSymbolTime, EventNoDelay, Parameter\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the avogadro csymbol is used as the assignment value in an event.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time > 1.5$ | $p1 = avogadro$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1 @Record { } .= 1;\r\np1 [E0]= 6.02214076e+23;\n\r\nE0 @DSwitcher { trigger: t > 1.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A rate rule that uses avogadro.\r\ncomponentTags:   CSymbolAvogadro, Parameter, RateRule\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nIn this model, the avogadro csymbol is used in a rate rule.\r\n\r\nThe model contains:\r\n* 1 parameter (p1)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | p1 | $avogadro / 1e23$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter p1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\np1_proc @Process { actors:  = p1, };\r\np1_proc := 6.02214076e+23 / (1e+23);\n\r\np1 @Record { } .= 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors for species only affected by rate rules.\r\ncomponentTags:   Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors are set for species, but those species only change due to rate rules, which means the conversion factors are not used (as they only affect reactions).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $-0.01$ |\r\n| Rate | S2 | $0.01$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := (-0.01);\r\nS2_proc @Process { actors:  = S2, };\r\nS2_proc := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species conversion factor for species only affected by rate rules.\r\ncomponentTags:   Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a species conversion factor is set for species, but those species only change due to rate rules, which means the conversion factor is not used (as they only affect reactions).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 1 compartment (C)\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $-0.01$ |\r\n| Rate | S2 | $0.01$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := (-0.01);\r\nS2_proc @Process { actors:  = S2, };\r\nS2_proc := 0.01;\n\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model conversion factor for species only affected by rate rules.\r\ncomponentTags:   Compartment, Parameter, RateRule, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a model conversion factor is set for species, but those species only change due to rate rules, which means the conversion factor is not used (as they only affect reactions).\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere are 2 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $-0.01$ |\r\n| Rate | S2 | $0.01$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := (-0.01);\r\nS2_proc @Process { actors:  = S2, };\r\nS2_proc := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors for event-modified species.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors are set for species reset partway through the simulation by an event.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time >= 4.5$ | $S2 = 3$ |\r\n|  |  | $S1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS1 [E0]= 2;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS2 [E0]= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\nE0 @DSwitcher { trigger: t >= 4.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Species conversion factor for event-modified species.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, species conversion factor set for species reset partway through the simulation by an event.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time >= 4.5$ | $S2 = 3$ |\r\n|  |  | $S1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS1 [E0]= 2;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS2 [E0]= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\ns1_cf @Const { } = 5;\n\r\nE0 @DSwitcher { trigger: t >= 4.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model conversion factors for event-modified species.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model conversion factor set for species reset partway through the simulation by an event.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (m_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time >= 4.5$ | $S2 = 3$ |\r\n|  |  | $S1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS1 [E0]= 2;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS2 [E0]= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\n\r\nE0 @DSwitcher { trigger: t >= 4.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors for simultaneous events.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors are set for species reset partway through the simulation by two simultaneous events, whose priorities involve the species.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 3.5$ | $S1$ | $S2 = 3$ |\r\n|  |  |  | $S1 = 1$ |\r\n| E1 | $time > 3.5$ | $1.82$ | $S2 = 4$ |\r\n|  |  |  | $S1 = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS1 [E0]= 1;\r\nS1 [E1]= 4;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS2 [E0]= 3;\r\nS2 [E1]= 4;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\nE0 @DSwitcher { trigger: t > 3.5, };\r\nE1 @DSwitcher { trigger: t > 3.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species conversion factor for simultaneous events.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a species conversion factor is set for species reset partway through the simulation by two simultaneous events, whose priorities involve the species.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 3.5$ | $S1$ | $S2 = 3$ |\r\n|  |  |  | $S1 = 1$ |\r\n| E1 | $time > 3.5$ | $1.82$ | $S2 = 4$ |\r\n|  |  |  | $S1 = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS1 [E0]= 1;\r\nS1 [E1]= 4;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS2 [E0]= 3;\r\nS2 [E1]= 4;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\ns1_cf @Const { } = 5;\n\r\nE0 @DSwitcher { trigger: t > 3.5, };\r\nE1 @DSwitcher { trigger: t > 3.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors for simultaneous events.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors are set for species reset partway through the simulation by two simultaneous events, whose priorities involve the species.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 3.5$ | $S2$ | $S2 = 3$ |\r\n|  |  |  | $S1 = 1$ |\r\n| E1 | $time > 3.5$ | $3.013$ | $S2 = 4$ |\r\n|  |  |  | $S1 = 4$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS1 [E0]= 1;\r\nS1 [E1]= 4;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS2 [E0]= 3;\r\nS2 [E1]= 4;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\nE0 @DSwitcher { trigger: t > 3.5, };\r\nE1 @DSwitcher { trigger: t > 3.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors for events that fire at t0.\r\ncomponentTags:   Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, EventT0Firing\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors are set for species reset at t0 by an event.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $S1 > 0.9$ | false | $S2 = 3$ |\r\n|  |  |  | $S1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $0$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\r\nS1 [E0]= 2;\r\nS2 @Species { compartment: C, } .= 0 / C;\r\nS2 [E0]= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\nE0 @DSwitcher { trigger: S1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species conversion factor for events that fire at t0.\r\ncomponentTags:   Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, EventT0Firing\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a species conversion factor is set for species reset at t0 by an event.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $S1 > 0.9$ | false | $S2 = 3$ |\r\n|  |  |  | $S1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $0$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\r\nS1 [E0]= 2;\r\nS2 @Species { compartment: C, } .= 0 / C;\r\nS2 [E0]= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\ns1_cf @Const { } = 5;\n\r\nE0 @DSwitcher { trigger: S1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model conversion factor for events that fire at t0.\r\ncomponentTags:   Compartment, EventNoDelay, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, EventT0Firing\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a model conversion factor is set for species reset at t0 by an event.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (m_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\n\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $S1 > 0.9$ | false | $S2 = 3$ |\r\n|  |  |  | $S1 = 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $1$ | variable |\r\n| Initial amount of species S2 | $0$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1 / C;\r\nS1 [E0]= 2;\r\nS2 @Species { compartment: C, } .= 0 / C;\r\nS2 [E0]= 3;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\n\r\nE0 @DSwitcher { trigger: S1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A function definition in an event that fires at t0.\r\ncomponentTags:   EventNoDelay, FunctionDefinition, Parameter\r\ntestTags:        EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the event assignment of an event that fires at t0 uses a function defintion.\r\n\r\nThe model contains:\r\n* 1 parameter (P1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $P1 > 0.9$ | false | $P1 = getThree()$ |]\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | getThree |  | $3$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\ngetThree #defineFunction { arguments: [], math: 3, };\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 1;\r\nP1 [E0]= getThree();\n\r\nE0 @DSwitcher { trigger: P1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A function definition in an event that fires at t0.\r\ncomponentTags:   EventNoDelay, FunctionDefinition, Parameter\r\ntestTags:        EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the trigger of an event that fires at t0 uses a function defintion.\r\n\r\nThe model contains:\r\n* 1 parameter (P1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $P1 > getPointNine()$ | false | $P1 = 3$ |]\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | getPointNine |  | $0.9$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\ngetPointNine #defineFunction { arguments: [], math: 0.9, };\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 1;\r\nP1 [E0]= 3;\n\r\nE0 @DSwitcher { trigger: P1 > getPointNine(), };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A function definition in an event that fires at t0.\r\ncomponentTags:   EventNoDelay, FunctionDefinition, Parameter\r\ntestTags:        EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the assignment of an event that fires at t0 uses a function defintion.\r\n\r\nThe model contains:\r\n* 1 parameter (P1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $P1 > 0.9$ | false | $P1 = addTo(P1, 2)$ |]\r\n\r\nThe model contains the following function definition:\r\n\r\n[{width:30em,margin: 1em auto}|  *Id*  |  *Arguments*  |  *Formula*  |\r\n | addTo | x, y | $x + y$ |\r\n]\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\naddTo #defineFunction { arguments: [x, y], math: x + y, };\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 1;\r\nP1 [E0]= addTo(P1, 2);\n\r\nE0 @DSwitcher { trigger: P1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event that fires at t0 that uses a parameter in its own assignment.\r\ncomponentTags:   EventNoDelay, Parameter\r\ntestTags:        EventT0Firing, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, an event that fires at t0 uses a parameter in its own assignment.\r\n\r\nThe model contains:\r\n* 1 parameter (P1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $P1 > 0.9$ | false | $P1 = P1 + 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $1$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 1;\r\nP1 [E0]= P1 + 2;\n\r\nE0 @DSwitcher { trigger: P1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event that fires at t0 that uses a parameter in its own assignment.\r\ncomponentTags:   EventNoDelay, InitialAssignment, Parameter\r\ntestTags:        EventT0Firing, InitialValueReassigned, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, an event that fires at t0 uses a parameter in its own assignment.  Also, its 'value' attribute would not trigger the event, but its initial assignment will.\r\n\r\nThe model contains:\r\n* 1 parameter (P1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $P1 > 0.9$ | false | $P1 = P1 + 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $2$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 2;\r\nP1 [E0]= P1 + 2;\n\r\nE0 @DSwitcher { trigger: P1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event that fires at t0 that uses a parameter in its own assignment.\r\ncomponentTags:   EventNoDelay, InitialAssignment, Parameter\r\ntestTags:        EventT0Firing, InitialValueReassigned, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, an event that fires at t0 uses a parameter in its own assignment.  Also, its 'value' attribute and its initial assignment will trigger the event, but both are different values.\r\n\r\nThe model contains:\r\n* 1 parameter (P1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $P1 > 0.9$ | false | $P1 = P1 + 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $2$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 2;\r\nP1 [E0]= P1 + 2;\n\r\nE0 @DSwitcher { trigger: P1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An event that fires at t0 that uses a parameter in its own assignment.\r\ncomponentTags:   EventNoDelay, InitialAssignment, Parameter\r\ntestTags:        EventT0Firing, InitialValueReassigned, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, an event that would fire at t0, and use a parameter in its own assignment.  However, though its 'value' attribute would trigger the event, its initial assignment will not, meaning the event should not be triggered.\r\n\r\nThe model contains:\r\n* 1 parameter (P1)\r\n\r\nThere is one event:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *initialValue*  | *Event Assignments* |\r\n| E0 | $P1 > 0.9$ | false | $P1 = P1 + 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter P1 | $0$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nP1 @Record { } .= 0;\r\nP1 [E0]= P1 + 2;\n\r\nE0 @DSwitcher { trigger: P1 > 0.9, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two simultaneous events whose priorities involve a substance-only species.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, RateRule, Species\r\ntestTags:        Amount, BoundaryCondition, HasOnlySubstanceUnits, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two simultaneous events have similar priorities, with one being greater than the other because of the actual value of the substance-only speces.  If misinterpreted, the two events will fire in the wrong order..\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time >= 2.5$ | $S1$ | $S1 = 5$ |\r\n| E1 | $time >= 2.5$ | $7.4$ | $S1 = 10$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | S1 | $-1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $10$ | variable |\r\n| Initial volume of compartment 'C' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 10;\r\nS1 [E0]= 5;\r\nS1 [E1]= 10;\n\r\nS1_proc @Process { actors:  = S1, };\r\nS1_proc := (-1);\n\r\nE0 @DSwitcher { trigger: t >= 2.5, };\r\nE1 @DSwitcher { trigger: t >= 2.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Two simultaneous events with a priority with the same ID as a local parameter.\r\ncomponentTags:   CSymbolTime, Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, LocalParameters, NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, the two simultaneous events fire in one order because of the priorities, but would fire in the wrong order if a local parameter was confused for the global parameter.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (k1)\r\n* 1 local parameter (J0.k1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $k1$ |]\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $time > 2.5$ | $k1$ | $k1 = 5$ |\r\n| E1 | $time > 2.5$ | $2.5$ | $k1 = 10$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial value of parameter k1 | $2$ | variable |\r\n| Initial value of local parameter 'J0.k1' | $3$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := k1__J0_local;\n\r\nk1 @Record { } .= 2;\r\nk1 [E0]= 5;\r\nk1 [E1]= 10;\n\r\nk1__J0_local @Const { } = 3;\n\r\nE0 @DSwitcher { trigger: t > 2.5, };\r\nE1 @DSwitcher { trigger: t > 2.5, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors affecting a reaction with boundary conditions.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors affect a reaction with boundary species.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S3 + S1 -> S2 + S4 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\nThe conversion factor for the species 'S3' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial amount of species S3 | $2$ | variable |\r\n| Initial amount of species S4 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS3 @Species { boundary: true, compartment: C, } .= 2 / C;\r\nS4 @Species { boundary: true, compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S3 + S1 = S2 + S4, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species conversion factor affecting a reaction with boundary conditions.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a species conversion factor affects a reaction with boundary species.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 1 parameter (s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S3 + S1 -> S2 + S4 | $0.01$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\nThe conversion factor for the species 'S3' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial amount of species S3 | $2$ | variable |\r\n| Initial amount of species S4 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS3 @Species { boundary: true, compartment: C, } .= 2 / C;\r\nS4 @Species { boundary: true, compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S3 + S1 = S2 + S4, };\r\nJ0 := 0.01;\n\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model conversion factor affecting a reaction with boundary conditions.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, ConversionFactors\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a model conversion factor affects a reaction with boundary species.\r\n\r\nThe model contains:\r\n* 4 species (S1, S2, S3, S4)\r\n* 1 parameter (m_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S3 + S1 -> S2 + S4 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial amount of species S3 | $2$ | variable |\r\n| Initial amount of species S4 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\r\nS3 @Species { boundary: true, compartment: C, } .= 2 / C;\r\nS4 @Species { boundary: true, compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S3 + S1 = S2 + S4, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors affecting a reaction with local parameters.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors affect a reaction with local parameters that shadow the conversion factor IDs.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 2 local parameters (J0.m_cf, J0.s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $m_cf * s1_cf * 0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial value of local parameter 'J0.m_cf' | $1$ | constant |\r\n| Initial value of local parameter 'J0.s1_cf' | $1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := m_cf__J0_local * s1_cf__J0_local * 0.01;\n\r\nm_cf__J0_local @Const { } = 1;\r\ns1_cf__J0_local @Const { } = 1;\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species conversion factor affecting a reaction with local parameters.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a species conversion factor affects a reaction with local parameters that shadow the conversion factor ID.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 2 local parameters (J0.m_cf, J0.s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $m_cf * s1_cf * 0.01$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $5$ | constant |\r\n| Initial value of local parameter 'J0.m_cf' | $1$ | constant |\r\n| Initial value of local parameter 'J0.s1_cf' | $1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := m_cf__J0_local * s1_cf__J0_local * 0.01;\n\r\nm_cf__J0_local @Const { } = 1;\r\ns1_cf__J0_local @Const { } = 1;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model conversion factor affecting a reaction with local parameters.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a model conversion factor affects a reaction with local parameters that shadow the conversion factor ID.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (m_cf)\r\n* 2 local parameters (J0.m_cf, J0.s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $m_cf * s1_cf * 0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $3$ | constant |\r\n| Initial value of local parameter 'J0.m_cf' | $1$ | constant |\r\n| Initial value of local parameter 'J0.s1_cf' | $1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := m_cf__J0_local * s1_cf__J0_local * 0.01;\n\r\nm_cf__J0_local @Const { } = 1;\r\ns1_cf__J0_local @Const { } = 1;\r\nm_cf @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A local parameter that shadows a boundary species.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a local parameter shadows a boundary species in that reaction.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 local parameter (J0.S1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of local parameter 'J0.S1' | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { boundary: true, compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := S1__J0_local;\n\r\nS1__J0_local @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A reaction with a local parameter named 'avogadro'.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a local parameter is given the id 'avogadro', which the kinetic law references.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 local parameter (J0.avogadro)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $avogadro$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial value of local parameter 'J0.avogadro' | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := avogadro__J0_local;\n\r\navogadro__J0_local @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A parameter with the id 'avogadro'\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a parameter named 'avogadro' is used in a kinetic law.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (avogadro)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $avogadro$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial value of parameter avogadro | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := avogadro;\n\r\navogadro @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A reaction with a local parameter named 'avogadro'.\r\ncomponentTags:   CSymbolAvogadro, Compartment, Reaction, Species\r\ntestTags:        Amount, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a local parameter is given the id 'avogadro', and the kinetic law references both it and the avogadro csymbol.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 local parameter (J0.avogadro)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $avogadro / avogadro$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial value of local parameter 'J0.avogadro' | $1e+24$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := 6.02214076e+23 / avogadro__J0_local;\n\r\navogadro__J0_local @Const { } = 1e+24;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A parameter named 'avogadro' as well as the csymbol avogadro.\r\ncomponentTags:   CSymbolAvogadro, Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a parameter is given the id 'avogadro', and the kinetic law references both it and the avogadro csymbol.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (avogadro)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $avogadro / avogadro$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial value of parameter avogadro | $1e+24$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := 6.02214076e+23 / avogadro;\n\r\navogadro @Const { } = 1e+24;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A local parameter shadowing a species reference in an event priority.\r\ncomponentTags:   Compartment, EventNoDelay, EventPriority, Parameter, Reaction, Species\r\ntestTags:        Amount, HasOnlySubstanceUnits, LocalParameters, NonConstantParameter, NonUnityCompartment, NonUnityStoichiometry, SpeciesReferenceInMath\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a local parameter shadows a species reference.  That ID is used in an event priority, and refers to the species reference.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (k0)\r\n* 1 local parameter (J1.S1_stoich)\r\n* 1 compartment (C)\r\n* 1 species reference (S1_stoich)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: 2S1 -> | $0.01$ |\r\n| J1: -> S2 | $S1_stoich$ |]\r\n\r\n\r\nThere are 2 events:\r\n\r\n[{width:35em,margin: 1em auto}|  *Event*  |  *Trigger*  |  *Priority*  | *Event Assignments* |\r\n| E0 | $S1 < 1.885$ | $1$ | $k0 = 4$ |\r\n| E1 | $S1 < 1.885$ | $S1_stoich$ | $k0 = 6$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter k0 | $0$ | variable |\r\n| Initial value of local parameter 'J1.S1_stoich' | $0.01$ | constant |\r\n| Initial volume of compartment 'C' | $2$ | constant |\r\n| Initial value of species reference 'S1_stoich' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 2;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\r\nS2 @Species { compartment: C, isAmount: true, } .= 3;\n\r\nJ0 @Reaction { actors: 2*S1 = , };\r\nJ0 := 0.01;\r\nJ1 @Reaction { actors:  = S2, };\r\nJ1 := S1_stoich__J1_local;\n\r\nk0 @Record { } .= 0;\r\nk0 [E0]= 4;\r\nk0 [E1]= 6;\n\r\nS1_stoich__J1_local @Const { } = 0.01;\n\r\nE0 @DSwitcher { trigger: S1 < 1.885, };\r\nE1 @DSwitcher { trigger: S1 < 1.885, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model and species conversion factors set with avogadro.\r\ncomponentTags:   CSymbolAvogadro, Compartment, InitialAssignment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, model and species conversion factors are set via an initial assignment with the avogadro csymbol.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 parameters (m_cf, s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $avogadro / 1e24$ | constant |\r\n| Initial value of parameter s1_cf | $avogadro / 1.5e24$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Species conversion factor set with avogadro.\r\ncomponentTags:   CSymbolAvogadro, Compartment, InitialAssignment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nREVOLUTION!!!!\r\n \r\nIn this model, a species conversion factor is set via an initial assignment with the avogadro csymbol.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (s1_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the species 'S1' is 's1_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter s1_cf | $avogadro / 1.5e24$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\ns1_cf @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Model conversion factor set with avogadro.\r\ncomponentTags:   CSymbolAvogadro, Compartment, InitialAssignment, Parameter, Reaction, Species\r\ntestTags:        Amount, ConversionFactors, InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a model conversion factor is set via an initial assignment with the avogadro csymbol.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 1 parameter (m_cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: S1 -> S2 | $0.01$ |]\r\n\r\nThe conversion factor for the model is 'm_cf'\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of parameter m_cf | $avogadro / 1e24$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nThe species' initial quantities are given in terms of substance units to\r\nmake it easier to use the model in a discrete stochastic simulator, but\r\ntheir symbols represent their values in concentration units where they\r\nappear in expressions.\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 3 / C;\n\r\nJ0 @Reaction { actors: S1 = S2, };\r\nJ0 := 0.01;\n\r\nm_cf @Const { } = 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A hierarchical model with a species modified by a conversion factor.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species, comp:ExternalModelDefinition, comp:ReplacedElement, comp:SBaseRef, comp:Submodel\r\ntestTags:        Amount, comp:ConversionFactor\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Numeric\r\npackagesPresent: comp\r\n\r\n The species in the replaced submodel must be converted by the conversion factor, separated by a level of submodel indirection, and in an external model.  The species and compartment are replaced in the top-level model.  An extension of test 1477, which doesn't have the conversion factor for the species.\r\n\r\nThe 'flattened' version of this hierarchical model contains:\r\n* 1 species (s1)\r\n* 1 parameter (cf)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| sub2__sub1__J0: -> s1 | $10 / (s1 / cf)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species s1 | $2$ | variable |\r\n| Initial value of parameter cf | $10$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\ns1 @Species { compartment: C, } .= 2;\n\r\ncf @Const { } = 10;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species concentration and its compartment assigned to by the same event.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, EventNoDelay, Parameter, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A species in a non-unity compartment is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is used in all situations, including the event assignment.  However, another event assignment in the same event is to the volume of that species' compartment.  Both assignments are made based on the current state of the model, and *not* of of the state of the model after any one of the assignments.  As a result, the assignment to S1 should set the amount of S1 to 0.1.  The simultaneous assignment of 0.2 to the compartment means that the concentration of S1 ends up being 0.5 (0.1/0.2).  This is counter-intuitive, since the concentration of S1 was just assigned to be 0.2!  But it is a consequence of S1's concentration being derived instead of atomic.\r\n\r\nThis test is a simpler variant of 01506, when it was realized some of the subtleties of that test were complicated by the rate rules.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time >= 0.45$ | $S1 = 0.2$ |\r\n|  |  | $C1 = 0.2$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $2$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\r\nC1 [E0]= 0.2;\n\r\nS1 @Species { boundary: true, compartment: C1, } .= 2;\r\nS1 [E0]= 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\nE0 @DSwitcher { trigger: t >= 0.45, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A species concentration and its compartment assigned to by the same event.\r\ncomponentTags:   AssignmentRule, CSymbolTime, Compartment, EventNoDelay, Parameter, Species\r\ntestTags:        Amount, BoundaryCondition, InitialValueReassigned, NonConstantCompartment, NonConstantParameter, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n This model is a duplicate of 01779, with the event assignments reversed.  This should make no difference in the results.\r\n\r\n To recap model 1779: a species in a non-unity compartment is set 'hasOnlySubstanceUnits=false', meaning that the species concentration is used in all situations, including the event assignment.  However, another event assignment in the same event is to the volume of that species' compartment.  Both assignments are made based on the current state of the model, and *not* of of the state of the model after any one of the assignments.  As a result, the assignment to S1 should set the amount of S1 to 0.1.  The simultaneous assignment of 0.2 to the compartment means that the concentration of S1 ends up being 0.5 (0.1/0.2).  This is counter-intuitive, since the concentration of S1 was just assigned to be 0.2!  But it is a consequence of S1's concentration being derived instead of atomic.\r\n\r\n This test is a simpler variant of 01506, when it was realized some of the subtleties of that test were complicated by the rate rules.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 parameter (x)\r\n* 1 compartment (C1)\r\n\r\nThere is one event:\r\n\r\n[{width:30em,margin: 1em auto}|  *Event*  |  *Trigger*  | *Event Assignments* |\r\n| E0 | $time >= 0.45$ | $C1 = 0.2$ |\r\n|  |  | $S1 = 0.2$ |]\r\n\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $2$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial volume of compartment 'C1' | $0.5$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC1 @Compartment { } .= 0.5;\r\nC1 [E0]= 0.2;\n\r\nS1 @Species { boundary: true, compartment: C1, } .= 2;\r\nS1 [E0]= 0.2;\n\r\nx @Record { };\r\nx := S1;\n\r\nE0 @DSwitcher { trigger: t >= 0.45, };\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An initial assignment with an nary relational element.\r\ncomponentTags:   InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as less than.  This model checks to make sure interpreters notice the third argument, which changes the result of the 'piecewise' test.  This test is based on test 01209, except that it will fail if the interpreter mistakenly checks only the first and last arguments of the 'lt' function.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $piecewise(1, 1 < 3 < 2, 3)$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nx @Record { } .= ((1 < 3) ? 1 : 3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        An assignment rule with an nary relational element.\r\ncomponentTags:   AssignmentRule, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as greater than.  This model checks to make sure interpreters notice the third argument, which changes the result of the 'piecewise' test.  This test is based on test 01210, with the difference that it will fail if the interpreter mistakenly checks only the first and last arguments of the 'gt' function.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | x | $piecewise(1, 2 > 0 > 1, 3)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $piecewise(1, 2 > 0 > 1, 3)$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx @Record { };\r\nx := ((2 > 0) ? 1 : 3);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A rate rule with an nary relational element.\r\ncomponentTags:   Parameter, RateRule\r\ntestTags:        NonConstantParameter\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In MathML, it is legal to have 3+ arguments to relational elements such as greater than.  This model checks to make sure interpreters notice the third argument, which changes the rate rule from 1 to 0.  This test is based on test 01215, with the difference that it will fail if the interpreter mistakenly checks only the first and last arguments of the 'gt' function.\r\n\r\nThe model contains:\r\n* 1 parameter (x)\r\n\r\nThere is one rule:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Rate | x | $piecewise(1, 2 > 0 > 1, 0)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter x | $3$ | variable |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nx_proc @Process { actors:  = x, };\r\nx_proc := ((2 > 0) ? 1 : 0);\n\r\nx @Record { } .= 3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Test that L1 and L2 reactions default to fast=false.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, DefaultValue\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5\r\ngeneratedBy:     Numeric\r\npackagesPresent: \r\n\r\nIn this very simple model, a reaction is present that, if it was set 'fast=true', would immediately go to 1.0, but goes there asymptotically instead.  This tests to ensure that in L2 and L1 model reactions with no explicit 'fast' flag, the default value of 'false' is used.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1 * (1 - S1)$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $0$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 0;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := 1 * (1 - S1);\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Default values for species boundaryCondition\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, BoundaryCondition, DefaultValue\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In SBML L1 and L2, the value for a species 'boundaryCondition' attribute defaults to 'false'.  This model tests that this value is correctly assumed, in a model where S1 has no 'boundaryCondition' attribute, S2 has it set to 'true', and S3 has it set to 'false'.  S1 should follow S3, and not S2.\r\n \r\nThe model contains:\r\n* 3 species (S1, S2, S3)\r\n* 1 compartment (C)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1$ |\r\n| J1: -> S2 | $1$ |\r\n| J2: -> S3 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $2$ | variable |\r\n| Initial concentration of species S2 | $2$ | variable |\r\n| Initial concentration of species S3 | $2$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 2;\r\nS2 @Species { boundary: true, compartment: C, } .= 2;\r\nS3 @Species { compartment: C, } .= 2;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := 1;\r\nJ1 @Reaction { actors:  = S2, };\r\nJ1 := 1;\r\nJ2 @Reaction { actors:  = S3, };\r\nJ2 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Default values for species boundaryCondition\r\ncomponentTags:   AssignmentRule, Compartment, Parameter, Species\r\ntestTags:        Amount, DefaultValue, HasOnlySubstanceUnits, InitialValueReassigned, NonConstantParameter, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In SBML L1 and L2, the value for a species 'hasOnlySubstanceUnits' attribute defaults to 'false'.  This model tests that this value is correctly assumed, in a model where S1 has no 'hasOnlySubstanceUnits' attribute, S2 has it set to 'false', and S3 has it set to 'true'.  S1 should follow S2, and not S3.\r\n\r\nThe model contains:\r\n* 3 species (S1, S2, S3)\r\n* 3 parameters (x, y, z)\r\n* 1 compartment (C)\r\n\r\nThere are 3 rules:\r\n\r\n[{width:30em,margin: 1em auto}|  *Type*  |  *Variable*  |  *Formula*  |\r\n| Assignment | z | $S3$ |\r\n| Assignment | y | $S2$ |\r\n| Assignment | x | $S1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $2$ | variable |\r\n| Initial amount of species S3 | $2$ | variable |\r\n| Initial value of parameter x | $S1$ | variable |\r\n| Initial value of parameter y | $S2$ | variable |\r\n| Initial value of parameter z | $S3$ | variable |\r\n| Initial volume of compartment 'C' | $3$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 3;\n\r\nS1 @Species { compartment: C, } .= 2 / C;\r\nS2 @Species { compartment: C, } .= 2 / C;\r\nS3 @Species { compartment: C, isAmount: true, } .= 2;\n\r\nx @Record { };\r\nx := S1;\r\ny @Record { };\r\ny := S2;\r\nz @Record { };\r\nz := S3;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Default values for species boundaryCondition\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, DefaultValue, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In SBML L2, the value for a speciesReference 'stoichiometry' attribute defaults to '1'.  This model tests that this value is correctly assumed, in a model where the first speciesReference has no 'stoichiometry' attribute, the second has it set to '2', and the third has it set to '1'.  The first should follow the third.\r\n\r\nThe model contains:\r\n* 3 species (S1, S2, S3)\r\n* 1 compartment (C)\r\n\r\nThere are 3 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J0: -> S1 | $1$ |\r\n| J1: -> 2S2 | $1$ |\r\n| J2: -> S3 | $1$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial concentration of species S2 | $1$ | variable |\r\n| Initial concentration of species S3 | $1$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, } .= 1;\r\nS2 @Species { compartment: C, } .= 1;\r\nS3 @Species { compartment: C, } .= 1;\n\r\nJ0 @Reaction { actors:  = S1, };\r\nJ0 := 1;\r\nJ1 @Reaction { actors:  = 2*S2, };\r\nJ1 := 1;\r\nJ2 @Reaction { actors:  = S3, };\r\nJ2 := 1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A local parameter shadowing its own reaction's ID.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, HasOnlySubstanceUnits, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a local parameter shadows the ID of the reaction it is in.  Its kinetic law, therefore, is actually OK and not a circular reference.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 local parameter (J1.J1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $J1 * 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial value of local parameter 'J1.J1' | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := J1__J1_local * 2;\n\r\nJ1__J1_local @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A local parameter shadowing a species reference from its own reaction.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, HasOnlySubstanceUnits, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, a local parameter shadows the ID of a species reference from the reaction it is in.  This is valid even in SBML L2, where you cannot reference a species reference ID anywhere... because it's not being referenced.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 local parameter (J1.S1_stoich)\r\n* 1 compartment (C)\r\n* 1 species reference (S1_stoich)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: -> S1 | $S1_stoich * 2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial value of local parameter 'J1.S1_stoich' | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial value of species reference 'S1_stoich' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\n\r\nJ1 @Reaction { actors:  = S1, };\r\nJ1 := S1_stoich__J1_local * 2;\n\r\nS1_stoich__J1_local @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A local parameter shadowing two species references from its own reaction.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, HasOnlySubstanceUnits, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, two local parameters shadow the ID of species references from the reaction they are in.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 2 local parameters (J1.S1_stoich, J1.S2_stoich)\r\n* 1 compartment (C)\r\n* 2 species references (S1_stoich, S2_stoich)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: S1 -> S2 | $S1_stoich * S2_stoich * 20$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of local parameter 'J1.S1_stoich' | $0.1$ | constant |\r\n| Initial value of local parameter 'J1.S2_stoich' | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial value of species reference 'S1_stoich' | $1$ | constant |\r\n| Initial value of species reference 'S2_stoich' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\r\nS2 @Species { compartment: C, isAmount: true, } .= 3;\n\r\nJ1 @Reaction { actors: S1 = S2, };\r\nJ1 := S1_stoich__J1_local * S2_stoich__J1_local * 20;\n\r\nS1_stoich__J1_local @Const { } = 0.1;\r\nS2_stoich__J1_local @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Local parameters shadowing two species references and the reaction ID of their own reaction.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, HasOnlySubstanceUnits, LocalParameters\r\ntestType:        TimeCourse\r\nlevels:          2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In this model, local parameters shadow the ID of species references from the reaction they are in, as well as the ID of the reaction itself.\r\n\r\nThe model contains:\r\n* 2 species (S1, S2)\r\n* 3 local parameters (J1.S1_stoich, J1.S2_stoich, J1.J1)\r\n* 1 compartment (C)\r\n* 2 species references (S1_stoich, S2_stoich)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J1: S1 -> S2 | $S1_stoich * S2_stoich * J1 * 200$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial amount of species S1 | $2$ | variable |\r\n| Initial amount of species S2 | $3$ | variable |\r\n| Initial value of local parameter 'J1.S1_stoich' | $0.1$ | constant |\r\n| Initial value of local parameter 'J1.S2_stoich' | $0.1$ | constant |\r\n| Initial value of local parameter 'J1.J1' | $0.1$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial value of species reference 'S1_stoich' | $1$ | constant |\r\n| Initial value of species reference 'S2_stoich' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 2;\r\nS2 @Species { compartment: C, isAmount: true, } .= 3;\n\r\nJ1 @Reaction { actors: S1 = S2, };\r\nJ1 := S1_stoich__J1_local * S2_stoich__J1_local * J1__J1_local * 200;\n\r\nS1_stoich__J1_local @Const { } = 0.1;\r\nS2_stoich__J1_local @Const { } = 0.1;\r\nJ1__J1_local @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Parameters with different capitalizations.\r\ncomponentTags:   Parameter\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A simple model to ensure that the simulator is case-sensitive.\r\n\r\nThe model contains:\r\n* 3 parameters (param, Param, pArAm)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter param | $3$ | constant |\r\n| Initial value of parameter Param | $4$ | constant |\r\n| Initial value of parameter pArAm | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nparam @Const { } = 3;\r\nParam @Const { } = 4;\r\npArAm @Const { } = 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Species with different capitalizations.\r\ncomponentTags:   Compartment, Species\r\ntestTags:        Amount\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A simple model to ensure that the simulator is case-sensitive.\r\n\r\nThe model contains:\r\n* 3 species (spec, Spec, sPeC)\r\n* 1 compartment (C)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species spec | $3$ | variable |\r\n| Initial concentration of species Spec | $4$ | variable |\r\n| Initial concentration of species sPeC | $5$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\n\r\nspec @Species { compartment: C, } .= 3;\r\nSpec @Species { compartment: C, } .= 4;\r\nsPeC @Species { compartment: C, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Compartments with different capitalizations.\r\ncomponentTags:   Compartment\r\ntestTags:        MultiCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A simple model to ensure that the simulator is case-sensitive.\r\n\r\nThe model contains:\r\n* 3 compartments (comp, Comp, cOmP)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial volume of compartment 'comp' | $3$ | constant |\r\n| Initial volume of compartment 'Comp' | $4$ | constant |\r\n| Initial volume of compartment 'cOmP' | $5$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ncomp @Compartment { boundary: true, } .= 3;\r\nComp @Compartment { boundary: true, } .= 4;\r\ncOmP @Compartment { boundary: true, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Species in compartments with different capitalizations.\r\ncomponentTags:   Compartment, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A simple model to ensure that the simulator is case-sensitive.\r\n\r\nThe model contains:\r\n* 3 species (spec, Spec, sPeC)\r\n* 2 compartments (C, c)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species spec | $3$ | variable |\r\n| Initial concentration of species Spec | $4$ | variable |\r\n| Initial concentration of species sPeC | $5$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'c' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\r\nc @Compartment { boundary: true, } .= 2;\n\r\nspec @Species { compartment: C, } .= 3;\r\nSpec @Species { compartment: c, } .= 4;\r\nsPeC @Species { compartment: C, } .= 5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Species in reactions with different capitalizations.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A simple model to ensure that the simulator is case-sensitive.\r\n\r\nThe model contains:\r\n* 3 species (spec, Spec, sPeC)\r\n* 2 compartments (C, c)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J: -> spec | $1$ |\r\n| j: -> Spec + 2sPeC | $2$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species spec | $3$ | variable |\r\n| Initial concentration of species Spec | $4$ | variable |\r\n| Initial concentration of species sPeC | $5$ | variable |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'c' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\r\nc @Compartment { boundary: true, } .= 2;\n\r\nspec @Species { compartment: C, } .= 3;\r\nSpec @Species { compartment: c, } .= 4;\r\nsPeC @Species { compartment: C, } .= 5;\n\r\nJ @Reaction { actors:  = spec, };\r\nJ := 1;\r\nj @Reaction { actors:  = Spec + 2*sPeC, };\r\nj := 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Species in reactions with different capitalizations.\r\ncomponentTags:   Compartment, Parameter, Reaction, Species\r\ntestTags:        Amount, MultiCompartment, NonUnityCompartment, NonUnityStoichiometry\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n A simple model to ensure that the simulator is case-sensitive.\r\n\r\nThe model contains:\r\n* 3 species (spec, Spec, sPeC)\r\n* 2 parameters (K, k)\r\n* 2 compartments (C, c)\r\n\r\nThere are 2 reactions:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J: -> spec | $K$ |\r\n| j: -> Spec + 2sPeC | $k$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species spec | $3$ | variable |\r\n| Initial concentration of species Spec | $4$ | variable |\r\n| Initial concentration of species sPeC | $5$ | variable |\r\n| Initial value of parameter K | $1$ | constant |\r\n| Initial value of parameter k | $2$ | constant |\r\n| Initial volume of compartment 'C' | $1$ | constant |\r\n| Initial volume of compartment 'c' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 1;\r\nc @Compartment { boundary: true, } .= 2;\n\r\nspec @Species { compartment: C, } .= 3;\r\nSpec @Species { compartment: c, } .= 4;\r\nsPeC @Species { compartment: C, } .= 5;\n\r\nJ @Reaction { actors:  = spec, };\r\nJ := K;\r\nj @Reaction { actors:  = Spec + 2*sPeC, };\r\nj := k;\n\r\nK @Const { } = 1;\r\nk @Const { } = 2;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        A reaction with a species in a 0-dimensional compartment.\r\ncomponentTags:   Compartment, Reaction, Species\r\ntestTags:        0D-Compartment, Amount, NonUnityCompartment\r\ntestType:        TimeCourse\r\nlevels:          3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\n In SBML L3v2, there were special rules for when a compartment had a spatialDimensions of 0.  Those rules were removed for SMBL L3, so a model with a 0D compartment now behaves exactly the same as if the compartment had some other dimensionality.  This model tests a non-unity compartment in a reaction, and gives the species an initial concentration, to ensure the compartment's size is being properly handled.\r\n\r\nThe model contains:\r\n* 1 species (S1)\r\n* 1 compartment (C)\r\n\r\nThere is one reaction:\r\n\r\n[{width:30em,margin: 1em auto}|  *Reaction*  |  *Rate*  |\r\n| J: -> S1 | $1.5$ |]\r\n\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial concentration of species S1 | $1$ | variable |\r\n| Initial volume of compartment 'C' | $2$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nC @Compartment { boundary: true, } .= 0;\n\r\nS1 @Species { compartment: C, isAmount: true, } .= 1 * C;\n\r\nJ @Reaction { actors:  = S1, };\r\nJ := 1.5;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Test SBML IDs named 'inf'\r\ncomponentTags:   Parameter\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis tests whether parameters named 'inf' are properly handled by the simulator.\r\n\r\nThe model contains:\r\n* 3 parameters (INF, Inf, inf)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter INF | $10$ | constant |\r\n| Initial value of parameter Inf | $1$ | constant |\r\n| Initial value of parameter inf | $0.1$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nINF @Const { } = 10;\r\nInf @Const { } = 1;\r\ninf @Const { } = 0.1;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Test SBML IDs named 'inf'\r\ncomponentTags:   InitialAssignment, Parameter\r\ntestTags:        InitialValueReassigned\r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis tests whether parameters named 'inf' are properly handled by the simulator when assigned as values to other parameters.\r\n\r\nThe model contains:\r\n* 7 parameters (INF, Inf, inf, a, b, c, d)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter INF | $10$ | constant |\r\n| Initial value of parameter Inf | $1$ | constant |\r\n| Initial value of parameter inf | $0.1$ | constant |\r\n| Initial value of parameter a | $INF$ | constant |\r\n| Initial value of parameter b | $Inf$ | constant |\r\n| Initial value of parameter c | $inf$ | constant |\r\n| Initial value of parameter d | $INF$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\nvolume #defineUnit { units: litre, };\r\narea #defineUnit { units: metre^2, };\r\nlength #defineUnit { units: metre, };\r\nsubstance #defineUnit { units: mole, };\r\ntime #defineUnit { units: second, };\r\n\r\nt @TimeScale { };\n\r\nINF @Record { } .= 10;\r\nInf @Record { } .= 1;\r\ninf @Record { } .= 0.1;\r\na @Record { } .= INF;\r\nb @Record { } .= Inf;\r\nc @Record { } .= inf;\r\nd @Record { } .= Infinity;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Test SBML IDs named 'true'\r\ncomponentTags:   Parameter\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis tests whether parameters named 'true' are properly handled by the simulator when assigned as values to other parameters.\r\n\r\nThe model contains:\r\n* 3 parameters (true, True, TRUE)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter true | $10$ | constant |\r\n| Initial value of parameter True | $20$ | constant |\r\n| Initial value of parameter TRUE | $30$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\ntrue @Const { } = 10;\r\nTrue @Const { } = 20;\r\nTRUE @Const { } = 30;\n\r\n"}
{"prompt":"Create Heta model\n\r\ncategory:        Test\r\nsynopsis:        Test SBML IDs named 'false'\r\ncomponentTags:   Parameter\r\ntestTags:        \r\ntestType:        TimeCourse\r\nlevels:          1.2, 2.1, 2.2, 2.3, 2.4, 2.5, 3.1, 3.2\r\ngeneratedBy:     Analytic\r\npackagesPresent: \r\n\r\nThis tests whether parameters named 'false' are properly handled by the simulator.\r\n\r\nThe model contains:\r\n* 3 parameters (false, False, FALSE)\r\nThe initial conditions are as follows:\r\n\r\n[{width:35em,margin: 1em auto}|       | *Value* | *Constant* |\r\n| Initial value of parameter false | $4$ | constant |\r\n| Initial value of parameter False | $5$ | constant |\r\n| Initial value of parameter FALSE | $6$ | constant |]\r\n\r\nNote: The test data for this model was generated from an analytical\r\nsolution of the system of equations.\r\n\r\n","completion":"\r\n\r\nt @TimeScale { };\n\r\nfalse @Const { } = 4;\r\nFalse @Const { } = 5;\r\nFALSE @Const { } = 6;\n\r\n"}
